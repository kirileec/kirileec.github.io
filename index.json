[{"content":"\n\n# 使用Mac的服务来进行自动化操作\n\n`⌥`+`␣`, 输入 `Auto` 运行 `自动操作`, 或者在`启动台`搜索`自动操作`, 我用的是Alfred\n\n创建一个快速操作(齿轮图标), 工作流程收到当前 选择 图像文件 位于 访达\n\n## 使用到的资源有 \n- `资源库`-\u003e`文件和文件夹`-\u003e`给访达项目重新命名`\n- `资源库`-\u003e`文件和文件夹`-\u003e`复制访达项目`\n- `资源库`-\u003e`照片`-\u003e`缩放图像`\n\n\n## 详细步骤如下\n\n1. `给访达项目重新命名` -\u003e `添加文本` -\u003e `@3x` `名称之后`\n2. `复制访达项目`\n3. `缩放图像`-\u003e `按百分比` `66`\n4. `复制访达项目`\n5. `给访达项目重新命名`-\u003e `替换文本` -\u003e `@3x_副本` 替换为 `@2x`\n6. `复制访达项目`\n7. `缩放图像`-\u003e `按百分比` `50`\n8. `给访达项目重新命名`-\u003e `替换文本` -\u003e `@2x_副本` 替换为 `空`(不填)\n\n`⌘`+`S`保存, 输入一个名称, 然后在访达里选择一个文件, 右键菜单的服务里就出现了刚添加的服务了\n\nPS: @3x_副本 这一串在不同系统可能不一样, 可能有些系统是 `@3x“的副本`, 需要试一下才知道, 如果有引号在, 那么在重新命名之前要先把引号替换为空\n","cover":"","link":"post-create-1x-2x-3x-pics-for-ios-app.html","preview":"","title":"为XCode自动创建 1x 2x 3x 图片"},{"content":"\n\n## centos nginx install\n\n```shell\nsudo yum install yum-utils -y\nvim /etc/yum.repos.d/nginx.repo\n\n[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\nsudo yum-config-manager --enable nginx-mainline\n\nsudo yum install nginx -y\n```\n\n## https -\u003e https\n\n```nginx\nproxy_set_header Host example.com;\nproxy_ssl_name        example.com;\nproxy_pass            https://1.2.3.4;\n```\n\n## add query param\n\n```nginx\nlocation  /XX/XX {     \n    set $args \"$args\u0026a1=xxx\u0026a2=xxx\";      \n    proxy_ pass  http://ip:port/xxxx;  \n}\n```\n\n## .Net Core \n\n```nginx\nlocation / {\n    proxy_pass http://localhost:5000;\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection keep-alive;\n    proxy_set_header Host $host;\n    proxy_cache_bypass $http_upgrade;\n}\n```\n\n## optimization\n\n```nginx\n# 线程优化\n\nworker_processes  1;  # 根据cpu核数调整\nworker_rlimit_nofile 65535;\nevents {\n    use epoll;  # linux 才能用\n    worker_connections  65535;\n    multi_accept on;\n}\n\n# 一般优化\ntcp_nopush     on;\n\nkeepalive_timeout  60;\ntcp_nodelay on;\nclient_header_buffer_size 4k;\nopen_file_cache max=102400 inactive=20s;\nopen_file_cache_valid 30s;\nopen_file_cache_min_uses 1;\nclient_header_timeout 15;\nclient_body_timeout 15;\nreset_timedout_connection on;\nsend_timeout 15;\nserver_tokens off;\nclient_max_body_size 10m;\n\n# gzip\ngzip on;\ngzip_disable \"msie6\"; \ngzip_vary on; \ngzip_proxied any;\ngzip_comp_level 8; #压缩级别\ngzip_buffers 16 8k;\n#gzip_http_version 1.1;\ngzip_min_length 100; #不压缩临界值\ngzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;\n\n\n# 指定文件类型进行缓存\nlocation ~* \\.(ico|jpe?g|gif|png|bmp|swf|flv)$ {\n    expires 30d;\n    #log_not_found off;\n    access_log off;\n}\n\nlocation ~* \\.(js|css)$ {\n    expires 7d;\n    log_not_found off;\n    access_log off;\n}\n```\n\n其中, gzip和缓存可以放到 server下, 设置某一个网站生效","cover":"","link":"something-about-nginx.html","preview":"","title":"something about nginx"},{"content":"\n\n```shell\nyum list installed mysql*\nrpm –qa|grep mysql*\nyum list mysql*\n\nyum install mysql\nsudo rpm -Uvh http://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\nyum repolist enabled | grep mysql.*\n\nyum install mysql-community-server\n\nsystemctl start  mysqld\ngrep \"password\" /var/log/mysqld.log\nmysql -uroot -p\n\nset password for root@localhost = password('password'); \nALTER USER 'root'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'password' WITH GRANT OPTION;\nFLUSH PRIVILEGES;\n```","cover":"","link":"centos-install-mysql.html","preview":"","title":"centos install mysql"},{"content":"\n\n当我安装完执行 `mysql_secure_installation` 想要设置一个密码的时候, 提示我\n\n```sh\nError: Access denied for user 'root'@'localhost' (using password: YES)\n```\n这就尼玛离谱了, 还好找到了一个破罐子破摔的方法\n\n```sh\nbrew services stop mysql\npkill mysqld\nrm -rf /usr/local/var/mysql/ # NOTE: this will delete your existing database!!!\nbrew postinstall mysql\nbrew services restart mysql\nmysql -uroot\n\nALTER USER 'root'@'localhost' IDENTIFIED BY '新密码';\nexit\n```\n","cover":"","link":"macos-homebrew-mysql-totally-reset-root-password.html","preview":"","title":"macOS homebrew mysql totally reset root password"},{"content":"\n\n\u003e https://support.apple.com/zh-cn/HT204063\n\n最近macOS升级到10.15.6版本的时候, 出现无法安装更新的问题, 重试了好几天, 没戏. \n\n关机之后, 按住\n\n\u003cp\u003e\u003cimg src=\"https://support.apple.com/library/content/dam/edam/applecare/images/en_US/keyboards/macos-nvram-option-key.png\" width=\"80\" alt=\"Option 键\"\u003e\u003cimg src=\"https://support.apple.com/library/content/dam/edam/applecare/images/en_US/keyboards/mac-nvram-add-icon.png\" width=\"35\" alt=\"加\"\u003e\u003cimg src=\"https://support.apple.com/library/content/dam/edam/applecare/images/en_US/keyboards/macos-nvram-command-key.png\" width=\"95\" alt=\"Command 键\"\u003e\u003cimg src=\"https://support.apple.com/library/content/dam/edam/applecare/images/en_US/keyboards/mac-nvram-add-icon.png\" width=\"35\" alt=\"加\"\u003e\u003cimg src=\"https://support.apple.com/library/content/dam/edam/applecare/images/en_US/keyboards/macos-nvram-p-key.png\" width=\"72\" alt=\"P 键\"\u003e\u003cimg src=\"https://support.apple.com/library/content/dam/edam/applecare/images/en_US/keyboards/mac-nvram-add-icon.png\" width=\"35\" alt=\"加\"\u003e\u003cimg src=\"https://support.apple.com/library/content/dam/edam/applecare/images/en_US/keyboards/macos-nvram-r-key.png\" width=\"72\" alt=\"R 键\"\u003e\u003c/p\u003e\n\n\u003ckbd\u003e⌥\u003c/kbd\u003e + \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003eP\u003c/kbd\u003e+ \u003ckbd\u003eR\u003c/kbd\u003e\n\n会自动开机, 第二次看到苹果标志后就可以松开了 \n\n","cover":"","link":"mac-reset-nvram-if-update-failed.html","preview":"","title":"macOS reset nvram if update failed"},{"content":"\n\n树莓派\n\n```\n[global]\nworkgroup = WORKGROUP\nserver string Samba Server Version %v\nsecurity = user\nmap to guest = Bad User\nguest account = root\n[deploy]\ncomment = \npath = /share\nbrowseable = yes\nwriteable = yes\nguest ok = yes\ncreate mode = 0777\ndirectory mode = 2777\n```\n\n```\nsudo samba restart\n```","cover":"","link":"samba-guest-no-password.html","preview":"","title":"samba 无密码访问"},{"content":"\n\n## 准备\n\n- 先搞定账号, 开通服务什么的\n- 创建应用\n- 创建完后, 点进去, 到 `初始化配置`-\u003e`代码配置`, 检查一下包名, 点击 `下载配置`, 得到一个config文件\n\n## 创建工程\n\n- 根据 `https://help.aliyun.com/document_detail/155844.html?spm=a2c4g.11186623.6.620.7c66569eYaSB82`安装插件, 目前该插件已经支持Android Studio 4.0\n\n- 预先准备好一个jks签名文件和你要开发的app的包名, 根据`https://help.aliyun.com/document_detail/112551.html?spm=a2c4g.11186623.6.1277.f5754728oUkDSw`去申请UC SDK 的KEY\n\n- 在AS中, `File`-\u003e`New`-\u003e`Start a New mPaas Project`, 选择Inside工程即可, H5够用了\n\n  ![](/images/Snipaste_2020-06-23_09-04-23.png)\n\n- 接下来一个页面, 在Windows上乱码,  从上到下分别是\n\n![](/images/Snipaste_2020-06-23_09-05-39.png)\n\n- 组件的话看着选, 一般日志啥的现在不选以后也要选上的, 全选上也问题不大就是apk体积会比较大\n\n- 创建完工程之后, 先做这么几件事, 否则**掉坑里都不知道哪里踩空了**\n  - 我创建完工程默认啥都没有, 所以先创建 MyApplication 和 MainActivity (记得勾选 Launcher Activity, 好久没建工程还以为那个 intent-filter 都是自己手动加的 😓)\n  - `android:theme=\"@style/Theme.AppCompat.Light\"` 给AndroidManifest.xml 加个这玩意, 尼玛没有的时候启动app就崩溃, 然后报错信息要翻好几遍日志才能看到, 真是😅\n  - 同理 `android:name=\".MyApplication\"`这个也改了\n\n## 准备离线包\n\n- 到mPaas控制台的应用管理页面, 点应用下方的🚀,  然后选择离线包管理, 新建一个离线包(差不多就是app名称的意思)\n\n- **H5App ID** 随便填8位数字, 测试的时候随便填, 正式用的时候还是要简单管理下, 不然每次都要到控制台找, 多麻烦\n\n- 添加离线包, 主要是离线包打包问题, 按这个顺序\n\n  - 找个目录创建以**H5App ID**为名的文件夹, 例如 `19981998`\n\n  - 进到该目录创建 `www`目录\n  - `www`目录里面放入你真实的打包的H5文件(`index.html`)\n  - windows上直接右键`19981998`这个目录, `发送到`-`Zip压缩文件`\n  - 保证双击zip文件看到的目录结构第一层是这个`19981998`就行了\n  - ok 上传上去\n\n- 主入口 `/www/index.html`, 勾上 `已确认以上信息准确，提交后不再修改`, 提交\n\n- 下载AMR和配置文件, 一个是 `19981998_0.0.0.2.amr` id+版本号.amr的压缩包, 另一个是h5_json.json\n\n![](/images/Snipaste_2020-06-23_09-30-45.png)\n\n- AS选择Project, 然后在main下创建assets目录, 把俩文件丢进去\n\n  ![](/images/image-20200623093452742.png)\n\n## 写代码\n\n#### MyApplication重载onCreate\n\n```java\n@Override\npublic void onCreate() {\n    super.onCreate();\n    QuinoxlessFramework.init();\n}\n```\n\n#### 重载attachBaseContext\n\n```java\n@Override\nprotected void attachBaseContext(Context base) {\n    super.attachBaseContext(base);\n\n    QuinoxlessFramework.setup(this, new IInitCallback() {\n        @Override\n        public void onPostInit() {\n            // 在这里开始使用mPaaS功能\n            loadOfflineNebula();\n        }\n    });\n}\nprivate void loadOfflineNebula() {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                // 此方法为阻塞调用，请不要在主线程上调用内置离线包方法。如果内置多个amr包，要确保文件已存在，如不存在，会造成其他内置离线包失败。\n                // 此方法仅能调用一次，多次调用仅第一次调用有效。\n                MPNebula.loadOfflineNebula(\"h5_json.json\", new MPNebulaOfflineInfo(\"19981998_0.0.0.2.amr\", \"19981998\", \"0.0.0.2\"));\n            }\n        }).start();\n    }\n```\n\n#### MainActivity里搞个按钮\n\n```java\nfindViewById(R.id.start_url_btn).setOnClickListener(new View.OnClickListener(){\n    @Override\n    public void onClick(View v) {\n        MPNebula.startApp(\"19981998\");\n    }\n});\n```\n\n#### AndroidManifest.xml加上UC SDK的AppKey\n\n```xml\n\u003cmeta-data\n            android:name=\"UCSDKAppKey\"\n            android:value=\"***\" /\u003e\n```\n\n#### 兼容Android 9 + \n\n`res/xml` 下创建 `network_security_config.xml`, 内容为\n\n```xml\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cnetwork-security-config\u003e\n    \u003cbase-config cleartextTrafficPermitted=\"true\"\u003e\n        \u003ctrust-anchors\u003e\n            \u003ccertificates src=\"system\" /\u003e\n        \u003c/trust-anchors\u003e\n    \u003c/base-config\u003e\n\u003c/network-security-config\u003e\n```\n\n`AndroidManifest.xml`  `\u003capplication\u003e`下加上 `android:networkSecurityConfig=\"@xml/network_security_config\"`\n\n#### 离线包自动更新\n\n`MainActivity`\n\n```java\nToast.makeText(MainActivity.this, \"检查应用更新\", Toast.LENGTH_SHORT).show();\n        MPNebula.updateAllApp(new MpaasNebulaUpdateCallback() {\n            @Override\n            public void onResult(final boolean success, boolean isLimit) {\n                runOnUiThread(new Runnable() {\n                    @Override\n                    public void run() {\n                        MPNebula.setCustomViewProvider(new H5ViewProviderImpl());\n                        if (success) {\n                            Toast.makeText(MainActivity.this, \"应用更新完成即将打开\", Toast.LENGTH_SHORT).show();\n                            MPNebula.startApp(\"19981998\");\n                        } else {\n                            MPNebula.startApp(\"19981998\");\n                        }\n\n                    }\n                });\n            }\n        }, true);\n```\n\n#### 离线包不能检查到更新的问题解决\n\n-  https://help.aliyun.com/document_detail/159033.html?spm=a2c4 根据该链接进行Charles抓包 https://charles.ren, 主要检查请求体中是否有nebula-*-all, 如果有, 并且没有Response进行下一步\n- defaultConfig 下增加 abiFilters 'armeabi' 过滤so\n- 客户端版本号和离线包版本号都改成1.0.0.* 这样的版本号\n- 回忆一下, 当初在控制台的代码配置处下载配置的时候, 有没有上传APK文件, 参考 https://help.aliyun.com/document_detail/164968.html?spm=a2c4g.11186623.6.566.22813e52mE41Ph, 每次下载都要上传apk, 因为每次都会被清理掉. 如果没上传, 那么下载下来的配置文件中 base64Code 为空, 将导致检查更新时鉴权不通过","cover":"","link":"mpaas-inside-h5.html","preview":"","title":"阿里mPaas Inside 接入H5 (Android)"},{"content":"\n\n```nginx\nstream {\n    upstream redis {\n        server 127.0.0.1:6379 max_fails=3 fail_timeout=30s; \n    }\n    server {\n        listen 6379;\n        proxy_connect_timeout 1s;\n        proxy_timeout 3s;\n        proxy_pass redis;\n    }\n}\n```\n\n放到 http { } 的前面\n","cover":"","link":"nginx-proxypass-tcp.html","preview":"","title":"nginx proxypass tcp"},{"content":"\n\n### 个人常用手势\n\n- 三指 =\u003e 拖动, 万物都可拖\n- 三指轻触 =\u003e 查询\n- 二指拖动 =\u003e 滚动\n- 四指左右滑动 =\u003e 切换桌面(全屏)\n- 二指轻触 =\u003e 右键菜单\n- 一指放在触摸板上另外一指轻触 =\u003e 新窗口打开(Chrome)\n- 双指左右滑 =\u003e 前进后退(Chrome)","cover":"","link":"mac-touchpad-gesture.html","preview":"","title":"mac 触摸板手势"},{"content":"\n\n## 准备工作\n\n1. 生成CA证书\n   \n```sh\nopenssl genrsa -out server.key 2048  # 私钥\nopenssl req -new -x509 -sha256 -key server.key  -out server.crt -days 36500 # 公钥\n```\n\n   公钥会需要填写信息, 主要有一个 `Common Name` 需要记录下来, 比如我填写的是 `deploy`, 当然你可以填写任意字符串, 记下来就行.\n\n   36500表示100年有效, 自签证书就久一点好了\n\n2. 安装protobuf生成工具\n   \n```sh\ngo get -u github.com/golang/protobuf/protoc-gen-go\n```\n\n安装完后, 终端输入`protoc`可以输出帮助信息就准备完成了\n\n\n## 服务端\n\n- proto接口定义\n   \n新建一个go module项目, 创建proto目录, 再创建fs.proto文件. 如果IDE提示装插件就装上\n\n```\nsyntax = \"proto3\";\n\npackage proto;\noption go_package = \".;proto\";\n\nservice FileService {\n  rpc Upload(FSReq) returns (FSResp) {}\n}\n\nmessage FSReq {\n  string dstDir = 1;\n  string projName =2;\n  string name = 3;\n  int32 projType = 4;\n  bool ifReboot =5;\n  string hash = 6;\n  int64 filelen = 7;\n  bytes file = 8;\n}\n\nmessage FSResp {\n  bool status = 1;\n  string message = 2;\n}\n\n```\n    \n\n- 生成 *.pb.go\n   \n```bash\nprotoc --go_out=plugins=grpc:. --go_opt=paths=source_relative proto/fs.proto\n```\n会在proto目录下生成fs.pb.go\n\n**或者**\n\n![](images/idea-filewatcher-protobuf-gen-setting.png)\n\n让ide自动生成\n\n\n- server.go\n\n```go\npackage main\n\nimport (\n\t\"context\"\n\t\"crypto/sha256\"\n\t\"fmt\"\n\t\"github.com/linxlib/logs\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials\"\n\t\"grpc_startup/proto\"\n\t\"log\"\n\t\"math\"\n\t\"net\"\n)\n\nconst (\n\tport = \":50051\"\n)\n\ntype server struct {\n}\n\n// verifyFile 校验下上传的数据包是否完整, 通过Sha256和文件数据长度两个进行判断\nfunc (s *server) verifyFile(file []byte, hash string, length int64) bool {\n\th := sha256.New()\n\th.Write(file)\n\tmyHash := fmt.Sprintf(\"%x\", h.Sum(nil))\n\tlogs.Info(\"hash:\", hash, \" myHash:\", myHash, \" len:\", length, \" myLen:\", len(file))\n\treturn hash == myHash\n}\n\nfunc (s *server) Upload(ctx context.Context, in *proto.FSReq) (*proto.FSResp, error) {\n\tif !s.verifyFile(in.File, in.Hash, in.Filelen) {\n\t\treturn \u0026proto.FSResp{\n\t\t\tStatus:  false,\n\t\t\tMessage: \"数据包哈希校验失败，请重新部署\",\n\t\t}, nil\n\t}\n\treturn \u0026proto.FSResp{\n\t\tStatus:  true,\n\t\tMessage: \"received\",\n\t}, nil\n}\n\nfunc main() {\n\tlis, err := net.Listen(\"tcp\", port)\n\tif err != nil {\n\t\tlogs.Fatalf(\"failed to listen: %v\", err)\n\t}\n\tc, err := credentials.NewServerTLSFromFile(\"./server.crt\", \"./server.key\")\n\tif err != nil {\n\t\tlog.Fatalf(\"credentials.NewServerTLSFromFile err: %v\", err)\n\t}\n\t//由于要发送较大的压缩包，默认为 4M。\n\t//如果需要向客户端发送大文件则增加一条grpc.MaxSendMsgSize()\n\ts := grpc.NewServer(\n\t\tgrpc.Creds(c),\n\t\tgrpc.MaxRecvMsgSize(math.MaxInt64))\n\t\t\n\t//注册服务\n\tproto.RegisterFileServiceServer(s, \u0026server{})\n\n\tif err := s.Serve(lis); err != nil {\n\t\tlog.Fatalf(\"failed to serve: %v\", err)\n\t}\n}\n```\n\n这样一个使用CA证书可传输大文件的grpc服务器就跑起来了\n\n\n## go客户端\n\n```go\npackage main\n\nimport (\n\t\"context\"\n\t\"crypto/sha256\"\n\t\"fmt\"\n\t\"github.com/linxlib/conv\"\n\t\"github.com/linxlib/logs\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials\"\n\t\"grpc_startup/proto\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"time\"\n)\n\nconst (\n\taddress = \"localhost:50051\"\n)\n\nfunc main() {\n\t// 注意这里的deploy， 需要和证书公钥生成时的 Common Name 对应\n\tc, err := credentials.NewClientTLSFromFile(\"./server.crt\", \"deploy\")\n\tif err != nil {\n\t\tlog.Fatalf(\"credentials.NewClientTLSFromFile err: %v\", err)\n\t}\n\tconn, err := grpc.Dial(address, grpc.WithTransportCredentials(c))\n\tif err != nil {\n\t\tlog.Fatalf(\"did not connect: %v\", err)\n\t}\n\tdefer conn.Close()\n\tclient := proto.NewFileServiceClient(conn)\n\n\t// 30秒的上下文, 传输大文件适当扩大时间\n\tctx, cancel := context.WithTimeout(context.Background(), time.Second*30)\n\tdefer cancel()\n\n\tbs, _ := ioutil.ReadFile(\"./1.0-window.7z\")\n\tfilelen := conv.Int64(len(bs))\n\th := sha256.New()\n\th.Write(bs)\n\tmyhash := fmt.Sprintf(\"%x\", h.Sum(nil))\n\tlogs.Info(\"myhash:\", myhash)\n\tstart := time.Now()\n\tr, err := client.Upload(ctx, \u0026proto.FSReq{\n\t\tDstDir:   \"ehw\",\n\t\tProjName: \"dsaudg\",\n\t\tName:     \"dasgf\",\n\t\tProjType: 1,\n\t\tHash:     myhash,\n\t\tFilelen:  filelen,\n\t\tIfReboot: false,\n\t\tFile:     bs,\n\t})\n\tend := time.Now().Sub(start).Seconds()\n\tkb := filelen / 1024\n\tlogs.Info(\"time:\", end, \" file size:\", kb, \"KB\")\n\tif err != nil {\n\t\tlog.Fatalf(\"could not upload: %v\", err)\n\t}\n\tlog.Printf(\"Upload: %s\", r.Message)\n}\n\n```\n\n主要需要注意的就是 `Common Name`, `NewClientTLSFromFile`的参数二, 这俩需要一样.\n\n还有上下文的长度根据具体传输的文件大小还有网络状况而定\n\n\n## C# WinForm 客户端\n\n1. 依赖如下\n  ![](images/grpc-csharp-nuget-package.png)\n2. 拷贝fs.proto到解决方案下, 在安装了上图的 `Grpc.Tools` 之后, 选中fs.proto文件, 下方的`生成操作`应该会多出一个`Protobuf`, 选择这个, 重新生成下项目, 就可以在 `obj/Debug` 下看到生成的 `Fs.cs` `FsGrpc.cs` 两个文件了\n\n3. 准备好一个比较大的压缩包(100M以上吧), 和上面生成的 server.crt, 上代码\n\n```csharp\nprivate void button1_Click(object sender, EventArgs e)\n{\n\tvar secureChanel = new SslCredentials(File.ReadAllText(\"server.crt\"));\n\tvar channOptions = new List\u003cChannelOption\u003e\n\t{\n\t\tnew ChannelOption(ChannelOptions.SslTargetNameOverride,\"deploy\")\n\t};\n\tChannel channel = new Channel(\"127.0.0.1:50051\", secureChanel , channOptions);\n\n\tvar client = new FileServiceClient(channel);\n\tvar req = new Proto.FSReq();\n\treq.DstDir = \"ssdd\";\n\treq.IfReboot = false;\n\treq.Name = \"sadas\";\n\treq.ProjName = \"dsada\";\n\treq.ProjType = 3;\n\n\tvar file = File.ReadAllBytes(\"1.0-window.7z\");\n\tSHA256Managed Sha256 = new SHA256Managed();\n\tbyte[] bs = Sha256.ComputeHash(file);\n\tvar hash = BitConverter.ToString(bs);\n\treq.Hash = hash.Replace(\"-\",\"\").ToLower();\n\treq.Filelen = file.Length;\n\treq.File = ByteString.CopyFrom(file);\n\n\tvar reply = client.Upload(req);\n\n\tMessageBox.Show(\"来自\" + reply.Message);\n\n\tchannel.ShutdownAsync().Wait();\n}\n```\n\n## 遇到的坑和总结\n\n- c# 的sha256需要做去`-`和转小写才可以和go的一样\n- grpc生成的对应bytes的类型在go和c#中不一样, c#是Google.Protobuf.ByteString\n- c#客户端中间有遇到一个`Stream removed`错误, 搜了一圈, 最终也不知道怎么解决的, 貌似重新运行了服务端就好了\n- c#的依赖装完后可以都更新到最新版本, Grpc.Net.* 的包不是给WinForm用的, 好像是给.Net Core使用的, 一直无法安装, 我还以为是.Net版本太低了\n- grpc默认的最大数据包大小为4M, 需要手动设置一下","cover":"","link":"first-try-grpc-to-transfer-file.html","preview":"","title":"初识grpc, 使用grpc传输文件"},{"content":"\n\n\n下午在我新的博客上进行搜索的时候发现有一篇文章能够搜索到, 但是点击之后打不开, 提示404.\n\n\n\n回来之后, 一顿查找猛如虎, 在经过了无数次 `./ink publish` 之后, 差点都要放弃了, 到github上和本地的public目录进行对比之后发现, 两者的目录结构完全不一样. 本地的android目录在github上显示的却是Android. `git config core.ignorecase false` 之后好像并没有用.\n\n只好使用了暴力处理方法, 直接删除掉public目录推送一次, 然后再次进行publish, 总算回复了正常","cover":"","link":"git-ignorecase-troubleshoot.html","preview":"","title":"git 忽略大小写导致的文章找不到"},{"content":"\n\n众所周知, MacBook Pro是不用关机的 🐶\n\n然而最近一段时间, 早上合盖, 中间并没有打开过, 晚上再看的时候, 电量基本都会下降 `10-30%` 不等, 经过查询搜索, 总结如下\n\n## 查询阻碍进入深度睡眠(唤醒)的原因 \n\n`pmset -g` 查看 `sleep` 那一行, 会有 `sleep prevented by` 的字样, 我看到的是`sharingd`, 根据字面意思, 应该是分享服务, 但是经过检查, 所有分享功能都已经关闭. 我回忆了一下, 也有尝试过合盖前把平时比较耗电的Chrome、IDE、虚拟机啥的都关掉, 还是会掉电\n\n推断可能不是这些前台程序导致的唤醒, 节能选项里也是没有开启小憩的\n\n最后, 找到了 `https://github.com/xinstein/PleaseSleep`, 并在今天进行了简单测试, 晚上回家后一看, 卧槽, 电量100%, 惊了!!!\n\n\n## 脚本的一点问题\n\n时间有点久了, 脚本里提到的 `Sleepwatcher` 已经从 `2.2` 更新到了 `2.2.1` 因此需要小小修改一下, 把代码贴到这里做个备份\n\n```bash\n#!/bin/bash\n\n#To use this script, open the Terminal app and go to the directry\n#where this script is located and excecute the following commands:\n\t# chmod u+x PleaseSleep\n\n\t# ./PleaseSleep install\n\t# -------- OR ---------\n\t# ./PleaseSleep remove\n\n# Get the argument\nset -e\nARG=$1\n\n# quit if any command fails\nif [ -z \"$1\" ] ; then\n\techo \"Error: No parameter. Use 'PleaseSleep install' or 'PleaseSleep remove'.\"\n\texit 1\n\n\n# REMOVE EVERYTHING\nelif [ \"$ARG\" == \"remove\" ] || [ \"$ARG\" == \"uninstall\" ]\nthen\n\techo\n\techo\n\techo \"REMOVING PleaseSleep with sleepwatcher 2.2\"\n\techo \"This will remove all PleaseSleep AND all Sleepwatcher files.\"\n\techo \"This also includes the sleep and wake scripts.\"\n\techo\n\techo \"Are you sure you want to continue?\"\n\techo \"Press Enter to continue or Crtl+c to quit\"\n\tread\n\techo \"-------------------------------------------------------------------\"\n\techo\n\n\techo \"Unloading the LaunchAgent...\"\n\tlaunchctl unload ~/Library/LaunchAgents/de.bernhard-baehr.sleepwatcher-20compatibility-localuser.plist \u0026\u003e /dev/null\n\techo \"Done.\"\n\techo \"(Press ENTER key to continue.)\"\n\tread\n\techo\n\n\techo \"Removing sleep and wake scripts ...\"\n\trm ~/.sleep \u0026\u003e /dev/null\n\trm ~/.wakeup \u0026\u003e /dev/null\n\techo \"Done.\"\n\techo \"(Press ENTER key to continue.)\"\n\tread\n\techo\n\n\techo \"Removing Sleepwatcher 2.2 and all the files ...\"\n\tsudo rm -r /usr/local/Cellar/sleepwatcher \u0026\u003e /dev/null\n\tsudo rm -r /usr/local/etc/sleepwatcher \u0026\u003e /dev/null\n\tsudo rm ~/Library/LaunchAgents/de.bernhard-baehr.sleepwatcher-20compatibility-localuser.plist \u0026\u003e /dev/null\n  \t#sudo rm /usr/local/share/man/man8/sleepwatcher.8 \u0026\u003e /dev/null\n  \t#sudo rm /etc/rc.sleep \u0026\u003e /dev/null\n  \t#sudo rm /etc/rc.wakeup \u0026\u003e /dev/null\n  \t#sudo rm -r /Library/StartupItems/SleepWatcher \u0026\u003e /dev/null\n\tsudo rm /usr/local/sbin/sleepwatcher \u0026\u003e /dev/null\n\n\techo \"Done.\"\n\techo \"(Press ENTER key to continue.)\"\n\tread\n\techo\n\n\techo \"-------------------------------------------------------------------\"\n\techo\n\n\techo \"PleaseSleep and Sleepwatcher 2.2 are successfully removed from your lovely Mac!!\"\n\techo\n\techo\n\techo\n\n\n# INSTALL EVERYTHING\nelif [ \"$1\" == \"install\" ]\nthen\n\techo\n\techo\n\techo \"INSTALLING PleaseSleep with sleepwatcher 2.2\"\n\techo\n\techo \"Are you sure you want to continue?\"\n\techo \"Press Enter to continue or Crtl+c to quit\"\n\tread\n\techo \"-------------------------------------------------------------------\"\n\techo\n\n\techo \"Gaining permissions for /usr/local ...\"\n\t# source: https://github.com/Homebrew/homebrew/blob/master/share/doc/homebrew/El_Capitan_and_Homebrew.md\n\tsudo chown -R $(whoami):admin /usr/local/*\n\techo \"Done.\"\n\techo \"(Press ENTER key to continue.)\"\n\tread\n\techo\n\n\techo \"Installing Sleepwatcher 2.2 (using the brew command).\"\n\techo \"Please follow the instructions when prompted ...\"\n\techo \"(Press ENTER key to continue.)\"\n\tread\n\techo\n\tbrew install sleepwatcher\n\techo\n\techo\n\techo \"(Press ENTER key to continue.)\"\n\tread\n\techo\n\n\techo \"Creating the sleep script ...\"\n\t\ttouch ~/.sleep\n\t\tchmod u+x ~/.sleep\n\t\techo \"#! /bin/bash\" \u003e ~/.sleep\n\t\techo \"echo\" \u003e\u003e ~/.sleep\n\t\techo \"echo `date` \\\"Sleeping\\\" \u003e\u003e /tmp/sleep.log\" \u003e\u003e ~/.sleep\n\t\techo \"/usr/sbin/networksetup setairportpower en0 off\" \u003e\u003e ~/.sleep\n\t\techo \"echo `date` `/usr/sbin/networksetup getairportpower en0` \u003e\u003e /tmp/sleep.log\" \u003e\u003e ~/.sleep\n\techo \"Done.\"\n\techo \"(Press ENTER key to continue.)\"\n\tread\n\techo\n\n\techo \"Creating the wake script ...\"\n\t\ttouch ~/.wakeup\n\t\tchmod u+x ~/.wakeup\n\t\techo \"#! /bin/bash\" \u003e ~/.wakeup\n\t\techo \"echo\" \u003e\u003e ~/.wakeup\n\t\techo \"echo `date` \\\"Waking up\\\" \u003e\u003e /tmp/sleep.log\" \u003e\u003e ~/.wakeup\n\t\techo \"sleep 7\" \u003e\u003e ~/.wakeup\n\t\techo \"/usr/sbin/networksetup setairportpower en0 on\" \u003e\u003e ~/.wakeup\n\t\techo \"echo `date` `/usr/sbin/networksetup getairportpower en0` \u003e\u003e /tmp/sleep.log\" \u003e\u003e ~/.wakeup\n\techo \"Done.\"\n\techo \"(Press ENTER key to continue.)\"\n\tread\n\techo\n\n\techo \"Copying *.plist file to ~/Library/LaunchAgents ...\"\n\tcp /usr/local/Cellar/sleepwatcher/2.2.1/de.bernhard-baehr.sleepwatcher-20compatibility-localuser.plist ~/Library/LaunchAgents\n\techo \"Done.\"\n\techo \"(Press ENTER key to continue.)\"\n\tread\n\techo\n\n\techo \"Starting PleaseSleep\"\n\tlaunchctl load ~/Library/LaunchAgents/de.bernhard-baehr.sleepwatcher-20compatibility-localuser.plist\n\techo \"Done.\"\n\techo \"(Press ENTER key to continue.)\"\n\tread\n\techo\n\techo\n\techo \"-------------------------------------------------------------------\"\n\techo\n\techo \"Path to wake script: ~/.wakeup\"\n\techo \"Path to sleep script: ~/.sleep\"\n\techo \"Path to logging file: /tmp/sleep.log\"\n\techo\n\techo \"Note that WiFi will only turn on 7 seconds AFTER your Mac has been waked\"\n\techo\n\techo \"-------------------------------------------------------------------\"\n\techo\n\techo\n\techo\n\techo \"IF NO ERRORS WERE FOUND, THEN INSTALLATION IS COMPLETE.\"\n\techo\n\techo \"Your lovely Mac will sleep like a boss now!\"\n\techo\n\techo\n\techo\n\nfi\n\n```","cover":"","link":"let-macbookpro-sleep-for-battery-saving.html","preview":"","title":"MacBook Pro 设置合盖后睡得更死"},{"content":"\n\n主机环境如下\n\n![](/images/peizhi.png)\n\n## 虚拟机设置说明\n\n- CPU都选择4核心\n- 内存大小为2G到4G不等, 因为这个大小关系不大\n- 各种设置尽量偏向于游戏方面\n\n## Parallels Desktop 安装 win7\n\n![](/images/parallels desktop benchmark win7.jpg)\n\n## VMWare fusion 安装 win10 专业版\n\n![](/images/vmware fusion benchmark win10.jpg)\n\n## Parallels Desktop 安装 win10 专业版\n\n![](/images/parallels desktop benchmark win10.jpg)\n\n## 小结\n\nPD装win7依然在CPU和显卡性能上超越了安装了win10的vmware, 但是磁盘性能真的是难看, 尝试给PD安装win10之后, 终于确定了心中的猜测, mac上虚拟机安装win7的磁盘性能真的垃圾. 原因可能是win7对于SSD的支持并不完善, 毕竟win7刚出那会儿, SSD 120G还要1000+的. 也有可能是win10这些年有特殊优化. 当然也有可能是虚拟机软件对于老的系统没有做特定的优化. \n\n本来在win7的虚拟机上玩个小游戏都能在加载页面卡住, 一度让我想要去装bootcamp了, 抱着试试的心态用vmware装了win10, 发现情况并不是那么简单. 于是就简单地搞了下对比测试, 并不严谨, 但已经可以让我作出抉择了. PD的体验感还是比较好的.\n\n","cover":"","link":"parallels-desktop-compare-to-vmware-fusion.html","preview":"","title":"parallels desktop 性能对比 vmware fusion"},{"content":"\n\n```kotlin\npackage com.zx.xiaohui.helper\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.graphics.Rect\nimport android.util.AttributeSet\nimport android.view.MotionEvent\n\n\nclass SeekbarWithThumbTouch @JvmOverloads constructor(\n    context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0\n) : androidx.appcompat.widget.AppCompatSeekBar(context, attrs, defStyleAttr) {\n    private var thumbCall: (() -\u003e Unit)? = null\n\n    @SuppressLint(\"ClickableViewAccessibility\")\n    override fun onTouchEvent(event: MotionEvent): Boolean {\n        when (event.action) {\n            MotionEvent.ACTION_DOWN -\u003e {\n                super.onTouchEvent(event)\n            }\n            MotionEvent.ACTION_MOVE -\u003e {\n                super.onTouchEvent(event)\n            }\n            MotionEvent.ACTION_UP -\u003e if (isClickThumb(event, thumb.bounds)) {\n                if (thumbCall!=null) {\n                    thumbCall!!()\n                }\n            }\n        }\n        return true\n    }\n\n    /**\n     * 设置点击事件只在thumb上有效\n     *\n     * @param event 点击事件\n     * @param rect  thumb\n     */\n    private fun isClickThumb(event: MotionEvent, rect: Rect): Boolean {\n        val x = event.x\n        val y = event.y\n        //根据左边距和thumb偏移量来确定thumb位置\n        val left = rect.left - thumbOffset + paddingLeft.toFloat()\n        val right = left + rect.width()\n        return x in left..right \u0026\u0026 y \u003e= rect.top \u0026\u0026 y \u003c= rect.bottom\n    }\n\n    fun setThumbClick(a:() -\u003e Unit) {\n        this.thumbCall = a\n    }\n\n}\n```","cover":"","link":"seekbar-with-thumb-touch.html","preview":"","title":"Seekbar With Thumb Touch"},{"content":"\n\n```kotlin\npackage com.zx.xiaohui.helper\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.content.SharedPreferences\nimport com.zx.xiaohui.App\nimport kotlin.reflect.KProperty\n\nclass Pref\u003cT\u003e(val name: String, private val default: T) {\n    private val prefs: SharedPreferences by lazy { App.instance.applicationContext.getSharedPreferences(name, Context.MODE_PRIVATE) }\n\n    operator fun getValue(thisRef: Any?, property: KProperty\u003c*\u003e): T {\n        return getSharePreferences(name, default)\n    }\n\n    operator fun setValue(thisRef: Any?, property: KProperty\u003c*\u003e, value: T) {\n        putSharePreferences(name, value)\n    }\n\n    @SuppressLint(\"CommitPrefEdits\")\n    private fun putSharePreferences(name: String, value: T) = with(prefs.edit()) {\n        when (value) {\n            is Long -\u003e putLong(name, value)\n            is String -\u003e putString(name, value)\n            is Int -\u003e putInt(name, value)\n            is Boolean -\u003e putBoolean(name, value)\n            is Float -\u003e putFloat(name, value)\n            else -\u003e throw IllegalArgumentException(\"This type of data cannot be saved!\")\n        }.apply()\n    }\n\n    @Suppress(\"UNCHECKED_CAST\")\n    private fun getSharePreferences(name: String, default: T): T = with(prefs) {\n        val res: Any? = when (default) {\n            is String -\u003e getString(name,default)\n            is Long -\u003e getLong(name, default)\n            is Int -\u003e getInt(name, default)\n            is Boolean -\u003e getBoolean(name, default)\n            is Float -\u003e getFloat(name, default)\n            else -\u003e throw IllegalArgumentException(\"This type of data cannot be saved!\")\n        }\n        return res as T\n    }\n}\n```","cover":"","link":"android-sharedpreferences-kotlin.html","preview":"","title":"Android SharedPreferences Kotlin 版"},{"content":"\n\n```kotlin\npackage com.zx.xiaohui.helper\n\nimport android.content.Context\nimport android.util.AttributeSet\n\n\nclass AlwaysMarqueeTextView : androidx.appcompat.widget.AppCompatTextView {\n    constructor(context: Context?) : super(context) {}\n    constructor(context: Context?, attrs: AttributeSet?) : super(context, attrs) {}\n    constructor(context: Context?, attrs: AttributeSet?, defStyle: Int) : super(context, attrs, defStyle) {}\n\n    override fun isFocused(): Boolean {\n        return true\n    }\n}\n```\n\n使用方法\n```xml\n\u003ccom.zx.xiaohui.helper.AlwaysMarqueeTextView\n  ...\n  android:singleLine=\"true\"\n  android:ellipsize=\"marquee\"\n\u003e\n\u003c/com.zx.xiaohui.helper.AlwaysMarqueeTextView\u003e\n```\n","cover":"","link":"always-marquee-textview.html","preview":"","title":"一直走马灯的TextView"},{"content":"\n\n```kotlin\npackage com.zx.xiaohui.helper\n\nimport android.animation.Animator\nimport android.animation.AnimatorListenerAdapter\nimport android.animation.TypeEvaluator\nimport android.animation.ValueAnimator\nimport android.content.Context\nimport android.view.View\nimport android.view.animation.LinearInterpolator\nimport android.widget.LinearLayout\nimport com.amap.api.maps.AMap\nimport com.amap.api.maps.AMapUtils\nimport com.amap.api.maps.model.*\nimport com.zx.xiaohui.R\nimport kotlin.collections.ArrayList\nimport kotlin.math.atan2\n\nclass SmoothMarker(private val context:Context,private val mAMap: AMap) : AMap.InfoWindowAdapter {\n    class LngLat(val lng: Double, val lat: Double) {\n        override fun toString(): String {\n            return \"LngLat{\" +\n                    \"lng=\" + lng +\n                    \", lat=\" + lat +\n                    '}'\n        }\n    }\n\n    class LngLatEvaluator : TypeEvaluator\u003cAny?\u003e {\n        override fun evaluate(fraction: Float, startValue: Any?, endValue: Any?): Any? {\n            val startLnglat = startValue as LngLat?\n            val endLnglat = endValue as LngLat?\n            val lng = startLnglat!!.lng + fraction * (endLnglat!!.lng - startLnglat.lng)\n            val lat = startLnglat.lat + fraction * (endLnglat.lat - startLnglat.lat)\n            return LngLat(lng, lat)\n        }\n    }\n    /**\n     * 实现此接口来监听平滑移动的过程\n     */\n    interface SmoothMarkerMoveListener {\n        fun move(curIndex:Int)\n        fun stop()\n    }\n\n\n    private var moveListener: SmoothMarkerMoveListener? = null\n\n    //每段点的队列，第一个点为起点\n    private val points: ArrayList\u003cLatLng?\u003e = arrayListOf()\n\n    //每段距离 队列  大小为points.size() - 1\n    //使用ArrayList而不是LinkedList, 方可实现拖拽进度条来从任意位置继续平滑移动\n    private val eachDistance : ArrayList\u003cDouble\u003e = arrayListOf()\n\n    private var totalDistance = 0.0 //总距离\n    private var remainDistance = 0.0 // 剩余距离\n    private var endPoint: LatLng? = null\n    private var lastEndPoint: LatLng? = null\n\n    //移动的marker\n    var marker: Marker? = null\n        private set\n    /**\n     * 平滑移动的速度，单位km/h\n     */\n    var speed = 0f\n\n    //marker动画\n    private var markerAnimator: ValueAnimator? = null\n\n    //是否暂停动画\n    private var animStop = true\n    //当前位置所对应的经纬度\n    private var currentLatLng: LatLng? = null\n    //下一个位置\n    private var nextPos: LatLng? = null\n    //一段动画被中断\n    private var animCancel = false\n    //本次动画移动的距离\n    private var currentPlayDistance = 0.0\n    //本次动画剩余距离\n    private var currentRemainDistance = 0.0\n    //悬浮跟随的窗口(移动的头像)\n    private var infoWindowLayout: LinearLayout? = null\n    //当前进行动画的那一段的索引\n    private var curIndex:Int = 0\n\n    /**\n     * 总段数, 用于进度条显示\n     */\n    var totalCount :Int = 0\n\n    /**\n     * 设置平滑移动的经纬度数组\n     *\n     * 将同时创建marker和跟随悬浮的图标\n     * @param points\n     */\n    fun setPoints(points: List\u003cLatLng\u003e) {\n        this.points.clear()\n        for (latLng in points) {\n            this.points.add(latLng)\n        }\n        if (points.size \u003e 1) {\n            endPoint = points[points.size - 1]\n            lastEndPoint = points[points.size - 2]\n        }\n        eachDistance.clear()\n        totalDistance = 0.0\n        curIndex = 0\n        totalCount = 0\n\n        //逐段计算距离\n        for (i in 0 until points.size - 1) {\n            val distance = AMapUtils.calculateLineDistance(points[i], points[i + 1]).toDouble()\n            eachDistance.add(distance)\n            totalDistance += distance\n            totalCount ++\n        }\n        remainDistance = totalDistance\n\n        val markerPoint: LatLng? = this.points.first()\n        if (marker != null) {\n            marker!!.position = markerPoint\n        } else {\n            marker = mAMap.addMarker(\n                MarkerOptions().anchor(\n                    0.5f,\n                    0.5f\n                ).icon(BitmapDescriptorFactory.fromResource(R.mipmap.baby))\n                    .alpha(0f)\n                    .setInfoWindowOffset(0,130)\n            )\n            infoWindowLayout = LinearLayout(context)\n            infoWindowLayout!!.orientation = LinearLayout.VERTICAL\n            infoWindowLayout!!.setBackgroundResource(R.mipmap.baby)\n            marker!!.position = markerPoint\n        }\n    }\n\n\n    /**\n     * 开始平滑移动\n     */\n    fun startSmoothMove() {\n        if (points.size \u003c 1) {\n            return\n        }\n        animStop = false\n\n        mAMap.setInfoWindowAdapter(this)\n\n        marker!!.showInfoWindow()\n        startRun()\n    }\n\n    /**\n     * 开始动画\n     *\n     * 递归调用\n     */\n    private fun startRun() {\n        if (curIndex\u003e=totalCount-1) {\n            setEndRotate()\n            return\n        }\n        val dis = eachDistance[curIndex]\n        val time = (dis / speed * 60 * 60).toLong()\n        //计算旋转\n        val curPos: LatLng = marker!!.position\n        nextPos = points[curIndex+1]\n\n        val rotate = getRotate(curPos, nextPos)\n        marker!!.rotateAngle = 360 - rotate + mAMap.cameraPosition.bearing\n        val curLngLat = LngLat(curPos.longitude, curPos.latitude)\n        val nextLngLat = LngLat(nextPos!!.longitude, nextPos!!.latitude)\n\n        markerAnimator = ValueAnimator.ofObject(LngLatEvaluator(), curLngLat, nextLngLat)\n        markerAnimator!!.duration = time //本段动画总时间\n        markerAnimator!!.interpolator = LinearInterpolator() //线性的动画\n\n        //动画更新marker的位置\n        markerAnimator!!.addUpdateListener { animation -\u003e\n            val lngLat: LngLat = animation.animatedValue as LngLat\n            currentLatLng = LatLng(lngLat.lat, lngLat.lng)\n\n            marker!!.position = currentLatLng\n            //当前段运动的距离\n            currentPlayDistance = dis * animation.currentPlayTime / time\n            //当前段剩下的距离\n            currentRemainDistance = remainDistance - currentPlayDistance\n            if (currentRemainDistance \u003c 0)\n                currentRemainDistance = 0.0\n\n        }\n        markerAnimator!!.addListener(object : AnimatorListenerAdapter() {\n            override fun onAnimationEnd(animation: Animator?) {\n                 if (!animCancel) {\n                     if (dis.isNaN()) {\n                         remainDistance -= 0\n                     } else {\n                         remainDistance -= dis\n                     }\n\n                } else {\n                     if (currentPlayDistance.isNaN()) {\n                         remainDistance -= 0\n                     } else {\n                         remainDistance -= currentPlayDistance\n                     }\n                }\n                //每一段动画结束后 回调索引\n                if (moveListener != null) {\n                    moveListener!!.move(curIndex)\n                }\n                //增加索引, 开始下一段\n                curIndex++\n\n                //如果不是最后一段\n                if (!animStop) {\n                    startRun()\n                    animCancel = false\n                }\n            }\n\n            override fun onAnimationCancel(animation: Animator?) {\n                animCancel = true\n            }\n        })\n        markerAnimator!!.start()\n    }\n\n    /**\n     * 设置运行时间过短导致的 终点及角度问题\n     */\n    private fun setEndRotate() {\n        val rotate = getRotate(lastEndPoint, endPoint)\n        marker!!.rotateAngle = 360 - rotate + mAMap.cameraPosition.bearing\n        marker!!.position = endPoint\n\n        marker!!.hideInfoWindow()\n        if (moveListener != null) {\n            moveListener!!.stop()\n        }\n    }\n\n    /**\n     * 根据经纬度计算需要偏转的角度\n     */\n    private fun getRotate(curPos: LatLng?, nextPos: LatLng?): Float {\n        val x1: Double = curPos!!.latitude\n        val x2: Double = nextPos!!.latitude\n        val y1: Double = curPos.longitude\n        val y2: Double = nextPos.longitude\n        return (atan2(y2 - y1, x2 - x1) / Math.PI * 180).toFloat()\n    }\n\n    /**\n     * 停止平滑移动\n     */\n    fun stopMove() {\n        if (animStop) {\n            return\n        }\n        animStop = true\n        markerAnimator!!.cancel()\n    }\n\n    /**\n     * 暂停动画\n     */\n    fun pauseMove() {\n        if (animStop) {\n            return\n        }\n        animStop = true\n        markerAnimator!!.cancel()\n    }\n\n    /**\n     * 即时修改移动速度\n     * @param speed Float 单位 km/h\n     */\n    fun changeSpeed(speed: Float) {\n        pauseMove()\n        this.speed = speed\n        resumeMove()\n    }\n\n    /**\n     * 恢复动画\n     */\n    fun resumeMove() {\n        if (!animStop) {\n            return\n        }\n        animStop = false\n        startRun()\n    }\n\n    /**\n     * 获取当前marker位置\n     */\n    val position: LatLng?\n        get() = if (marker == null) null else marker!!.position\n\n    /**\n     * 销毁\n     */\n    fun destroy() {\n        stopMove()\n        if (marker != null) {\n            marker!!.destroy()\n            marker = null\n        }\n        points.clear()\n        eachDistance.clear()\n    }\n\n    /**\n     * 开始进度拖动时调用(按下的时候), 用于暂停动画\n     */\n    fun startChangePositionIndex() {\n        pauseMove()\n    }\n\n    /**\n     * 结束禁毒拖动时调用(抬起的时候), 继续动画\n     */\n    fun endChangePositionIndex() {\n        resumeMove()\n    }\n\n    /**\n     * 进度拖动过程中调用, 用于实时地显示位置\n     * @param index Int\n     */\n    fun setPositionIndex(index:Int) {\n        curIndex = index\n        marker!!.position = points[curIndex]\n    }\n\n    fun setMoveListener(moveListener: SmoothMarkerMoveListener?) {\n        this.moveListener = moveListener\n    }\n\n\n    //region \u003c重载代码\u003e\n    override fun getInfoContents(p0: Marker?): View {\n        return infoWindowLayout!!\n    }\n\n    override fun getInfoWindow(p0: Marker?): View {\n        return infoWindowLayout!!\n    }\n    //endregion\n\n}\n```\n","cover":"","link":"amap-smoothmarker.html","preview":"","title":"高德地图平滑移动（跟踪进度）"},{"content":"\n\n# Debian 安装Docker\n\n\n1. 卸载旧的\n\n```bash\nsudo apt-get remove docker docker-engine docker.io containerd runc\n```\n\n2. 安装下前戏\n\n```bash\nsudo apt-get update\nsudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common\ncurl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -\nsudo apt-key fingerprint 0EBFCD88\n\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"\n```\n\n3. 正式安装\n\n```bash\nsudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io\n```\n\nPS: 执行 curl 时错\n\n```bash\ncurl: (77) error setting certificate verify locations:\n  CAfile: /etc/ssl/certs/ca-certificates.crt\n  CApath: /etc/ssl/certs\n```\n\n检查 `/etc/ssl/certs` 目录下是否有对应的文件, 如果没有, 则为不可抗力原因消失了, 重新安装 `ca-certificates`这个包即可.\n\n```bash\nsudo apt-get remove ca-certificates\nsudo apt-get install ca-certificates\n```\n\n","cover":"","link":"install-docker-on-debian.html","preview":"\u003ch1\u003eDebian 安装Docker\u003c/h1\u003e\n","title":"Install Docker on Debian"},{"content":"\n\n\u003ckbd\u003ecommand\u003c/kbd\u003e+\u003ckbd\u003e`\u003c/kbd\u003e","cover":"","link":"mac-switch-from-different-windows.html","preview":"","title":"Mac在同一个应用程序的不同窗口直接进行切换"},{"content":"\n\n```nginx\nlocation /admin/ {\n    proxy_set_header HOST $host;   \n    proxy_set_header X-Real-IP $remote_addr;   \n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   \n    proxy_pass http://localhost:9002/admin;\n}\n```\n\n`location` 表示要匹配的路径, `proxy_pass`则表示需要转发到的目标\n\n前者为匹配规则, 而后者的末尾是否包含 `/`符号, 意味着会不会把匹配到的内容一起带到最终的请求地址里去\n\n- 带 `/`  -\u003e 会去掉匹配的内容 \n- 不带 `/` -\u003e 原样拼装\n\n","cover":"","link":"nginx-proxy-pass.html","preview":"","title":"nginx proxy pass"},{"content":"\n安卓签名查看\n\n\n添加 %JAVA_HOME%\\bin到PATH\n\n## 查看apk签名\n\n```\nkeytool -list -printcert -jarfile /path/to/apk\n```\n\n## 查看keystore签名\n\n```\nkeytool -list -v -keystore /path/to/keystore\n```\n\n## Android Studio 使用本项目下的keystore打包\n\n```\nsigningConfigs {\n    debug {\n        storeFile file(rootProject.getRootDir().getAbsolutePath()+\"/debug.keystore\");\n    }\n}\n```\n\n## 对比两个包名一样的apk但签名是否一致\n\n**安装其中一个然后安装另外一个**","cover":"","link":"android-check-sign.html","preview":"\u003cp\u003e安卓签名查看\u003c/p\u003e\n","title":"Android Check Sign"},{"content":"\n迁移Goland和Android Studio到IDEA\n\n\n最近遇到突然要跑一段java代码, 奈何之前安装的idea已经卸载. 还尝试了在线运行代码的工具, 无果. 无奈又装了idea, 陡然想起, 这玩意好像只要装个插件就能跑go. 小小搜索一下立马决定要卸载了Goland和Android Studio, 只留一个idea即可. \n\n## Goland迁移\n\n问题不大, 需要手动安装`Go插件`和`File Watcher插件`, 安装了这俩就和`goland`一样一样了, 另外2020版本开始可以在插件商城搜索Chinese, 安装一个EAP版本的汉化补丁, 个人感觉比之前第三方的汉化插件要好点\n\n\n\n## Android Studio迁移\n\n`IDEA`安装完就自动安装了Android插件, 而如果电脑上已经安装了`Android Studio`, 那基本不需要什么设置就可以打开项目了. 遇到一个问题是: Android Studio由于是google改造版, 其内置了1.8版本的JDK, 而`IDEA`内置的JDK为最新版本, 这将导致可以build但是不能运行于模拟器的问题, 一个ClassNotDefined的报错. 解决方案为在本机安装1.8版本的JDK. 然后右击项目-\u003e项目结构-\u003e平台设置-\u003eSDK, 删掉所有不是1.8版本的条目","cover":"","link":"migrate-goland-and-android-studio-to-idea.html","preview":"\u003cp\u003e迁移Goland和Android Studio到IDEA\u003c/p\u003e\n","title":"Migrate Goland and Android Studio to IDEA"},{"content":"\n\nAndroid retrofit 调用不同的BASEURL的接口\n\n\n\n## 方法一\n\n```kotlin\n\t\t@GET(\"/api/v1/attend/report/student\")\n    fun getStudentAtt(\n                      @Query(\"imei\") imei:String,\n                      @Query(\"page\") page:Int,\n                      @Query(\"size\") size:Int\n      \t\t\t\t\t\t\t\t@Header(\"Authorization\") token: String = App.instance.token\n    )\n```\n\n可以写成这样\n\n```kotlin\n    @GET(\"http://localhost:8989/api/v1/attend/report/student\")\n    fun getStudentAtt(\n                      @Query(\"imei\") imei:String,\n                      @Query(\"page\") page:Int,\n                      @Query(\"size\") size:Int\n      \t\t\t\t\t\t\t\t@Header(\"Authorization\") token: String = App.instance.token\n    )\n```\n\n即直接写完全请求地址即可\n\n## 方法二\n\n```kotlin\n    @GET\n    fun getStudentAtt(\n      \t\t\t\t\t\t\t\t@Url url:String,\n                      @Query(\"imei\") imei:String,\n                      @Query(\"page\") page:Int,\n                      @Query(\"size\") size:Int\n      \t\t\t\t\t\t\t\t@Header(\"Authorization\") token: String = App.instance.token\n    )\n```\n\n然后由外部传入url, 这个方案有个缺陷就是`@Url`不能像下面的token一样使用默认参数(调用时可不传), 因为`@Url`不允许在`@Query`参数之后传入, 而默认参数一般都是要放在最后的.\n\n\n\n当然, 网上也有用拦截器实现的, 很明显没有上面两种实用.","cover":"","link":"retrofit-do-request-to-another-baseurl.html","preview":"\u003cp\u003eAndroid retrofit 调用不同的BASEURL的接口\u003c/p\u003e\n","title":"Retrofit do request to another BASEURL"},{"content":"\nGo Ssh Tunnel 妙用\n\n\n**这个库不稳定** 一会就连不上了, 不要用\n\n\n在开发测试的时候, 如果内网没有完整的测试环境, 测试环境为一台公网的机子, 那么对于本地调试来说, 容易有很多麻烦.\n\n就比如开发时连接的redis服务和线上测试环境连接的redis不一样时, 对于用户验证这一块就很难受了. \n\n由于redis的安全性很垃圾, 绝对不能开放到公网, 否则分分钟变成挖矿机器. 所以必须迂回一下, 曲线救国\n\n```go\npackage main\n\nimport (\n\t\"github.com/elliotchance/sshtunnel\"\n\t\"log\"\n\t\"os\"\n\t\"time\"\n)\n\nfunc main() {\n\t//测试服务器上的redis隧道\n\ttunnel := sshtunnel.NewSSHTunnel(\n\t\t\"\u003c用户名\u003e@\u003c服务器ip\u003e\",\n\t\tsshtunnel.PrivateKeyFile(\"\u003c私钥路径\u003e\"), // 1. private key\n\t\t\"127.0.0.1:6379\",\n\t\t\"6379\",\n\t)\n\ttunnel.Log = log.New(os.Stdout, \"\", log.Ldate|log.Lmicroseconds)\n\tgo tunnel.Start()\n\t\n\tselect {}\n}\n\n```\n\n这个私钥是OpenSSH的, 如果已有的私钥是ppk格式, 那就用PuttyGen转换一下.\n\n1. Conversion-\u003eImport Key\n2. Conversion-\u003eExport OpenSSH Key 保存成 key.pem\n\n放置 `key.pem` 到代码目录下\n\n之后编译运行, 就可以用 127.0.0.1:6379 来连接**连接只有测试服务器可以访问的redis服务** 了\n\n","cover":"","link":"go-ssh-tunnel.html","preview":"\u003cp\u003eGo Ssh Tunnel 妙用\u003c/p\u003e\n","title":"Go Ssh Tunnel 妙用"},{"content":"\nGit Refusing to Merge Unrelated Histories\n\n常见场景: 线上代码仓库还没有建立, 于是先在本地创建项目, 后面仓库建立好了, 想把代码推上去的时候就会出现这个了.\n\n原因就是本地仓库和线上仓库不被认为是一个仓库, 因为两边都有各自的提交记录.\n\n```bash\ngit pull origin master --allow-unrelated-histories\n```\n","cover":"","link":"git-refusing-to-merge-unrelated-histories.html","preview":"\u003cp\u003eGit Refusing to Merge Unrelated Histories\u003c/p\u003e\n","title":"Git Refusing to Merge Unrelated Histories"},{"content":"\nGolang 模块代理协议\n\n\nA Go module proxy is any web server that can respond to GET requests \nfor URLs of a specified form. The requests have no query parameters, \nso even a site serving from a fixed file system (including a file:/// URL) \ncan be a module proxy.\n\nGo模块代理是一个提供特定格式GET请求服务的Web服务器. \n该请求没有查询参数, 因此一个基于固定文件系统的网页服务(包括 file:/// 链接)也可以成为模块代理.\n\nThe GET requests sent to a Go module proxy are:\n\n发送到模块代理的 GET 请求是这样的:\n\nGET $GOPROXY/\u003cmodule\u003e/@v/list returns a list of known versions of the given module, one per line.\n\n`GET $GOPROXY/\u003cmodule\u003e/@v/list` 返回指定模块已有版本的列表, 一行一条\n\nGET $GOPROXY/\u003cmodule\u003e/@v/\u003cversion\u003e.info returns JSON-formatted metadata about that version of the given module.\n\n`GET $GOPROXY/\u003cmodule\u003e/@v/\u003cversion\u003e.info` 返回模块特定版本的JSON格式的版本信息\n\nGET $GOPROXY/\u003cmodule\u003e/@v/\u003cversion\u003e.mod returns the go.mod file for that version of the given module.\n\n`GET $GOPROXY/\u003cmodule\u003e/@v/\u003cversion\u003e.mod` 返回模块特定版本的`go.mod`文件内容\n\nGET $GOPROXY/\u003cmodule\u003e/@v/\u003cversion\u003e.zip returns the zip archive for that version of the given module.\n\n`GET $GOPROXY/\u003cmodule\u003e/@v/\u003cversion\u003e.zip` 返回模块特定版本的zip压缩包\n\nGET $GOPROXY/\u003cmodule\u003e/@latest returns JSON-formatted metadata about the latest known version of the given module in the same format as \u003cmodule\u003e/@v/\u003cversion\u003e.info. \nThe latest version should be the version of the module the go command may use if \u003cmodule\u003e/@v/list is empty or no listed version is suitable. \u003cmodule\u003e/@latest is optional and may not be implemented by a module proxy.\n\n`GET $GOPROXY/\u003cmodule\u003e/@latest`  返回最新版本的JSON元数据, 格式同 `\u003cmodule\u003e/@v/\u003cversion\u003e.info`.\n当 `\u003cmodule\u003e/@v/list` 为空或者列出的版本不适合时, 使用本接口.\n`\u003cmodule\u003e/@latest` 为可选接口, 模块代理可以不实现.\n\nWhen resolving the latest version of a module, the go command will request \u003cmodule\u003e/@v/list, then, if no suitable versions are found, \u003cmodule\u003e/@latest.\nThe go command prefers, in order: the semantically highest release version, the semantically highest pre-release version, and the chronologically most recent pseudo-version. \nIn Go 1.12 and earlier, the go command considered pseudo-versions in \u003cmodule\u003e/@v/list to be pre-release versions, but this is no longer true since Go 1.13.\n\n当解析最新版本模块时, go命令会请求 `\u003cmodule\u003e/@v/list`, 然后, 如果没找到合适的版本, 则请求 `\u003cmodule\u003e/@latest`.\ngo命令会按顺序: 语义化的最高发布版本, 语义化最高的预发布版本, 以及时间最新的伪版本.\nGo 1.12和之前的版本, go命令在`\u003cmodule\u003e/@v/list`会将伪版本当做预发布版本, Go 1.13以后将不进行这种处理\n\nTo avoid problems when serving from case-sensitive file systems, the \u003cmodule\u003e and \u003cversion\u003e elements are case-encoded, replacing every uppercase letter with an exclamation mark followed by the corresponding lower-case letter: github.com/Azure encodes as github.com/!azure.\n\n为防止在大小写敏感的文件系统中出现问题, `\u003cmodule\u003e` 和 `\u003cversion\u003e` 全部转为小写, 并在大写字母前加上英文感叹号(!)来标记. 例如, `github.com/Azure` 需要编码成 `github.com/!azure`\n\nThe JSON-formatted metadata about a given module corresponds to this Go data structure, which may be expanded in the future:\n\n一个模块的JSON数据的格式如下, 未来可能会扩展:\n```go\ntype Info struct {\n    Version string    // 版本\n    Time    time.Time // 提交时间\n}\n```\n\nThe zip archive for a specific version of a given module is a standard zip file that contains the file tree corresponding to the module's source code and related files. \nThe archive uses slash-separated paths, and every file path in the archive must begin with \u003cmodule\u003e@\u003cversion\u003e/, where the module and version are substituted directly, not case-encoded. \nThe root of the module file tree corresponds to the \u003cmodule\u003e@\u003cversion\u003e/ prefix in the archive.\n\n指定版本的zip压缩包是一个标准的zip文件, 包含了指定模块的代码文件树和相关文件(即模块的所有代码). \n该归档文件使用斜杠(/)表示路径, 并且每个文件路径需要以`\u003cmodule\u003e@\u003cversion\u003e/`开始, 这里的模块和版本不进行大小写编码(感叹号)\n模块文件树的根以`\u003cmodule\u003e@\u003cversion\u003e/`为前缀\n\nEven when downloading directly from version control systems, the go command synthesizes explicit info, mod, and zip files and stores them in its local cache, $GOPATH/pkg/mod/cache/download, the same as if it had downloaded them directly from a proxy. \nThe cache layout is the same as the proxy URL space, so serving $GOPATH/pkg/mod/cache/download at (or copying it to) https://example.com/proxy would let other users access those cached module versions with GOPROXY=https://example.com/proxy.\n\n即使从版本控制系统直接下载模块, go命令会整合模块信息, mod文件和压缩包, 并将其存储到本地缓存 `$GOPATH/pkg/mod/cache/download`, 和从模块代理处下载是一样的效果.\n缓存的布局和代理URL的格式一致, 所以, 在 `$GOPATH/pkg/mod/cache/download` 目录开启这样的Web服务(https://example.com/proxy)就可以让其他人访问你缓存的模块版本了.\n\n\n\n","cover":"","link":"golang-module-proxy-cn.html","preview":"\u003cp\u003eGolang 模块代理协议\u003c/p\u003e\n","title":"Golang 模块代理协议"},{"content":"\nParallels Desktop  突然之间无法拷贝文件了\n\n\n抱着试一试的心态, 发现了更可怕的情况, 文本可以拷贝 😨\n\n然后 以 `parallels desktop 剪切板只能文本` 为搜索词在google发现了官方的说明\n[链接](http://download.parallels.com/desktop/v12/docs/zh_CN/Parallels%20Desktop%20User's%20Guide/32925.htm)\n\n然后记起来是我自个关掉的共享 😓\n\n要不是vmware fusion玩个小游戏都卡, 我是真的不想用 parallels desktop \n\n","cover":"","link":"parallels-desktop-cannot-copy-files-between-mac-and-windows.html","preview":"\u003cp\u003eParallels Desktop  突然之间无法拷贝文件了\u003c/p\u003e\n","title":"Parallels Desktop Cannot Copy Files Between Mac and Windows"},{"content":"\n疫情这些天\n\n\n没啥事儿做, 无聊写点什么吧, 就写写疫情这些天我这个无聊的人是咋过的\n\n# 1 \n一月十来号的时候吧, 那时候我还在等待公司啥时候能把放假安排的通知给发了, 然后等到真通知的时候发现居然是除夕那天才开始放假, 也就是标准的法定假日了呗. 听到这个消息的时候, 我开始满腹牢骚, 难受啊, 难道双休就意味着过年的假期要短吗. 后来又说, 如果大家事都了结了就可以提前放, 于是疯狂在背地里念叨, 快快快, 都赶紧收尾. 然而, 还是忙到了最后一天, 最后几天还是在家附近2km的地方调代码. 🦢\n\n# 2\n在剩下不到三天的时候, 有同事开始戴口罩了, 我那时候还寻思应该是感冒了吧, 经常走在路上也能看到戴口罩的. 然后, 又过了一天, 更多人戴上了口罩. 这时候, 我才后知后觉, 哦出事儿了. 不过那时候我是一点没感觉的, 我们这地方远着呢. 第二天开始放假了, 我本来还想找人出去溜达溜达的, 但是下雨了, 外加上各种消息冒出来...\n\n# 3\n我能很明显的感觉到除夕那天晚上的烟花声没以前那么响了, 平时过年, 再没事干也会至少呆到0点再去睡, 但是这一年, 春晚也不好看了, 拜年祭也没味道了, 早早的就躺着了. 然后到大概初九吧, 这段时间基本都差不多, 顶多就是小区门口有人查体温什么的, 还能到处走. 网上大部分人都在想着怎么搞到一些口罩, 不然出都出不去. 我么, 既然国家让我宅, 那我的宅的功底还是没得说的, 三点一线的生活又不是没有过过\n\n# 4 \n初九, 我来到了乡下, 发现村子外都设卡了, 还好有个路口还能开车. 第二天, 那个路口也封了, 彻底出不去了. 还好那天我妈让我去乡下, 不然一个人呆着, 真的可能饿死. 而如今农历十九了, 回到乡下已经10天了, 每天的生活都是一毛一样的, 睡-吃-吃-睡. 晚上贼安静, 只能数数外面的狗叫了几声. 白天么, 有太阳就到门口晒晒太阳, 没太阳就玩玩电脑写写代码. 除了中间有一天实在憋的难受, 开着车拉高转速在村子里吼了几声, 也没啥了. \n\n# 5 \n也许就是这么巧合呢. 刚好元旦的时候买了电脑, 就碰上了现在这种没电脑就死的情况. 本来搞了四个烟弹, 想想过年应该够了, 那想是现在这样. 现在我已经记不清是从哪天开始断烟的了, 大概3、4天吧. 2月11日的时候是真的难受, 瘾头上来的那种感觉, 虽然楼下就有烟, 而且很多烟. 但是我告诉自己, 就趁着现在试试戒烟看看. 那种感觉真的让人烦躁不安, 话都不想说, 只能深呼吸, 但是就是忍不住去往喉咙那里想. 好不容易才熬到了睡觉. 2月12日的时候, 睡醒后的半天, 那种想抽烟的欲望都没有那么强烈. 不过这天到了晚上的时候感觉也还好, 没那么难受了, 但是还是忍不住会想🚬. 憋着写下了现在这个, 也不知道自己能坚持多久. 但真的希望, 这难得的一个人呆着的机会, 不能仅仅宅着就过去了, 总要做成一件事才可以.\n\n\n","cover":"","link":"these-days.html","preview":"\u003cp\u003e疫情这些天\u003c/p\u003e\n","title":"疫情这些天"},{"content":"\n面对成千上万次的http请求如何存活\n\n\n## 背景\n\n- 大概有3w张物联卡, 需要通过api请求的方式获取其流量使用情况\n- 服务端有客户端白名单和请求频率的限制(频率具体是多少不清楚)\n\n## 问题\n\n1. 如果在一个协程中一张张跑完所有卡, 那么3w张卡从获取数据到写入到数据库可能需要消耗...额, 很长时间, 那么这种情况每次定时任务的跨度太长容易导致不方便调试等问题, 会大量拉伸开发周期\n2. 如果开多个协程去跑所有卡, 理论上可以把时间缩短到 t/x x为协程数, 但是使用协程时, 即使只使用2个协程, 依然会导致触发服务端的规则导致本该返回正常数据的, 最后只拿到个其它错误. 同时协程数越多, 出现其它错误的几率也更大\n3. 需要在白名单的机子上跑方可调用api\n\n## 解决思路\n\n- 针对第三点, 可以使用代理服务器, 可以完美伪装, 然而api调用的效率就会下降很多. 比如我现在的情况是java的服务端, 那么去搜java判断远程ip的方法, 可能会有很多种, 一个个拿到postman里试, 运气不错, `x-forwarded-for`可用\n- 针对另外两点, 重试就行了. 目前所用的方式为, 开一个协程池, 容量为30个, 在协程的事件中判断是否发生了限流或超时的情况, 如果发生了, 则添加到重试队列, 让它一只重试即可\n\n## 具体代码\n\n```\ndefer ants.Release()\nvar wg sync.WaitGroup\ninvokeChan := xchan.NewXChan(10000, func(i interface{}) {\n\t\t\twg.Add(1)\n\t\t\tp.Invoke(i)\n\t\t})\np, _ = ants.NewPoolWithFunc(poolCount, func(i interface{}) {\n\t\t\thandleCard(i, alarmchan, insertChan, invokeChan)\n\t\t\twg.Done()\n\t\t})\nfor _, cardid := range CardList {\n    wg.Add(1)\n    p.Invoke(string(cardid))\n}\ndefer p.Release()\nisPoolRunning = true\nwg.Wait()\nisPoolRunning = false\n```\n\n在handleCard方法中, 如果需要重试, `invokeChan.Add(cardid)`即可, 而isPoolRunning用于防止某一次任务无限重试下去, 让后面的定时任务一直堆积. xchan是一个简单的队列, 感觉用来异步进行**顺序**操作挺合适的\n\n## 引用\n\n- 协程池 `\"github.com/panjf2000/ants/v2\"`\n- 自己封装的cmiot v2版本的SDK, `\"github.com/linxlib/cmiot_v2\"`\n\n\n","cover":"","link":"live-on-thousands-of-http-request.html","preview":"\u003cp\u003e面对成千上万次的http请求如何存活\u003c/p\u003e\n","title":"Live on Thousands of Http Request"},{"content":"\nMac在终端中打开新终端运行代码\n\n\n## 背景\n\n- 我有好多个一样的go程序要同时运行\n- 很明显一个个打开终端太傻了\n\n## 上代码\n\n```sh\nosascript -e 'tell application \"Terminal\" to do script \"cd ~/Desktop/old/6/ \u0026\u0026~/Desktop/old/6/iotCardQuery\"'\n```\n多拷贝几个, 然后修改一下, 保存为sh脚本, 运行之\n\n\nPS: 记得cd到目录里, 否则找不到会配置文件什么\n\n\n\n\n","cover":"","link":"mac-open-a-new-shell-windows-to-execute-scripts.html","preview":"\u003cp\u003eMac在终端中打开新终端运行代码\u003c/p\u003e\n","title":"Mac Open a New Shell Windows to Execute Scripts"},{"content":"\ngo 1.13 版本环境变量配置\n\n\n**必需的配置** \n\n不然还不如回1.12版本用gopath去\n\n```go\nGOPROXY=https://goproxy.cn,direct\nGOPRIVATE=*.gitlab.com,*.gitee.com\nGOSUMDB=off\n```\n\n\n\n\n","cover":"","link":"go-1.13-setup.html","preview":"\u003cp\u003ego 1.13 版本环境变量配置\u003c/p\u003e\n","title":"Go 1.13 environment setup"},{"content":"\nGolang Read File Line by Line\n\n\n```go\nfunc handle(textfile string) error {\n    // 1. open file\n    file, err := os.Open(textfile)\n\tif err != nil {\n\t\tlog.Printf(\"Cannot open text file: %s, err: [%v]\", textfile, err)\n\t\treturn err\n\t}\n    defer file.Close()\n    //2. new a scanner to scan file\n    scanner := bufio.NewScanner(file)\n    for scanner.Scan() {\n\t\tline := scanner.Text() // or\n\t\t//line := scanner.Bytes()\n\t\t\n        // do somthing\n\t\tfmt.Printf(\"%s\\n\", line)\n\t}\n\n\tif err := scanner.Err(); err != nil {\n\t\tlog.Printf(\"Cannot scanner text file: %s, err: [%v]\", textfile, err)\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\n```\n","cover":"","link":"golang-read-file-line-by-line.html","preview":"\u003cp\u003eGolang Read File Line by Line\u003c/p\u003e\n","title":"Golang Read File Line by Line"},{"content":"\niPhone投屏到Macbook上进行播放\n\n\n## 方案一 (QuickTime Player)\n\n- iPhone用数据线连接Macbook\n- 打开QuickTime Player, 文件-\u003e新建影片录制, 然后在录制按钮旁边下拉, 选择iPhone即可\n\n#### 弱势\n\n- 分辨率是手机的分辨率, 所以如果是iPhone XR的话, 很明显是赶不上2K屏的\n- 没法快进啥的操作\n- 手机要一直亮屏\n\n\n## 方案二 (AirServer)\n\n- 安装完打开即可, 然后iPhone上选择屏幕镜像\n\n#### 弱势\n\n- 如果用WIFI的形式, 声音和画面会有延迟, 除非有个很不错的无线网络, 插数据线应该可行\n- 分辨率也不高\n\n\n\n\n\n","cover":"","link":"play-iphone-screen-on-macbook.html","preview":"\u003cp\u003eiPhone投屏到Macbook上进行播放\u003c/p\u003e\n","title":"iPhone投屏到Macbook上进行播放"},{"content":"\n正则提取括号内容(包括括号本身)\n\n\n直接上正则 \u003ckbd\u003e[\\(\\[【](.*?)[\\)\\]】]\u003c/kbd\u003e\n\n## 解释\n\n- `(.*?)` 匹配任意字符\n- `\\(\\[【` 和 `\\)\\]】` 匹配三种括号, 需要增加也是在这个位置添加\n\n\n","cover":"","link":"regexp-get-brackets-and-content.html","preview":"\u003cp\u003e正则提取括号内容(包括括号本身)\u003c/p\u003e\n","title":"正则提取括号内容"},{"content":"\nAudition 移除人声\n\n1. 打开效果选择中置声道提取器\n![](/images/screenshot2020-01-07-1.png)\n\n2. 选择人声移除, 根据歌曲情况选择移除男声或女声\n![](/images/screenshot2020-01-07-1.png)\n\n3. `文件`-\u003e`导出` 即可\n\n","cover":"","link":"audition-remove-human-voice.html","preview":"\u003cp\u003eAudition 移除人声\u003c/p\u003e\n","title":"Audition 移除人声"},{"content":"\n2019小结\n\n太长, 瞎写, 别读(估计也没人看)\n\n\n2020, 她来了, 风一样来啦. 曾经学校里的政治课经常会提到的一个数字, 别的没怎么关注, 倒是物价真的翻天覆地了, 哈哈.\n\n2019年, 对我来说, 一个最大的感觉就是快, 比往常任何一年都要走得快, 仿佛昨天还在过2018的除夕. 今年五一辞去了三年多的工作, 给自己的理由是, 不能再以那样的状态下去了. 长期的单休, 让本就不太擅长给自己找乐子的我, 更加宅了, 所以真正的在家宅了两个月, 顶多偶尔出去买包烟, 然后立马就骑车回家. 没有间断的工作, 并没有让能力提升多少. 之前一直想着在空余的时间能够自己搞一个小项目玩一玩, 最终还是倒下了, 宁愿多刷会儿手机. 也会经常处于睡不好觉的情况, 睡觉对我来说可能真的很重要, 不管是被吵失眠, 还是提早被弄醒, 影响的不光是精神状态, 脾气也会暴躁许多. 入睡困难真的难受, 要是没心么肺倒头就睡该多好.\n\n不知道从何时开始, 对电脑有某种特定的依赖. 如果在较长的一段时间没有摸到电脑了, 会滋生非常迫切的渴望, 然而, 我并没有想好要做什么, 也许只是解解馋. 手机也是一样, 不像有些人, 拿起手机刷个不停, 一个个app刷完估计一天就过去了, 而我不一样, 总是没事掏出来解锁看看时间, 哎呦, 刚才没看到时间就关屏了, 妈蛋, 再看下......\n\n我不喜欢总结, 从小时候阅读理解的总结开始就不喜欢, 也许只是因为我没有啥可以总结的, 又或许, 并不会去注意以前的自己做了什么, 做一件忘一件. 可能就是自己做的事让自己不想去记住, 激发不起热情. 人有时候对于不热衷的事情会有逃避心理, 只希望它赶紧过去, 逐渐麻痹自己, 让自己成为一个木偶.\n\n最近一段时间, 在自己的消费观念上努了一把力, 努力让自己以花钱让自己舒服为目标而消费, 同时也在努力让自己在面对选择时, 能够比以前少纠结点时间. 纠结并没有用. 纠结成功了, 并不会舒口气, 庆幸自己没剁手, 反而让心情低落一段时间, 种草可不是能轻松拔草的. 而纠结失败的时候, 会心疼钱吗, 也许会在翻车的时候吧, 当真香的时候, 钱是什么, 钱是王八蛋, 我又不是超额消费. 也希望来年能不要做什么事情都要献给自己找个理由. 去做、去买, 买来等吃灰了, 到时候就可以说我也有个啥啥啥在吃灰呢\n\n最后, 希望走出迷茫, 走出低落, 2020必须要不一样!\n\nby linx@2019-12-31 22:23 \n","cover":"","link":"just-go-2020.html","preview":"\u003cp\u003e2019小结\u003c/p\u003e\n\n\u003cp\u003e太长, 瞎写, 别读(估计也没人看)\u003c/p\u003e\n","title":"Just Go 2020"},{"content":"\n安卓阴影的实现\n\n\n被安卓的阴影折腾了好多天, 总算有个完美的方案了. 在Github上找了很多阴影的库, 不清楚是版本问题还是兼容问题, 不能如愿\n\n而Material自带的evaluation高度属性的阴影貌似无法定制阴影的颜色, shadowColor之类的属性不能应用于按钮\n\n现记录下目前来说最佳解决方案\n\n\u003e  `http://inloop.github.io/shadow4android/`\n\n\n*  `Round`: 圆角, 需要和Button的background的圆角一直\n\n*  `Shadow blur`: 阴影模糊\n*  `Shadow color`:阴影颜色, 这里有个bug, `#3f59ff33`填上这样的RGBA颜色, 后面的透明值会自动删除, 骚操作是`填上33然后立即点下载`\n* `Shadow offset`: 阴影偏移, 如果这里填了Y的值, 后面需要进行 ##对应设置##\n* `Box size`: 这里填的是最小值, 如果这个设置不对那么在实际的机子上被压缩的时候就显示不正常了, 一般要比设计图上的小\n* `Padding size`: 如果 X = 0 , Y=10 那么对应这里的 Top 要设置为10, 这样可以确保到时候按钮文字仍然在按钮的\"中间\"\n\n目前这样的设置方法适合需要将按钮浮起的阴影效果\n\n下载后的使用方法:\n\n1. 拖到drawable\n2. 在原来的 Button的background的drawable里加上\u003cnine-patch/\u003e即可\n3. 根据情况调整margin, 如果显示阴影不正常, 回到那个网站跳转设置\n\n上代码\n\n### .9.png的设置\n\n1. `Round`=`30` 和下文的 `corners`的 `Radius` 一致\n2. `Shadow blur`根据情况设置, 我这是`20`\n3. `Shadow color` = `#3f59ff33` 末尾的`33`表示 `20%` 透明, 记得在下载前设置, 否则会被自动重置为6位的HEX值\n4. `Shadow offset`: `Y`=`10`, 向下偏移10\n5. `Fill \u0026 Outline` 不启用, 因为中央的透明用来放自己的渐变背景\n6. `Box size` `Width`和`Height` 输入较小的值, 一定要比设计图上小\n7. `Padding lines`放在默认两端即可, 表示可四面八方拉伸, 对于给按钮加阴影来说这样就可以\n8. `Side clipping`边缘裁剪, 不勾\n9. `Padding size` `Top`=`10`对应上面的`Shadow offset`, 这样才能保证到时候Button的文字会在\"主体的中间\"\n10. 回到第三步加上`33`,点下载即可\n\n\n### 一个按钮的背景drawable\n```xml\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003clayer-list xmlns:android=\"http://schemas.android.com/apk/res/android\"\u003e\n\u003c!--第一层放.9.png--\u003e\n    \u003citem\u003e\n        \u003cnine-patch android:src=\"@drawable/shadow_14399\"/\u003e\n    \u003c/item\u003e\n\u003c!--第二层为原本的背景--\u003e\n    \u003citem\u003e\n        \u003cshape android:shape=\"rectangle\"\u003e\n            \u003cgradient\n                android:angle=\"180\"\n                android:endColor=\"#ff5e7bfe\"\n                android:startColor=\"#ff3e57fd\"\n                android:type=\"linear\"\n                android:useLevel=\"true\" /\u003e\n            \u003ccorners\n                android:bottomLeftRadius=\"30dp\"\n                android:bottomRightRadius=\"30dp\"\n                android:topLeftRadius=\"30dp\"\n                android:topRightRadius=\"30dp\" /\u003e\n        \u003c/shape\u003e\n    \u003c/item\u003e\n\u003c/layer-list\u003e\n\n```\n### 按钮使用的style\n\n```xml\n\u003cstyle name=\"shadow_button\" parent=\"Widget.AppCompat.Button\"\u003e\n    \u003citem name=\"android:background\"\u003e@drawable/shape\u003c/item\u003e\n    \u003citem name=\"android:elevation\"\u003e10dp\u003c/item\u003e\n    \u003citem name=\"android:textColor\"\u003e@color/mainwhite\u003c/item\u003e\n    \u003citem name=\"android:textSize\"\u003e20sp\u003c/item\u003e\n    \u003citem name=\"android:stateListAnimator\"\u003e@null\u003c/item\u003e\n\u003c/style\u003e\n```\n\n### 用到的网站\n\n1. [.9图生成](http://inloop.github.io/shadow4android/)\n2. [ARGB透明度对照](https://blog.csdn.net/pinglingying/article/details/52403819)\n3. [不要在style里使用大于25的shadowRadius](https://stackoverflow.com/questions/23048567/android-signal-11-rs-cpp-error-blur-radius-out-of-0-25-pixel-bound)\n\n### 最后是效果\n![](/images/2019-12-31_09-13-54.png)\n\n\n\n\n","cover":"","link":"android-shadow.html","preview":"\u003cp\u003e安卓阴影的实现\u003c/p\u003e\n","title":"Android Shadow"},{"content":"\nAndroid RecylerView BaseAdapter 更新(kotlin)\n\n废话不多说直接上代码\n\n```kotlin\npackage com.qijin.xiaohui.base\n\n\nimport android.content.Context\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.annotation.IntDef\nimport androidx.databinding.DataBindingUtil\nimport androidx.databinding.ViewDataBinding\nimport androidx.recyclerview.widget.RecyclerView\nimport androidx.recyclerview.widget.RecyclerView.Adapter\nimport androidx.recyclerview.widget.RecyclerView.ViewHolder\nimport com.qijin.xiaohui.R\nimport java.util.*\n\n\n/**\n * RecylerView 数据绑定适配器\n * @param T\n * @property mList List\u003cT\u003e? 对应的数据列表\n * @property layoutId Int? RecylerView子item的布局id\n * @property brId Int? RecylerView子item中声明的model的名称(这个不会有代码提示, 直接写)\n * @property itemClick ItemClick? 项目item点击事件, 如果要对item内部的按钮设定时间, 重载forInnerControl即可\n * @constructor\n */\nopen class QJBaseAdapter\u003cT\u003e :\n    Adapter\u003cQJBaseAdapter.QJBaseViewHolder\u003e {\n    var mList: List\u003cT\u003e?\n    var layoutId: Int?\n    var brId: Int?\n\n    constructor(context: BaseActivity, mList: List\u003cT\u003e?, layoutId: Int?, brId: Int?) : super() {\n        this.mList = mList\n        this.layoutId = layoutId\n        this.brId = brId\n        this.ctx = context\n        this.layoutInflater = context.layoutInflater\n        this.state = STATE_NORMAL\n    }\n\n    constructor(context: BaseFragment, mList: List\u003cT\u003e?, layoutId: Int?, brId: Int?) : super() {\n        this.mList = mList\n        this.layoutId = layoutId\n        this.brId = brId\n        this.ctx = context.context\n        this.layoutInflater = context.layoutInflater\n        this.state = STATE_NORMAL\n    }\n    var ctx:Context?=null\n    open val layoutInflater:LayoutInflater?\n\n    var itemClick: ItemClick? = null\n    /**\n     * 更新数据\n     * @param items ArrayList\u003cT\u003e?\n     */\n    fun updateData(items: ArrayList\u003cT\u003e?) {\n        this.mList = items\n        if (LoadingView==null || EmptyView == null || ErrorView==null) {\n            notifyDataSetChanged()\n        } else {\n            endLoading()\n        }\n    }\n\n    fun startLoading() {\n        if (LoadingView==null || EmptyView == null || ErrorView==null) {\n            return\n        }\n        this.state = STATE_LOADING\n        notifyDataSetChanged()\n    }\n\n    fun endLoading() {\n        if (mList.orEmpty().size\u003c=0) {\n            this.state = STATE_EMPTY\n        } else {\n            this.state = STATE_NORMAL\n        }\n        if (state != STATE_NORMAL) {\n            notifyDataSetChanged()\n        } else {\n            mListView.post({\n                notifyDataSetChanged()\n            })\n        }\n\n    }\n\n    fun showError() {\n        this.state = STATE_ERROR\n        notifyDataSetChanged()\n    }\n\n    interface ItemClick {\n        fun OnItemClick(v: View, position: Int)\n    }\n\n    fun setItemClickListener(itemClick: ItemClick) {\n        this.itemClick = itemClick\n    }\n\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): QJBaseViewHolder {\n        if (LoadingView!=null \u0026\u0026 EmptyView != null \u0026\u0026 ErrorView!=null) {\n            when (viewType) {\n                TYPE_LOADING -\u003e {\n                    return QJBaseViewHolder(LoadingView!!)\n                }\n                TYPE_EMPTY -\u003e {\n                    return QJBaseViewHolder(EmptyView!!)\n                }\n                TYPE_ERROR -\u003e {\n                    return QJBaseViewHolder(ErrorView!!)\n                }\n            }\n        }\n\n        val binding: ViewDataBinding = DataBindingUtil.inflate(\n            LayoutInflater.from(parent.context), this.layoutId!!, parent, false\n        )\n        return QJBaseViewHolder(binding)\n    }\n\n    override fun getItemCount(): Int {\n        when (state) {\n            STATE_LOADING, STATE_EMPTY, STATE_ERROR -\u003e return 1\n        }\n        return mList!!.size\n    }\n\n\n    override fun onBindViewHolder(holder: QJBaseViewHolder, position: Int) {\n        if (state in arrayOf(STATE_LOADING,STATE_EMPTY,STATE_ERROR)) {return}\n\n        var item = mList!![position] // 这里必须为var 因为需要修改列表的数据\n        doBeforeShow(holder.binding.root, item)\n        holder.binding.setVariable(this.brId!!, mList!![position])\n        holder.binding.executePendingBindings()\n        // item点击事件\n        holder.binding.root.setOnClickListener {\n            itemClick?.OnItemClick(holder.binding.root, position)\n        }\n        forInnerControl(holder.binding.root, item,position)\n        forInnerControl(holder.binding.root, item)\n    }\n\n\n\n\n    /**\n     * 在绑定数据之前执行, 可以修改数据 item 的值\n     * @param itemView View?\n     * @param item T\n     */\n    open fun doBeforeShow(itemView: View?, item: T) {\n\n    }\n\n    /**\n     * 用于给ItemView内部的组件绑定事件\n     * @param itemView View?\n     * @param item T\n     */\n    open fun forInnerControl(itemView: View?, item: T,position: Int = 0) {\n\n    }\n\n    open fun forInnerControl(itemView: View?, item: T) {\n\n    }\n\n\n    class QJBaseViewHolder : ViewHolder {\n        lateinit var binding: ViewDataBinding\n        lateinit var view:View\n\n        constructor(binding: ViewDataBinding) : super(binding.root) {\n            this.binding = binding\n        }\n\n        constructor(view:View):super(view) {\n            this.view = view\n        }\n    }\n\n\n    var LoadingView: View? = null\n        set(value) {\n            field = value\n        }\n    var EmptyView: View? = null\n        set(value) {\n            field = value\n        }\n    var ErrorView: View? = null\n        set(value) {\n            field = value\n        }\n\n    @State\n    private var state: Int = STATE_NORMAL\n\n    companion object {\n        const val STATE_NORMAL = 0\n        const val STATE_LOADING = 1\n        const val STATE_EMPTY = 2\n        const val STATE_ERROR = 3\n        const val TYPE_LOADING = 1000\n        const val TYPE_EMPTY = 1001\n        const val TYPE_ERROR = 1002\n\n        @IntDef(STATE_NORMAL, STATE_LOADING, STATE_EMPTY, STATE_ERROR)\n        @Retention(AnnotationRetention.SOURCE)\n        annotation class State\n    }\n\n    @State\n    open fun getState(): Int {\n        return this.state\n    }\n\n    open fun setState(@State state: Int) {\n        this.state = state\n        notifyDataSetChanged()\n    }\n\n    override fun getItemViewType(position: Int): Int {\n        return when (state) {\n            STATE_LOADING -\u003e TYPE_LOADING\n            STATE_EMPTY -\u003e TYPE_EMPTY\n            STATE_ERROR -\u003e TYPE_ERROR\n            else -\u003e super.getItemViewType(position)\n        }\n    }\n\n    lateinit var mListView:RecyclerView\n\n    fun setView(listView:RecyclerView) {\n        LoadingView = layoutInflater!!.inflate(R.layout.rv_loading,listView,false)\n        ErrorView = layoutInflater!!.inflate(R.layout.error,listView,false)\n        EmptyView = layoutInflater!!.inflate(R.layout.empty,listView,false)\n        listView.adapter = this\n        mListView = listView\n    }\n}\n```\n\n## 更新\n\n1. 新增 `fun setView(listView:RecyclerView)` 用于为 RecyclerView 设置\"加载中\" \"加载失败\" \"无数据\" 三种视图. 只需要\n在调用数据开始的时候 `mAdapter.startLoading()`, 在 mAdapter.updateData(mList) 时, 将自动停止加载. 同时不用调用 `listView.adapter = mAdapter` 了\n2. 增加另外一个 `forInnerControl`的版本多一个 position的参数, 用于简单实现\"动态的单选RadioButton\"功能, 两个版本重载一个即可\n3. 增加一个构造函数, 传入两种类型的context\n4. 不断更新....","cover":"","link":"android-recylerview-baseadapter-update.html","preview":"\u003cp\u003eAndroid RecylerView BaseAdapter 更新(kotlin)\u003c/p\u003e\n","title":"Android RecylerView BaseAdapter 更新"},{"content":"\nAndroid Kotlin Appbarlayout Back to Parent Activity\n\n\n我原先的写法是这样的\n\n```xml\n\u003candroidx.appcompat.widget.Toolbar\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"44dp\"\n    android:onClick=\"backClick\"\n```\n后来发现这样不行, 倒不是不能返回, 而是如果在旧版本android上运行会直接崩溃, 例如. android 6, 是的, 崩溃, 不会到backClick这个方法里.\n\n所以只好老老实实的用代码处理了\n\n```kotlin\naddbindingToolbar.setNavigationOnClickListener {this.finish()}\n```\n\n","cover":"","link":"android-kotlin-appbarlayout-back-to-parent-activity.html","preview":"\u003cp\u003eAndroid Kotlin Appbarlayout Back to Parent Activity\u003c/p\u003e\n","title":"Android Kotlin Appbarlayout Back to Parent Activity"},{"content":"\nAndroid Kotlin Fragmentadapter\n\n\n刚接触kotlin写安卓, 一脸懵逼, 连教程都没看就开搞了\n\n直接上代码\n\n```kotlin\npackage ${package}.base\n\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.FragmentManager\nimport androidx.fragment.app.FragmentPagerAdapter\n\n/**\n * Fragment适配器, ViewPager用\n * @property fm FragmentManager\n * @property fragments MutableList\u003cFragment\u003e\n * @property fragmentTitles MutableList\u003cString\u003e\n * @constructor\n */\nclass QJFragmentAdapter(val fm: FragmentManager) : FragmentPagerAdapter(fm,BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT) {\n\n    var fragments: MutableList\u003cFragment\u003e = ArrayList()\n    var fragmentTitles: MutableList\u003cString\u003e = ArrayList()\n\n    override fun getItem(position: Int): Fragment {\n        return fragments[position]\n    }\n    fun addFragment(fragment: Fragment, title: String) {\n        fragments.add(fragment)\n        fragmentTitles.add(title)\n    }\n\n    override fun getPageTitle(position: Int): CharSequence? {\n        return fragmentTitles[position]\n    }\n    override fun getCount(): Int = fragments.size\n}\n```\n\n使用方式很简单\n\n```kotlin\nvar adapter = QJFragmentAdapter(supportFragmentManager)\nvar makeLeaveFragment = MakeLeaveFragment()\nvar leaveListFragment = LeaveListFragment()\n\nadapter.addFragment(MakeLeaveFragment(), makeLeaveFragment.title)\nadapter.addFragment(LeaveListFragment(), leaveListFragment.title)\n\nviewPager.adapter = adapter\ntabLayout.setupWithViewPager(viewPager)\n```\n\n可以简化的地方: 创建一个BaseFragment, 声明一个title的属性, 然后每个Fragment类都继承这个, 就可以改成 `adapter.addFragment(MakeLeaveFragment())` 这样少一行代码了\n\n","cover":"","link":"android-kotlin-fragmentadapter.html","preview":"\u003cp\u003eAndroid Kotlin Fragmentadapter\u003c/p\u003e\n","title":"Android Kotlin Fragmentadapter"},{"content":"\nAndroid Kotlin RecyclerView Databinding\n\n\n\n- 一个已经能进行简单的按按钮操作的RecyclerView项目\n-\n    ```gradle\n    apply plugin: 'kotlin-android'\n    apply plugin: 'kotlin-kapt'\n    apply plugin: 'kotlin-android-extensions'\n    ```\n\n    ```gradle\n    dataBinding {\n        enabled = true\n    }\n    ```\n\n- 一个数据绑定辅助类\n  \n  ```kotlin\n    /**\n      * 赋予ImageView和ImageButton以 app:img 的属性, 用于绑定图片\n      * @author linx\n      */\n    class BindingUtil {\n        companion object {\n            @BindingAdapter(\"app:img\")\n            @JvmStatic\n            fun imgData(iv: ImageView, data: Int) {\n                iv.setImageResource(data)\n            }\n\n            @BindingAdapter(\"app:img\")\n            @JvmStatic\n            fun imgData(iv: ImageButton, data: Int) {\n                iv.setBackgroundResource(android.R.color.transparent)\n                iv.setImageResource(data)\n            }\n\n            /**\n             * ImageView绑定图片地址url\n             * @param iv ImageView\n             * @param data Any\n             */\n            @BindingAdapter(\"app:url\")\n            @JvmStatic\n            fun ImageViewUrl(iv: ImageView, data: Any) {\n                if (data is String) {\n                    if (!data.isEmpty()) {\n                        Glide.with(iv.context).load(Uri.parse(data)).into(iv)\n                    } else {\n                        iv.setImageResource(R.mipmap.touxiang2_default)\n                    }\n\n                } else if (data is Int) {\n                    iv.setImageResource(data)\n                }\n            }\n\n        }\n    }\n  ```\n\n- 一个数据adapter\n  \n  ```kotlin\n    import android.view.LayoutInflater\n    import android.view.View\n    import android.view.ViewGroup\n    import androidx.databinding.DataBindingUtil\n    import androidx.databinding.ViewDataBinding\n    import androidx.recyclerview.widget.RecyclerView.Adapter\n    import androidx.recyclerview.widget.RecyclerView.ViewHolder\n    import java.util.*\n\n    /**\n    * RecylerView 数据绑定适配器\n    * @param T\n    * @property mList List\u003cT\u003e?\n    * @property layoutId Int?\n    * @property brId Int?\n    * @property itemClick ItemClick?\n    * @constructor\n    */\n    open class QJBaseAdapter\u003cT\u003e(var mList: List\u003cT\u003e?, var layoutId: Int?, var brId: Int?) :\n        Adapter\u003cQJBaseAdapter.QJBaseViewHolder\u003e() {\n\n\n        var itemClick: ItemClick? = null\n\n        /**\n        * 更新数据\n        * @param items ArrayList\u003cT\u003e?\n        */\n        fun updateData(items: ArrayList\u003cT\u003e?) {\n            this.mList = items\n            notifyDataSetChanged()\n        }\n\n        interface ItemClick {\n            fun OnItemClick(v: View, position: Int)\n        }\n\n        fun setItemClickListener(itemClick: ItemClick) {\n            this.itemClick = itemClick\n        }\n\n\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): QJBaseViewHolder {\n\n            val binding: ViewDataBinding = DataBindingUtil.inflate(\n                LayoutInflater.from(parent.context), this.layoutId!!, parent, false\n            )\n            return QJBaseViewHolder(binding)\n        }\n\n        override fun getItemCount(): Int = mList!!.size\n\n        override fun onBindViewHolder(holder: QJBaseViewHolder, position: Int) {\n            var item = mList!![position] // 这里必须为var 因为需要修改列表的数据\n            doBeforeShow(holder.binding.root, item)\n            holder.binding.setVariable(this.brId!!, mList!![position])\n            holder.binding.executePendingBindings()\n            // item点击事件\n            holder.binding.root.setOnClickListener {\n                itemClick?.OnItemClick(holder.binding.root, position)\n            }\n            forInnerControl(holder.binding.root, item)\n        }\n\n\n        /**\n        * 在绑定数据之前执行, 可以修改数据 item 的值\n        * @param itemView View?\n        * @param item T\n        */\n        open fun doBeforeShow(itemView: View?, item: T) {\n\n        }\n\n        /**\n        * 用于给ItemView内部的组件绑定事件\n        * @param itemView View?\n        * @param item T\n        */\n        open fun forInnerControl(itemView: View?, item: T) {\n\n        }\n\n        class QJBaseViewHolder(var binding: ViewDataBinding) : ViewHolder(binding.root)\n    }\n  ```\n- 声明数据类\n  \n  ```kotlin\n    data class SchoolNews(\n        val title: String = \"\", //标题\n        val contentShort: String = \"\", //内容简写\n        val date: String = \"\", //日期\n        val state: Int = 0, //0 unreaded 1 readed 2 pinned\n        var img:Int =0\n    )\n  ```\n\n- RecyclerView 的itemview中声明, 注意顶层元素使用layout, 其他盲敲即可, IDE会补全\n  \n  ```xml\n    \u003clayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\u003e\n    \u003cdata\u003e\n        \u003cvariable\n            name=\"schoolNews\"\n            type=\"model.SchoolNews\" /\u003e\n    \u003c/data\u003e\n  ```\n\n- 以 `android:text=\"@{schoolNews.title}\"` 这样的方式绑定数据, ImageView和ImageButton则以 `app:img=\"@{schoolNews.img}\"` img 是resId即资源id, 图片的值不能直接绑定, 需要用代码`setImageResource`来实现\n\n- 创建一个特定的适配器, 重写两个方法\n  \n  ```kotlin\n    class SchoolNewsAdapter(mList: List\u003cSchoolNews\u003e?, layoutId: Int?, brId: Int?) :\n        QJBaseAdapter\u003cSchoolNews\u003e(mList, layoutId, brId) {\n\n        override fun forInnerControl(itemView: View?, item: SchoolNews) {\n            // 这里可以为每个 itemView 的子控件添加事件\n            \n        }\n\n        // 在这个方法中对item进行修改是可以应用到界面的, 不过肯定不能执行过于耗时的操作\n        override fun doBeforeShow(itemView: View?, item: SchoolNews) {\n            // 根据state字段的值来决定显示哪张图片\n            when (item.state) {\n                0-\u003e item.img = R.mipmap.yuandian\n                2-\u003e item.img = R.mipmap.schoolnews_guding\n                else-\u003eitem.img = R.color.mainwhite\n            }\n        }\n\n\n    }\n  ```\n\n  顺便说下, 代码中访问内置颜色是这样的`android.R.color.transparent`\n\n- 最后就是使用了\n  \n  ```kotlin\n    var mAdapter: SchoolNewsAdapter? = null\n\n    private fun initView() {\n        mAdapter = SchoolNewsAdapter(\n            schoolNews, R.layout.recycler_view_item_school_news_info,\n            BR.schoolNews\n        )\n\n        schoolNewsRv.adapter = mAdapter\n    }\n  ```\n\n  这里说明下 schoolNews为 `ArrayList\u003cSchoolNews\u003e`, `R.layout.recycler_view_item_school_news_info`为item的布局文件, `BR.schoolNews`这个就是前面 `\u003clayout\u003e`内的variable了, 如果最开始的插件没有配置好, 这个会报错. 原理其实就是编译器自动帮我们生成好了代码\n\n  更新数据则使用 `mAdapter!!.updateData(schoolNews)`即可","cover":"","link":"android-kotlin-databinding.html","preview":"\u003cp\u003eAndroid Kotlin RecyclerView Databinding\u003c/p\u003e\n","title":"Android Kotlin RecyclerView Databinding"},{"content":"\n安卓wifi远程调试\n\n\n- 开启开发者选项\n- 开启USB调试和网络调试\n- 连接到同一个路由器下\n- Android Studio安装WIFI插件, 记得作者是`Pedro Vicente Gómez Sánchez`, 安装完右上角的工具栏会出现一个`AndroidWifiADB`的图标\n- 选择设备或者先插一次USB识别一下再拔掉\n","cover":"","link":"android-wifi-debugging.html","preview":"\u003cp\u003e安卓wifi远程调试\u003c/p\u003e\n","title":"Android Wifi Debugging"},{"content":"\n在Manjaro下玩耍\n\n\n最近打算把自己的10年老笔记本换个linux的系统, 反正每天也就是看看视频, 还能找到事情折腾一下. 有一点不太好的是, 没有多台电脑, 所以有的时候就很惨\n\n\n## 系统选择\n\n其实选哪个不重要, 重要的是你对哪个比较熟悉, 例如之前都是用ubuntu的那么选gnome, 而种草KDE的漂亮就选KDE版本, 当然也可以选arch版本, 这样就随便选了. \n\n## 安装\n\n我选择的是arch版本, 其实也就是多了很多自选的选择, 但是基本上那些自选的选项对于想搞个系统来用的人来说, 无伤大雅的. 比如磁盘分区选什么格式啦, 一般都会去选ext4, 其它的大部分都不认识. 反而另外的指定好的版本更好, 语言包啥的都给装好了. 而arch版本语言包还要自己装. 这种必要的没装起来, 那种libre之类的内置软件倒是装了一大堆. 反正我后来是跟着别人的图片装的.\n\n特别注意, 在开始的时候, 用manjaro登录后, 在setup之前, 先这样\n\n```shell\nsudo pacman-mirrors -i -c China -m rank\n```\n\n不然你会后悔的\n\n## 配置\n\n#### 换源\n\n安装完进系统第一步先\n\n```shell\nsudo pacman-mirrors -i -c China -m rank\nsudo pacman -Syy\n```\n\n然后\n\n```shell\nvi /etc/pacman.d/mirrorlist\nsudo pacman -Syy\n```\n根据具体情况删掉几个, 我是留下了中科大和清华的(移动宽带)\n\n#### 代理\n再就是代理了, 刚装完肯定是没有的, 不是路由器翻的情况, 就比较困难了.\n\n1. 设置git\n```shell\ngit config --global http.proxy http://ip:port\ngit config --global https.proxy http://ip:port\n```\n代理可以通过手机开出, 当然这个速度会比较惨, 最好事先把节点先选好\n\n2. 开启AUR, 打开自带的软件包管理器, 点右上角的三个点. 进入首选项, 有个AUR页签, 勾选启用AUR支持即可\n3. `sudo pacman -S yay` 然后 `yay --aururl “https://aur.tuna.tsinghua.edu.cn” --save`\n\n4. 安装v2raya, `yay -S v2raya`, 我测试了好多个可以在linux运行的GUI, 最终觉得还是这个比较好.\n   \n   - 全局透明代理\n   - go版本, 依赖少, 构建不会很久\n   - 前端页面最好还是自己build一份留着, 万一啥时候不能访问呢, 不就凉了\n   - \n5. \n   ```shell \n   sudo pacman -S yarn\n   cd ~/V2RayA/gui\n   yarn install\n   yarn build\n   cd ../web\n   ```\n   将该目录下的所有文件拷贝到`/src/http`, 然后 `sudo systemctl start httpd`, 访问`localhost`就行了\n\n\n\n#### 预告\n\n- shell美化\n- 常用软件安装\n\n\n\n\n\n\n\n\n\n","cover":"","link":"play-with-manjaro.html","preview":"\u003cp\u003e在Manjaro下玩耍\u003c/p\u003e\n","title":"Play With Manjaro"},{"content":"\n安卓布局笔记\n\n\n## 常用属性说明\n\n- `layout_width` \u0026 `layout_height` : 高度和宽度, match_parent 表示拉伸到父组件, wrap_content 表示, 内容有多大就撑多大\n- `layout_marginxxx`: 与旁边组件的距离\n- `paddingxxx`: 布局内部组件和边缘的距离\n- `android:clickable=\"true\"` \u0026 `android:focusable=\"true\"`: 让一个本来不可以点击的组件可以触发点击事件\n- `elevation`: Z轴抬起的高度, 一般用于搞阴影\n\n\n\n## 线性布局 LinearLayout\n\n### 常用属性\n\n- `orientation` 排列方向 取值: `horizontal` `vertical` 即纵向和横向布局\n\n### 子组件常用属性\n\n- `android:layout_weight`: 布局的权重, 例如, 当LinearLayout内有三个元素, 只有中间那个元素的 layout_weight 设置为1, 那么它会把其他两个撑开, 当然其它两个的layout_weight或者layout_height不要是match_parent, 两种行为可能会冲突, 导致最终效果不对\n- `android:layout_gravity` \u0026 `gravity`: 重力方向, 我一般配合 `android:layout_height=\"match_parent\"` 让文字纵向居中,\n- 也可以用于横向三个组件均分的情况\n\n## 相对布局 RelativeLayout\n\n相对布局用于各种奇怪的布局, 特别是多个块之间不是连在一起的(区别于线性布局), 组件多层的情况一般用这个\n\n### 子组件常用属性\n\n- `layout_alignParentxxx`: 对齐到父组件(容器)的某一边, 多写几个就可以让一个FloatingActionButton一直呆在右上角了\n- `android:layout_above` \u0026 `android:layout_below`: 顾名思义, 对齐到某个组件的上面或下面\n- `android:layout_alignLeft`系列: 不太好用的样子, 暂时还没有用这个\n\n## 网格布局 GridLayout\n\n这个就简单了, 布那种九宫格或者需要平均分的情况, 需要指定 `android:rowCount` 和 `android:columnCount`\n\n### 子组件常用属性\n\n- `layout_rowWeight` \u0026 `layout_columnWeight`: 同理, 权重, 一般也都是设置成1的, 不是1的情况也不多见\n\n\n\n\n\n","cover":"","link":"android-layout.html","preview":"\u003cp\u003e安卓布局笔记\u003c/p\u003e\n","title":"Android Layout"},{"content":"\nAndroid APP初始的操作, 调用后台API\n\n\n## 操作环境 \n\n- Android Studio 3.5.1\n\n## 步骤\n1. 没有模拟器的需要先建立模拟器\n2. 没有代理的先把gradle设置全局HTTP代理\n3. 建立kotlin项目, 选择Empty Activity\n4. 新建一个Activity, 在上面放几个按钮和文本框, 注意设置android:id和android:onClick\n5. 添加以下引用,Sync一下\n\n```gradle\n    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'\n    //okhttp提供的请求日志拦截器\n    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'\n    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'\n    implementation 'com.squareup.retrofit2:retrofit:2.5.0'\n    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'\n```\n6. AndroidManifest.xml 中修改一下 exported 属性, 一个APP必需要有一个默认的\n```xml\n\u003cactivity android:name=\".MainActivity\" android:exported=\"true\"\u003e\u003c/activity\u003e\n```\n7. 同样的 AndroidManifest.xml, 增加两条权限声明, 否则无法访问网络. **需要注意权限修改后需要卸载模拟器里的APP才可以, 可以到设置的APP列表里进行卸载, 调试的时候在外面看不到**\n\n```xml\n\u003cuses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/\u003e\n\u003cuses-permission android:name=\"android.permission.INTERNET\"/\u003e\n```\n\n8. res下建立xml目录, 并在其下建立 network_security_config.xml文件, 内容如下\n```xml\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cnetwork-security-config\u003e\n    \u003cbase-config cleartextTrafficPermitted=\"true\" /\u003e\n\u003c/network-security-config\u003e\n```\n9. AndroidManifest.xml 加入 networkSecurityConfig\n```xml\n\u003capplication\n    android:allowBackup=\"true\"\n    android:icon=\"@mipmap/ic_launcher\"\n    android:label=\"@string/app_name\"\n    android:roundIcon=\"@mipmap/ic_launcher_round\"\n    android:supportsRtl=\"true\"\n    android:networkSecurityConfig=\"@xml/network_security_config\"\n    android:theme=\"@style/AppTheme\"\u003e\n```\n\n10. 建立api接口, Observable需要引用 `import io.reactivex.Observable`\n\n```kt\ninterface ApiService {\n    @GET(\"/testGet\")\n    fun getData(@Query(\"a\") a:String):Observable\u003cResponseBody\u003e\n\n    @POST(\"/testPOST\")\n    fun postData(@Query(\"a\") a:String,@Body myBody:MyBody) :Observable\u003cMyBody\u003e\n}\n```\n\n11. 建立数据类\n```kt\ndata class MyBody (\n    val name:String,\n    val age:Int\n)\n```\n12. 创建自定义的httpclient\n\n```kt\nvar myClient = okhttp3.OkHttpClient.Builder()\n        .connectTimeout(10,TimeUnit.SECONDS)\n        .writeTimeout(5,TimeUnit.SECONDS)\n        .readTimeout(5,TimeUnit.SECONDS).build()\n```\n\n13. 可以调用了\n\n```kt\nvar retrofit = Retrofit.Builder().baseUrl(\"http://192.168.3.24:8585\").client(myClient)\n            .addCallAdapterFactory(RxJava2CallAdapterFactory.create())\n            .addConverterFactory(GsonConverterFactory.create())\n            .build()\n            .create(ApiService::class.java)\n            .postData(\"a\", MyBody(\"ss\",19))\n            .subscribeOn(Schedulers.io())\n            .observeOn(AndroidSchedulers.mainThread())\n            .subscribe({\n                resultTextView.setText(it.toString())\n            }) {\n                println(it)\n            }\n```\n\n14. 最后需要把 Retrofit2 封装一下方便调用\n\n\nPS: kotlin的语法还不太清楚, 瞎写的\n\n\n\n\n","cover":"","link":"android-startup.html","preview":"\u003cp\u003eAndroid APP初始的操作, 调用后台API\u003c/p\u003e\n","title":"Android APP初始的操作"},{"content":"\nUse msys2 as integrated shell\n\n\n## VSCode\n\nFirst, use `Everything` to search `msys2_shell.cmd` and get the full path. My path is long because I install msys2 by using scoop.\nThen, add config to VSCode setting.json file\n\n```json\n\"terminal.integrated.shell.windows\": \"path\\\\to\\\\msys2_shell.cmd\",\n\"terminal.integrated.shellArgs.windows\": [\"-defterm\", \"-msys2\", \"-no-start\", \"-here\"],\n```\n\n## Goland\n\nGo to `Setting`-\u003e`Tools`-\u003e`Terminal`-\u003e`Shell Path` and use string as follow\n\n```shell\n\"path\\\\to\\\\msys2_shell.cmd\" -defterm -msys2 -no-start -here\n```\n\n---\nYou can also change param `-msys2` to `-mingw64` which you like.\n\n\n\n\n\n\n","cover":"","link":"use-msys2-with-goland-or-vscode.html","preview":"\u003cp\u003eUse msys2 as integrated shell\u003c/p\u003e\n","title":"Use Msys2 With Goland or Vscode"},{"content":"\n使用putty的方式访问gcp\n\n\n## 前置要求\n- Winscp和putty两件套\n- GCP正在运行\n\n## 流程\n\n1. 打开GCP, 进入网页SSH, ![](/llinx.me/static/img/gcp-open-ssh.png)), 记下自己的用户名, 一般默认就是自己的gmail邮箱\n2. 打开Puttygen, 点击`Generate`, 不断移动鼠标生成一组key, 在`Key comment`处填上第一步的用户名, 并分别点击 `Save public key` 和 `Save private key`, 保存两个文件, 并妥善保存\n3. 复制`Public key for pasting into OpenSSH authorized_keys file`部分的文本, 粘贴到 `VM实例`-\u003e点击`instance-xxx`-\u003e`修改`-\u003e您有 xxx 个 SSH 密钥 `显示和修改` 这个位置中\n4. 打开WinSCP, 填上IP和用户名, 双击一下gcp.ppk, 点击登录即可","cover":"","link":"access-to-gcp-with-winscp-and-putty.html","preview":"\u003cp\u003e使用putty的方式访问gcp\u003c/p\u003e\n","title":"Access to Gcp With Winscp and Putty"},{"content":"\n使用 `X-Forwarded-For` \n\n\n有一个api需要IP地址鉴权, 即只有外网IP在其白名单中方可调用(下文称为\"白名单机\", 其IP为x.x.x.x), 开发机不能直接调用, 不方便调试\n\n### 最简单的方法\n\n例如我使用golang开发, 那么http.Client可以自定义Proxy, 只要在白名单机上架设一个CCProxy, 然后客户端调用时设置下代理即可\n\nPS: CCProxy 需要注意做好鉴权, 比如把当前的外网ip添加到CCProxy中. 若不作这种处理, 第二天你就会发现一堆连接上来的客户端了\n\n\n### 伪装\n\njava的服务端在判断客户端IP时, 一般都是从Header中取, 于是搜索一番, 把可能的几个header都加上, 排除法即可. 使用了这个后就无需经过一层代理转发了.\n\n\n","cover":"","link":"use-x-forwarded-for-header.html","preview":"\u003cp\u003e使用 \u003ccode\u003eX-Forwarded-For\u003c/code\u003e\u003c/p\u003e\n","title":"use X-Forwarded-For http header"},{"content":"\n\nGolang 创建对象的方式\n\n\n```go\ntype Struct struct {\n\n}\n```\n\n\n1. `s := new(Struct)`\n\n等同于 \n```go\nvar s *Struct = new(Struct)\n```\n\n\n2. `s := \u0026Struct{}`\n\n3. `var s Struct`\n\n```go\nc.Bind(\u0026s)\n```\n\n","cover":"","link":"golang-new-struct.html","preview":"\u003cp\u003eGolang 创建对象的方式\u003c/p\u003e\n","title":"Golang Create Struct"},{"content":"\n内部使用的api鉴权方式\n\n\n## API Key + API Secret\n\n由于是内部使用, 无需考虑存储成本\n\n基本流程如下\n\n1. 服务端以各种形式颁发 API Key 和 API Secret 给客户端\n2. 客户端发起请求时, 将 Query Param 以字母顺序进行排序, 生成类似 `a=1\u0026b=2\u0026c=3\u0026api_key=xxxx` 这样的字符串\n3. 在上面这个字符串后拼接上 API Secret 然后hash生成sign \n4. sign拼接到最终的请求地址中, 即 `a=1\u0026b=2\u0026c=3\u0026api_key=xxxx\u0026sign=xxxxxx`\n5. 服务端以相同的方式进行hash算出sign值和url中的进行比对即可确定该次请求是否合法\n\n好了, 上面这样就可以确保请求的**参数不被修改**, 因为如果被修改, 签名sign就会不同. 同时因为 API Secret 并没有在传输过程中被中间人知道, \n因此, 通过猜测去进行算sign也是行不通的\n\n\n完成上面这样之后, 需要阻止重放攻击, 假设当前的请求url `https://example.com/api?a=1\u0026b=2\u0026c=3\u0026api_key=xxxx\u0026sign=xxxxxx` 被拦截了, \n那么攻击者只要原封不动把这个请求再进行一次即可持续不断地向服务器发起请求\n\n于是, 增加 timestamp 和 nonce, 一个是请求发起时的 Unix 时间戳, 另一个是随机数.\n\n服务端拿到timestamp之后, 校验一下, 只允许最近一分钟的请求通过, 或者更短的间隔, 就保证了一个timestamp只有在当次的请求有效.\n\n而服务端对于nonce的处理则是, 在第一次请求完成后, 将之存到redis, 并且为60s后过期, 这样每个nonce也只能使用一次.\n\n除非攻击者获得了 API Key API Secret  以及你使用的加密方式才可以发动攻击.\n\n当然, 服务端需要作一些ban ip之类的策略, 防止恶意的请求消耗资源\n\n\n\n\n\n\n\n\n\n\n\n\n\n","cover":"","link":"http-api-auth.html","preview":"\u003cp\u003e内部使用的api鉴权方式\u003c/p\u003e\n","title":"Http Api Auth"},{"content":"\n部署自己的可以访问私有仓库的goproxy服务\n\n\n# 准备工作\n\n- 一台服务器， 可以选择国内或者国外， 区别后面说\n- 域名和https证书， 方便记忆和设置\n- 安装并设置好golang的环境，例如安装到`/usr/local/go` `GOPATH` 在`/usr/local/gopath`\n- nginx\n\n# 安装goproxy\n\n以下方法均可\n\n- `go get -u -v github.com/goproxyio/goproxy` \n- `git clone https://github.com/goproxyio/goproxy.git`\n\n----\n\n这里简要略过\n\n- `cd $GOPATH/src/github.com/goproxyio/goproxy`\n- `go build`\n\n# 配置无需登录访问私有仓库\n\n以gitee为例\n\n1. `ssh-keygen -t rsa -C \"your_email@example.com\"` 生成并添加公钥到gitee后台\n2. `git config --global user.name \"John Doe\"` 和 `git config --global user.email johndoe@example.com` 配置好git\n3. 一般如果是github这样就可以直接进行git push之类的操作了， 但是gitee不行， 因为这货的https上不能使用公钥进行访问， 必须使用ssh://协议， 于是这样\n\n\n~/.gitconfig\n\n```\n[url \"ssh://git@gitee.com\"]\n        insteadOf = https://gitee.com\n```\n\n~/.ssh/config\n```\nHost gitee.com\nHostName gitee.com\nPort 22\nStrictHostKeyChecking no\nIdentityFile /root/.ssh/id_rsa\n```\n\n# 运行goproxy\n\n```\nnohup /path/goproxy -listen=0.0.0.0:801 -cacheDir=/usr/local/gopath -proxy=https://goproxy.io -exclude gitee.com \u0026\n```\n\n这里说一下各个选项的区别\n\n- `-listen=0.0.0.0:801` 如果服务器上没有其他80端口的服务， 这里倒是可以直接用80， 不过goproxy好像没有作https的相关配置，因此想在不使用nginx的情况下，就需要改代码了， 还好代码没几行\n\n而如果使用nginx， 并且已经有80和443服务的情况下， 可以这样  `-listen=127.0.0.1:801`\n\n```\nserver {\n     listen 443 ssl http2;\n     server_name  proxy.example.com;\n\n    add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains; preload\";\n    ssl_certificate /path/to/proxy.example.com.cer;\n    ssl_certificate_key /path/to/proxy.example.com.key;\n    ssl_session_timeout 5m;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;\n    ssl_prefer_server_ciphers on;\n\n    location / {\n        proxy_pass   http://127.0.0.1:801;\n    }\n}\n\n```\n\n- `-cacheDir=/usr/local/gopath` 这个路径就不要乱写了， 直接和GOPATH一样即可\n- `-proxy=https://goproxy.io` 上级代理，国内服务器这个选项应该是必须的的， 国外的其实可以用server模式\n- `-exclude gitee.com` 忽略域名，这个域名下的仓库会直连， 因此要保证能不用验证直接clone代码\n\n# 以服务形式运行\n\n源码目录下的goproxy.service可以使用, 不过需要加点东西\n\n```\n[Unit]\nDescription=goproxy service\nDocumentation=https://goproxy.io\nAfter=network-online.target\n\n[Service]\nUser=root\nGroup=root\nLimitNOFILE=65536\nEnvironment=PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/usr/local/go/bin:/root/bin:/usr/local/gopath/bin\nExecStart=/path/goproxy -listen=127.0.0.1:801 -cacheDir=/usr/local/gopath -proxy=https://goproxy.io -exclude \"gitee.com\"\nWorkingDirectory=/path\nKillMode=control-group\n\n[Install]\nWantedBy=multi-user.target\nAlias=goproxy.service\n```\n\n`Environment=PATH=` 来自于 echo $PATH\n\nPS: `systemctl enable goproxy`时提示 `Failed to execute operation: Invalid argument` 删除这一行即可 `Alias=goproxy.service`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","cover":"","link":"deploy-your-own-goproxy-with-access-to-private-server.html","preview":"\u003cp\u003e部署自己的可以访问私有仓库的goproxy服务\u003c/p\u003e\n","title":"Deploy Your Own Goproxy With Access to Private Server"},{"content":"\n\n最简单的发起POST请求\n```\nab -n 10000 -c 10 -T 'application/json' -p body.txt  http://ip:port/api/post\n```\n\n`ab -n 总请求次数 -c 模拟用户数(线程数) -T 'application/json' -p body.txt  POST的地址`\n\nbody.txt 里写入body json的内容\n\n要格外注意的是  `-T` 必须要在 `-p` 之前, 否则后端将无法取得正确的`Content-Type`\n","cover":"","link":"apache-ab-test.html","preview":"","title":"Apache ab test tool"},{"content":"\nCentOS 7 安装nginx(非编译安装)\n\n\n\u003e http://nginx.org/en/linux_packages.html#RHEL-CentOS\n\n```bash\nyum install sudo\nsudo yum install yum-utils\nvim /etc/yum.repos.d/nginx.repo\n\n```\n\n```config\n[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\n```\n\n```\nsudo yum-config-manager --enable nginx-mainline\nsudo yum install nginx\nvim /etc/nginx/conf.d/default.conf\n```\n\n```nginx\nserver {\n    listen  80;\n    server_name llinx.me;\n    rewrite ^(.*)$  https://$host$1 permanent;\n}\n\nserver {\n    listen 443 ssl;\n    server_name llinx.me;\n\n    ssl_certificate /etc/ssl/llinx.me.cer;\n    ssl_certificate_key /etc/ssl/llinx.me.key;\n    ssl_session_timeout 5m;\n    ssl_protocols SSLv2 SSLv3 TLSv1;\n    ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n    ssl_prefer_server_ciphers on;\n    location / {\n        root /var/www;\n        index index.html index.htm;\n    }\n\n}\n```\n\nPS: `ssl_certificate_key` 这玩意拼写不要错了, 我也不知道从哪找了一个, 导致 `nginx -t` 的时候一直提示 `ssl_certficate_key` ( \u003c= 这个是错误的, 少了个`i`) , 但是对着看半天也没看出啥问题 `nginx -V` 也有https模块的\n\n\n\n\n","cover":"","link":"centos-install-nginx-mainline-version-and-configure-https.html","preview":"\u003cp\u003eCentOS 7 安装nginx(非编译安装)\u003c/p\u003e\n","title":"Centos Install Nginx Mainline Version and Configure Https"},{"content":"\n远程部署相关命令\n\n\n# Windows版\n\n## 必需软件\n\n- [zip.exe](http://www.stahlworks.com/dev/index.php?tool=zipunzip) \n- [git-scm](https://git-scm.com/)\n\n## 须知\n\n- git-bash下可以调用exe\n- git-bash下的路径对应关系为 `C:\\ \u003c=\u003e /c/`  `D:\\ \u003c=\u003e /d/`\n- windows下的sh脚本, 顶部可以写成这样\n  ```\n  #!/bin/bash\n  ```\n  or\n  ```\n  #!\"C:\\Program Files\\Git\\bin\\bash.exe\"\n  ```\n\n  前者的写法, 可以直接双击运行sh脚本, 或者在powershell里调用\n  后者主要用于jenkins这种, 特别是windows上的jenkins, jenkins是无法识别`/bin/bash` 这个路径的, 而git-bash应该是直接关联了 .sh文件的打开方式了(意思是 `#!/bin/bash` 这行不写也可以)\n\n## 压缩命令\n\n```\nzip -q -r name.zip /c/name\n```\n- `-q` 静默, 不输出详细日志\n\n- `-r` 迭代目录\n\n## scp 传输文件\n```\nscp -i $PPKFILE $LOCALNAME $LOGINUSERNAME@$SERVERIP:$REMOTEEXECTEMP\n```\n`PPKFILE` 的内容应该是 `BEGIN RSA PRIVATE KEY`, 来源是可以用Puttygen转换ppk密钥, 必需为OPENSSH的格式\n\n## ssh 执行远程命令\n```\nssh -i $PPKFILE $LOGINUSERNAME@$SERVERIP \u003c\u003c remotessh\nremotessh\n```\n目前暂不知道如何在两个remotessh之间使用变量\n\n\n\n\n\n\n\n\n\n\n","cover":"","link":"remote-deploy-command.html","preview":"\u003cp\u003e远程部署相关命令\u003c/p\u003e\n","title":"远程部署相关命令"},{"content":"\nGOPATH项目迁移到go mod流程\n\n\n## 步骤\n\n1. 把项目目录原封不动移动到任意一个不在`GOPATH`内的目录下, 例如`D:\\workspace\\projectname`\n2. `go mod init projectname`\n3. 替换原有的引用路径, `\"xxx/xxx/projectname/module\" =\u003e  \"projectname/module\"`, 全局搜索 `xxx/xxx/` 全部替换为空即可\n4. `.gitignore` 忽略 `go.sum`\n5. `go build`\n\n## 注意\n1. 尽量不使用本地包, 像 `xxx/xxx/module` 这样的, 把本地包推送到线上的git仓库里去\n2. windows下在powershell或者vscode的终端执行 `$env:GOPROXY=\"https://goproxy.io\"` , 可以让下载包的过程更快, 而当遇到 `gitee.com` 上面的包的时候, 因为 `https://goproxy.io` 没有把`gitee.com`考虑在内, 此时可以 `$env:GOPROXY=\"\"` 临时清除环境变量 `go build` 一次, 毕竟 `github.com` 对我们来说也是很慢的\n3. 对于第2点, go版本`\u003e=1.13`的时候, 可以使用\n \n```go\ngo env -w GOPROXY=https://goproxy.io,direct\ngo env -w GOPRIVATE=gitee.com\n```\n忽略一些域名, 然而1.13还在beta状态, (─.─|||\n","cover":"","link":"gopath-to-go-module.html","preview":"\u003cp\u003eGOPATH项目迁移到go mod流程\u003c/p\u003e\n","title":"Migrate from GOPATH to Go mod"},{"content":"\nCentos6 Supervisor\n\ncentos6 不能使用systemd进行守护，使用supervisor\n\n# 首先需要升级python到2.7版本\n\u003e 参考 https://www.cnblogs.com/gjc592/p/9223005.html\n\n## 安装2.7 python\n```bash\nyum install gcc -y\nwget https://www.python.org/ftp/python/2.7.16/Python-2.7.16.tgz\ntar -zxvf  Python-2.7.16.tgz\ncd Python-2.7.16\n./configure --prefix=/usr/local/python2.7\nmake \u0026\u0026 make install\n```\n\n## 检测下\n```bash\ncd /usr/local/python2.7/bin\nll\nwhereis python\n```\n\n## 创建新的文件链接\n```bash\ncd /usr/bin\nll *python*\nunlink python\nunlink python2\nll *python*\ncp /usr/local/python2.7/bin/python2.7 /usr/bin/python2.7  #注意路径\nln -s /usr/bin/python2.7  python　　　　　　\nln -s python  python2\nll *python*   \npython               #可以看到提示的Python2.7.15,证明安装成功，但是还没有彻底结束\n```\n\n## 修改yum启动路径\n```bash\nvim /usr/bin/yum　#将头部#!/usr/bin/python 修改为 #!/usr/bin/python2.6\nyum install gcc -y #测试一下\n```\n\n# 然后安装supervisor\n\nsupervisor在centos6上需要python2.7，同时需要pip来安装, 在上面升级了python之后，应该是需要重新安装pip和setup_tool的， 安装过程略\n\n## pip==9.0.1 错误\n先\n```bash\neasy_install pip==9.0.1\n```\n如果 `pkg_resources.DistributionNotFound: distribute==0.6.10`\n则 安装 distribute-0.6.10\n```bash\nwget http://pypi.python.org/packages/source/d/distribute/distribute-0.6.10.tar.gz\ncd distribute-0.6.10\npython setup.py install\n```\n再安装一次\n```bash\neasy_install pip==9.0.1\n```\n\n最后 pip 确保可以正常输出\n\n\n## 安装supervisor\n```bash\neasy_install supervisor\n```\n\n测试一下这个\n```bash\npython\npython\u003e\u003e\u003e import supervisor\n```\n\n执行生成配置\n```bash\necho_supervisord_conf \u003e /etc/supervisord.conf\n```\n\n配置文件里\n```conf\n[supervisord]\nlogfile=/var/log/supervisord.log ; main log file; default $CWD/supervisord.log\n\n[include]\nfiles = supervisord.d/*.ini\n```\n\n如果不增加其他配置文件 include也可以不管， 直接在supervisord.conf里加也是可以的\n\n\n配置范例如下:\n```conf\n[program:golang-http-server]\ncommand=/home/golang/simple_http_server\ndirectory=/home/golang/\nautostart=true\nautorestart=true\nstartsecs=10\nstdout_logfile=/var/log/simple_http_server.log\nstdout_logfile_maxbytes=1MB\nstdout_logfile_backups=10\nstdout_capture_maxbytes=1MB\nstderr_logfile=/var/log/simple_http_server.log\nstderr_logfile_maxbytes=1MB\nstderr_logfile_backups=10\nstderr_capture_maxbytes=1MB\n\n\n[program:jingkongapp]\ncommand = /data/www/group/app/jingkongapp \nautostart = true\nautorestart = true\ndirectory=/data/www/group/app/\nuser = root\nredirect_stderr=true \nstdout_logfile=/data/www/group/app/log.txt \nstderr_logfile=/data/www/group/app/log_err.txt\n```\n注意directory 和 stdout_logfile redirect_stderr 要设置起来， 否则可能会运行后直接退出，启动的时候 ERROR (spawn error)错误\n同时需要保证对应的服务端口没有被占用, 总之不能有阻碍程序运行的因素存在， 最好程序中尽量不使用相对路径\n\n\n# 最后\n\n```bash\nsupervisorctl status # 查看状态\nsupervisorctl stop all #停止所有\nsupervisorctl start all #启动所有\nsupervisorctl tail appname #模拟启动\nsupervisorctl reload #重新加载配置\n```","cover":"","link":"centos6-supervisor.html","preview":"\u003cp\u003eCentos6 Supervisor\u003c/p\u003e\n","title":"Centos6 Supervisor"},{"content":"\nRPG MV 验证器简单绕过\n\n\n- 关键字1: system core\n- 关键字2: start main\n- 关键字3: 启动游戏.exe\n\n验证器的主要作用是加解密 `.\\www\\data ` 目录下的json数据文件\n打开时解密, 退出时加密, 这样可以防止使用 RPG MV 进行二次修改, \n同时, 在没有运行验证器的情况下, 不能直接打开Game.exe, 因为此时的json文件进行过加密.\n\n这就恶心了, 有时候游戏出个bug啥的, 想打开工程自己改改就行, 没想到不能改\n\n解决方法很简单, 运行一次程序, 然后进程里结束system core的那个进程即可, 阻止了其加密过程, 然后在 www目录下放个 Game.rpgproject 即可编辑了, 保存一次后面就可以直接运行Game.exe来跑游戏了\n\n一般带验证器的, 都是解包过的\n\n\n\n\n\n","cover":"","link":"rpgmv-startup-encry.html","preview":"\u003cp\u003eRPG MV 验证器简单绕过\u003c/p\u003e\n","title":"RPG MV 验证器简单绕过"},{"content":"\nqrFileTransfer 的前端界面\n\n\n憋了好多天, 终于开始把这个界面写一下了. 其实原型在之前已经画出来了, 只是一直在想, \"这样的界面可不可以, 能不能实现自己的想法\". \n内部原因其实是我对这个项目未来会有什么功能不是很坚定, 总觉得哪里不对劲, 哪里缺了啥. 于是我这个不会前端的家伙又开始写html了.\n\n搞张图先看看吧\n\n![](/images/2019-06-04_195852.png)\n\n折腾了一下午, 总算定下来用 `el-row` 来布局, 之前用 `el-container` 发现不管怎么搞都不是我要的样子, 要么乱跳, 我反正是一到html布局这块就一脸懵逼的, 看视频的时候差点就想用`bootstrap`弄了\n\n代码就不贴了, 等完成了再上\n\n接下来, 准备对着这个草稿似的界面, 把需要用的api写出来( (─.─||| 见过接口要靠界面来定的么?!!)\n\n\n\n","cover":"","link":"qrtransfile-front-page-by-vue.html","preview":"\u003cp\u003eqrFileTransfer 的前端界面\u003c/p\u003e\n","title":"qrFileTransfer Web Page by Vue"},{"content":"\n\n- DNS add AAAA record\n- nginx config\n  \n  ```nginx\n  server {\n      listen [::]:443 ssl;\n      server_name ipv6.llinx.me;\n  }\n\n  ```\n\n\n- ```bash\n  nginx -s stop\n  nginx\n  ```","cover":"","link":"blog-add-ipv6-support.html","preview":"","title":"Blog Add Ipv6 Support"},{"content":"\n加入boltdb\n\n\n```go\npackage db\n\nimport (\n\n\t\"github.com/asdine/storm\"\n\tbolt \"go.etcd.io/bbolt\"\n\t\"qrcodeTransferBox/config\"\n\t\"time\"\n)\n\nvar (\n\tDb *storm.DB\n)\n\nfunc InitDB() (*storm.DB,error) {\n\td,_ := time.ParseDuration(config.Cfg.Db.Timeout)\n\treturn storm.Open(config.Cfg.Db.DbPath, storm.BoltOptions(0600, \u0026bolt.Options{Timeout: d}))\n}\n```\n这里用的是storm这个库, 看起来好像调用方式更\"容易看懂\"点, 先用着看看. 另外这个库调用的是\n[go.etcd.io/bbolt](https://github.com/etcd-io/bbolt)这个版本 \n\n然后main.go里初始化一下\n\n```go\nvar err error\ndb.Db, err =  db.InitDB()\nif err != nil {\n  panic(err)\n}  \n```\n\n写了一个AccessLog, 测试一下写日志进去\n\n```go\npackage utils\n\nimport (\n\t\"github.com/gin-gonic/gin\"\n\t\"qrcodeTransferBox/db\"\n\t\"qrcodeTransferBox/model\"\n\t\"time\"\n)\n\nfunc WriteAccessLog(c *gin.Context) {\n\tlog := model.AccessLog{\n\t\tDateTime:time.Now(),\n\t\tPath:c.Request.RequestURI,\n\t\tAction:c.Request.Method,\n\t}\n\t_ = db.Db.Save(\u0026log)\n}\n```\n\n后面考虑情况, 弄成middleware的方式\n\n测试了之后, 看一下数据, 发现qr.db已经生成, 找了个`https://github.com/br0xen/boltbrowser`工具来查看一下数据(这个工具的预编译下载地址的服务器很慢, 要上代理才行)\n\n---\n找了一下对于Db这种全局可能只需要一个实例的情况要如何在golang里处理, 大致有两个\n\n* 一次初始化, 全局调用, 引用一下就行\n* 写到context里\n* 如果是orm的话, 把db放到model里去\n\n不过第二种, 在用的时候还要写几行代码取到实例才行, 还要处理下错误, 算了算了惹不起","cover":"","link":"add-boltdb.html","preview":"\u003cp\u003e加入boltdb\u003c/p\u003e\n","title":"Add Boltdb"},{"content":"\n增加Bark推送以及json配置文件\n\n\n\n配置文件\n---\n\n配置文件类似如下\n\n```json\n{\n  \"port\":1005,\n  \"db\":{\n    \"dbPath\":\"qr.db\",\n    \"timeout\":1\n  },\n  \"limit\":{\n    \"maxSingleFileSize\":102400,\n    \"maxFileCount\":10,\n    \"expiredTime\":\"1h\",\n    \"downloadLimit\":-1,\n    \"canAccessWhenAllExpired\":false\n  },\n  \"bark\":{\n    \"server\":\"http://IP:端口\",\n    \"key\":\"你的key\"\n  }\n\n}\n```\n然后可以使用 `https://mholt.github.io/json-to-go/` 等类似的服务转成struct\n\n```go\ntype Config struct {\n\tPort int `json:\"port\"`\n\tDb struct {\n\t\tDbPath string `json:\"dbPath\"`\n\t\tTimeout int `json:\"timeout\"`\n\t} `json:\"db\"`\n\tLimit struct {\n\t\tMaxSingleFileSize int `json:\"maxSingleFileSize\"`\n\t\tMaxFileCount int `json:\"maxFileCount\"`\n\t\tExpiredTime string `json:\"expiredTime\"`\n\t\tDownloadLimit int `json:\"downloadLimit\"`\n\t\tCanAccessWhenAllExpired bool `json:\"canAccessWhenAllExpired\"`\n\t} `json:\"limit\"`\n\tBark struct {\n\t\tServer string `json:\"server\"`\n\t\tKey string `json:\"key\"`\n\t} `json:\"bark\"`\n}\n```\n再写个方法, 搞个全局变量就能用了\n\n```go\nvar (\n\tCfg Config\n)\n\nfunc LoadConfig(file string) (err error) {\n\tvar f *os.File\n\tf, err = os.Open(file)\n\tdefer f.Close()\n\tif err != nil {\n\t\treturn\n\t}\n\tjsonParser := json.NewDecoder(f)\n\treturn jsonParser.Decode(\u0026Cfg)\n}\n```\nmain.go里读取一下, 用 `-c /path/to/config.json`运行\n```go\nvar (\n\tconfigFile string\n)\n\nfunc init() {\n\tflag.StringVar(\u0026configFile, \"c\", \"config.json\", \"config json file\")\n}\n\nfunc main()  {\n  config.LoadConfig(configFile)\n}\n```\n\nBark推送\n---\n\n这个就简单了, 当然要先把服务搭起来能用先\n\n```go\npackage utils\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n\t\"net/http\"\n\t\"qrcodeTransferBox/config\"\n)\n\nfunc SendBarkUrl(title string,url string) error {\n\tif (title == \"\" || url == \"\") {\n\t\treturn errors.New(\"param cannot be empty\")\n\t}\n\tlink := fmt.Sprintf(\"%s/%s/点击下载[%s]?url=%s\",config.Cfg.Bark.Server,config.Cfg.Bark.Key,title,url)\n\tgo http.Get(link)\n\treturn nil\n}\n\nfunc SendBarkMsg(content string) error {\n\tif (content == \"\") {\n\t\treturn errors.New(\"param cannot be empty\")\n\t}\n\tlink := fmt.Sprintf(\"%s/%s/%s\",config.Cfg.Bark.Server,config.Cfg.Bark.Key,content)\n\tgo http.Get(link)\n\treturn nil\n}\n\n```\n\n主要实现两种方式, 一个是直接推送文本的消息, 另一个用于文件上传完成之后, 可以在手机上点击直接下载或者跳转到相应的pack网址\n\n\n","cover":"","link":"add-bark-and-config.html","preview":"\u003cp\u003e增加Bark推送以及json配置文件\u003c/p\u003e\n","title":"Add Bark and Config"},{"content":"\nGolang 文件上传\n\n\n\n```go\ng1 := r.Group(\"/api\")\ng1.Use(middlewares.JWTAuth(),cors.Default())\n{\n  g1.GET(\"/ping\", func(c *gin.Context) {\n    c.JSON(http.StatusOK,gin.H{\"code\":http.StatusOK,\"message\":\"pong /api\"})\n  })\n  g1.POST(\"/u\", func(c *gin.Context) {\n    log.Println(\"/u POST\")\n    form, err := c.MultipartForm()\n    if err != nil {\n      c.JSON(http.StatusOK, gin.H{\"code\":http.StatusBadRequest,\"msg\":fmt.Sprintf(\"error get form: %s\",err.Error())})\n      return\n    }\n    files := form.File[\"files\"]\n\n    for _, file := range files {\n      basename := filepath.Base(file.Filename)\n      filename := filepath.Join(\".\", basename)\n      if err := c.SaveUploadedFile(file, filename); err != nil {\n        c.JSON(http.StatusOK, gin.H{\"code\":http.StatusBadRequest,\"error\": err.Error()})\n        return\n      }\n    }\n\n    var filenames []string\n    for _, file := range files {\n      filenames = append(filenames, file.Filename)\n    }\n    c.JSON(http.StatusOK, gin.H{\"code\":http.StatusAccepted,\"msg\":\"upload ok!\",\"data\": gin.H{\"files\":filenames}})\n  })\n}\n```\n可同时上传多个文件\n\n\n分别使用`Postman` `git bash里的curl` `Windows子系统里的curl` 调用\n\nPostman\n---\n![](/images/2019-05-30_170818.png)\n\nkey 的值对应 上面代码里的 `files := form.File[\"files\"]` 这一段\n\nKali\n---\n```bash\ncurl \\\n--request POST \\\n--url http://localhost:1005/api/u \\\n--header 'token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ\n9.eyJzZXNzaW9uSWQiOiI2Y2JlMmFlYS1lMTFiLTQzOTItYTI4NS05NTRkZDhmMTBkNzAiLCJ1c2VySWQiOiIwIiwiZXhwIjoxNTU5MjA4NjI2LCJpc3MiOiJsbGlueC5tZSIsIm5iZiI6MTU1OTIwN\nDAyNn0.0nBvCIPHR9ro_hhxgvoy6uc7Q0ftS1d5D8PXDa3zU04' \\\n-F \"files=@/mnt/c/Users/linx/Desktop/1.txt\"\n```\n\n\u003e 一开始的时候提示 setting file failed, 还以为是不支持中文啥的\n\u003e 后来发现子系统的路径是不一样的  (─.─|||\n\n\ngit bash\n---\n```bash\ncurl \\\n--request POST \\\n--url http://localhost:1005/api/u \\\n--header 'token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiI2Y2JlMmFlYS1lMTFiLTQzOTItYTI4NS05NTRkZDhmMTBkNzAiLCJ1c2VySWQiOiIwIiwiZXhwIjoxNTU5MjA4NjI2LCJpc3MiOiJsbGlueC5tZSIsIm5iZiI6MTU1OTIwNDAyNn0.0nBvCIPHR9ro_hhxgvoy6uc7Q0ftS1d5D8PXDa3zU04' \\\n-F \"files=@C:/Users/linx/Desktop/1.txt\"\n```\n\n---\n- `--request`选项可以用 `-X`代替\n- 而如果 url 放在最后, 就不用写 --url 了\n- `--header`则可以使用 `-H`\n- `SaveUploadedFile`的时候, 对应的目录必须事先创建好, 否则报错\n\n\nVue上传页面(el-upload)\n---\n\n加了本地存储来存储token\n\n```html\n\u003ctemplate\u003e\n  \u003cdiv\u003e\n    \u003cel-button size=\"small\" type=\"primary\" @click=\"doAuth\"\u003e认证\u003c/el-button\u003e\n    \u003cel-upload\n      class=\"upload-demo\"\n      ref=\"upload\"\n      action=\"/api/u\"\n      name=\"files\"\n      :multiple=\"true\"\n      :drag=\"true\"\n      :headers=\"uploadHeaders\"\n      :on-preview=\"handlePreview\"\n      :on-remove=\"handleRemove\"\n      :file-list=\"fileList\"\n      :auto-upload=\"false\"\n    \u003e\n      \u003cel-button slot=\"trigger\" size=\"small\" type=\"primary\"\u003e选取文件\u003c/el-button\u003e\n      \u003cel-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\"\u003e上传\u003c/el-button\u003e\n    \u003c/el-upload\u003e\n  \u003c/div\u003e\n\u003c/template\u003e\n\n\u003cscript\u003e\nexport default {\n  data() {\n    return {\n      fileList: [],\n      uploadHeaders: {\n        token: \"\"\n      }\n    };\n  },\n  methods: {\n\n    submitUpload() {\n       this.$refs.upload.submit();\n    },\n    handleRemove(file, fileList) {\n      console.log(file, fileList);\n      this.fileList = fileList;\n    },\n    handlePreview(file) {\n      console.log(file);\n    },\n    doAuth() {\n        var token = localStorage.getItem('token');\n        console.log(token)\n      this.$http.get(\"/index/\",{headers:{'token' : token}}).then(\n        function(res) {\n          console.log(res);\n          if (res.body.code == 201) {\n            this.uploadHeaders.token = res.body.data.token;\n            localStorage.setItem(\"token\",this.uploadHeaders.token);\n          } else if (res.body.code == 100) {\n            this.uploadHeaders.token = token;\n          }\n          \n        },\n        function(err) {\n          console.log(err);\n        }\n      );\n    }\n  }\n};\n\u003c/script\u003e\n```\n\n---\n\n- `form.File[\"files\"]` 和 `name=\"files\"` 这两个需要对应, 最终会体现在header里\n- 使用 `:headers=\"uploadHeaders\"`\n  \n  ```typescript\n  uploadHeaders: {\n        token: \"\"\n      }\n\n  this.uploadHeaders.token = token;\n  ```\n  这样的方式来让上传组件带上咱自己的token\n\n\n- `action=\"/api/u\"` 和 `this.$http.get(\"/index/\",{headers:{'token' : token}})`\n  \n  这种不需要带域名端口的方式需要在项目根目录下创建 `vue.config.js`, 内容如下\n\n  ```js\n  module.exports = {\n    devServer: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:1005/api', \n          ws: true,\n          changeOrigin: true,\n          pathRewrite: {\n            '^/api': ''    \n          }\n        },\n        '/index': {\n          target: 'http://localhost:1005/index',   \n          ws: true,\n          changeOrigin: true,\n          pathRewrite: {\n            '^/index': '' \n          }\n\n        }\n      }\n    }\n  }\n  ```\n  或者 简单点\n  ```js\n  module.exports = {\n    devServer: {\n      proxy: {\n        '/api': {\n          target: 'http://localhost:1005',   //代理接口\n          ws: true,\n          changeOrigin: true\n        },\n        '/index': {\n          target: 'http://localhost:1005',   //代理接口\n          ws: true,\n          changeOrigin: true\n        }\n      }\n    }\n  }\n  ```\n  这样的方式不仅让调用更简单, 同时还能跨域, 当然后端也要加一句 `g1.Use(middlewares.JWTAuth(),cors.Default())`\n\n\n\n\n\n\n\n\n\n","cover":"","link":"golang-file-upload.html","preview":"\u003cp\u003eGolang 文件上传\u003c/p\u003e\n","title":"Golang File Upload"},{"content":"\n\n\n由于换了移动宽带，以前的搬瓦工的服务器已经完全不能满足现有的FQ需求了。虽然我的翻墙频率也不是很高，也就偶尔google一下，下点github代码，youtube看看视频，基本就没啥别的了。但是各种不能访问的情况，我是受不了的。\n\n于是就去寻找对移动宽带好的服务器，前两天有人说DigitalOcean的新加坡服务器还不错，虽然每月要5美元，一年下来要400+ CNY。不过不能一直这么下去，于是就搞了一台。在昨天各种鼓捣，顺利地把博客啥的全都迁移过去了，果然静态页面的博客就是舒服，只要把博客的自动生成脚本迁移过去就行了。然而好景不长，服务器的延迟虽然不高140ms左右，但是到晚上的时候简直惨不忍睹，不是慢了，而是根本就不能用。\n\n不信邪的我今天尝试去找着原因，traceroute一番发现，先是跳了北京移动然后香港出去，相当于绕了大半个中国。兜兜转转又看到了Vultr的，刚好faq的页面上有下载测试的，试了一下SGP的可以跑到满速11M+，同时也试了一下JP的，感觉比SGP的稍差一点，应该是SGP的是走PCCW线路的缘故，而且延迟更低90ms左右，又花了一下午搭了起来，记录一下\n\n\n编译安装nginx with fancyindex\n---\n\n编译指令\n\n```bash\n./configure --prefix=/usr/local/nginx \\\n --add-module=../ngx-fancyindex-0.4.3/ \\\n --with-http_ssl_module\n```\n之前第一次弄的时候忘了ssl模块，又搞了一次\n\n安装\n```bash\nmake \u0026\u0026 make install\n```\n\n添加alias\n```bash\nvi ~/.bashrc\nalias nginx='/usr/local/nginx/sbin/nginx'\n```\n\n生成SSL证书\n---\n```bash\n# 设置API调用的KEY和密钥\nexport Ali_Key=\"阿里云KEY\"\nexport Ali_Secret=\"阿里云密钥\"\n\n#申请证书\nacme.sh --issue --dns dns_ali -d llinx.me -d *.llinx.me\n#安装证书到指定位置\nacme.sh --installcert -d llinx.me \\\n               --keypath       /path/to/ssl/llinx.me.key  \\\n               --fullchainpath /path/to/ssl/llinx.me.pem\n```\n\nnginx配置\n---\n```nginx\n# nginx.conf\n\nlisten       80;\nserver_name llinx.me;\nrewrite ^(.*) https://$server_name$1 permanent;  #跳转到https\n\nserver {\n    listen 443 ssl default_server;\n    server_name llinx.me;\n    root html;\n    ssl_certificate /path/to/ssl/llinx.me.pem;\n    ssl_certificate_key /path/to/ssl/llinx.me.key;\n\n    index index.html;\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n```\n\n这里还有一份fancyindex的配置，不过我没弄上去.对应的目录下要放上类似fancydark这样的主题目录（fancyindex）\n```nginx\n# nginx.conf\nserver {\n    listen 80;\n    server_name d.llinx.me;\n    rewrite ^(.*) https://$server_name$1 permanent;\n}\n\nserver {\n    listen 443 ssl;\n    server_name d.llinx.me;\n    root down;\n    include fancyindex.conf;\n    ssl_certificate /path/to/ssl/llinx.me.pem;\n    ssl_certificate_key /path/to/ssl/llinx.me.key;\n}\n\n#fancyindex.conf\n\nfancyindex on;\nfancyindex_localtime on;\nfancyindex_exact_size off;\nfancyindex_header \"/fancydark/header.html\";\nfancyindex_footer \"/fancydark/footer.html\";\nfancyindex_ignore \"fancydark\";\nfancyindex_name_length 255;\n```\n\nhugo自动生成博客\n---\n\n使用的是github上的一个webhook项目\n\n\n```bash\nnohup /path/to/webhook/webhook -hooks hooks.json -port 9002 -secure -key /path/to/ssl/llinx.me.key -cert /path/to/ssl/llinx.me.pem \u0026\n```\n\nhooks.json\n```json\n\n[\n  {\n    \"id\": \"redeploy-webhook\",\n    \"execute-command\": \"/path/to/webhook/hugo.sh\",\n    \"command-working-directory\": \"/path/to/webhook\"\n  }\n]\n\n```\n拷贝hugo的可执行文件到/usr/local/bin/下，保证任意地方都可以执行hugo命令\n\n然后再丢一个hugo.sh去执行博客的生成即可，其实也就是到目录下hugo一下，再把public里的内容拷贝到nginx目录即可\n\n自己写的不知道会不会去用的二维码生成服务\n---\n\n配置已经都是默认写在代码里了\n```bash\nnohup /path/to/go-qr/go-qr \u0026\n```\n\n一个中转服务器\n---\n\n必须先把aria2先安装上，不然启动的时候会报错退出。源代码是这个 [https://github.com/hanjm/file_download_proxy](https://github.com/hanjm/file_download_proxy).\n\n我自己进行了改造， 改成了https的版本\n\n```bash\nrpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm\nyum install aria2 -y\nnohup /path/to/fdp/fdp -auth 用户名:密码 -limit 1 -port 9001 \u003e fdp.log 2\u003e\u00261 \u0026\n```\n\n由于这货自带HTTP文件服务器功能，所以不需要开启fancyindex了\n\n\n最后\n---\n把该运行的程序加入到开机启动 /etc/rc.d/rc.local, 部分centos版本会需要chmod +x 一下这个文件\n\n\n\n\n\n\n\n\n\n\n","cover":"","link":"vultr-server.html","preview":"","title":"Vultr 服务器搭建记录"},{"content":"\nFileStore Go 设计和准备\n\n\n准备自己给自己开个坑，目标是做一个文件服务器，用于小范围内的文件共享和下载，可以只有几个人甚至只有自己用，具有以下特性\n\n1. 多个任意位置的目录，类似于hfs.exe, 即不是简单的那种nginx的列目录服务，也不是直链的\n2. 支持多线程下载和断点续传， 虽然小范围使用的时候不一定用得上，但是，任性\n3. 用户管理\n4. 文件上传和管理\n5. 访问码机制，使用访问码时可以不登录，同时访问码并不是作用于文件也可以作用于目录\n\n不使用网盘的原因是\n\n1. 不轻量\n2. 限速\n3. 不能列出本地已有目录（必须上传），我只是想要个文件还是原始文件的东西，不需要单独文件系统去存储\n\n准备自己写的原因是\n\n1. 练手\n2. 我已经把github能用的关键字都用了，还是找不到合心意的\n\n","cover":"","link":"file-store-go-of-start.html","preview":"\u003cp\u003eFileStore Go 设计和准备\u003c/p\u003e\n","title":"FileStore Go 设计和准备"},{"content":"\nVue开发环境搭建\n\n\n# node.js 环境搭建（Windows）\n\n1. 安装nvm-windows \n  - 为了方便，先卸载已有的nodejs，并删除 `C:\\Program Files\\nodejs` 和 `C:\\User\\\u003cuser\u003e\\AppData\\Roaming\\npm`两个目录，当然如果nvm不安装在C盘这个目录，可以不删。这两个目录如果不删除的话，nvm的安装会不成功（无法添加symlink链接）\n  - `https://github.com/coreybutler/nvm-windows` 下载安装包，并安装\n  - 输入nvm查看是否安装成功\n  \n2. 安装nodejs \n  - `nvm install 10.15.3` 安装nodejs想要的版本\n  - `nvm npm_mirror https://npm.taobao.org/mirrors/npm/` 设置淘宝的镜像\n\n# 安装vue 3\n\n- `npm install -g @vue/cli`\n- `vue --version`\n\n# 创建一个element-ui的app\n\n- `vue ui`创建一个typescript支持的vue\n- `cd filestore-vue`\n- `vue add element`\n- `npm i element-ui -S`\n- `npm install babel-plugin-component -D`\n\n# 来一发Hello Vue\n  \n\n","cover":"","link":"vue-install.html","preview":"\u003cp\u003eVue开发环境搭建\u003c/p\u003e\n","title":"Vue Install"},{"content":"\n自己编译Openwrt(LEDE)固件 WNDR4300\n\n\n# 准备工作\n\n- 下载镜像， 安装Ubuntu 18.04.2 虚拟机\n- 设置好ss代理\n- 更新软件源\n\n  ```bash\n  sudo apt-get update\n  ```\n- 由于是从英文官网下载的镜像，安装中文语言\n- 安装curl（后面编译用）\n- 安装git，并clone代码，使用lean的\n\n  ```bash\n  git clone https://github.com/coolsnowwolf/lede\n  ```\n\n# 配置编译环境\n\n- 安装必须的包\n\n  ```bash\n  sudo apt-get -o Acquire::http::proxy=\"http://127.0.0.1:1080/\" -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx autoconf automake libtool autopoint\n  ```\n\n- 下载一个主题过来 \n\n  ```bash\n  cd lede/package\n  git clone https://github.com/rosywrt/luci-theme-rosy\n  ```  \n\n\n# 开始编译 \n\n\n- 回到上一层执行\n\n  ```\n  cd ..\n  ./scripts/feeds update -a \n  ./scripts/feeds install -a \n  ```\n \n- 配置\n\n  ```\n  make menuconfig\n  ```\n\n  - 选一下CPU，Generic NAND FLASH， 不能选默认的Generic，那样会只能看到WNDR3800而看不到WNDR4300\n  - 选一下机型，WNDR4300\n  - 进入LUCI，选择一些Application，并到Themes把刚才的主题选上\n  - 退出即可\n\n\n- 下载， 其实直接开始编译也是可以的，不过如果下载失败的话，重新执行这个操作会快一点（编译还有其他事情的）\n\n  ```\n  make download V=s\n  ```\n\n  这里有些包是必然失败的，或者即使挂proxy也下的很慢，需要特殊处理\n\n  \u003e - e2fsprogs-1.44.5.tar.xz\n  \u003e - libelf-0.8.13.tar.gz\n  \u003e - linux-4.9.171.tar.xz\n  \u003e - openssl-1.0.2p.tar.gz\n\n  我这里遇到是这么几个， 其中openssl可以到 [http://distfiles.macports.org/openssl/](http://distfiles.macports.org/openssl/) 这里去下载， libelf 由于编译脚本里的域名跳转有问题了， 去这里下载 [https://github.com/coolsnowwolf/lede/issues/1124](https://github.com/coolsnowwolf/lede/issues/1124)\n\n  另外需要注意的是，设置代理的时候如果是用export的形式，注意要和ss的设置对应（shadowsocks-qt5）, 区分HTTP和SOCKS5。主要之前没怎么玩过，所以我是乱设的，又是全局又是export的\n\n  下载下来之后原样放置到 lede/dl 目录即可（下载过程中出现的`.hash`文件不要删掉）。根据情况，在下载卡住了之后再去下载，不挂proxy估计是猴年马月都下不完的，因此尽量选个速度快的\n\n\n\n- 编译\n  \n  ```\n  make -j5 V=s\n  ```\n\n  祈祷吧， 祈祷别中途崩了\n\n  另外由于前面已经把该下载的都下载了，这里开始就可以去吃个饭睡个觉了^_^\n\n# PS\n- `apt-get -o Acquire::http::proxy=\"http://127.0.0.1:1080/\"` 这样可以为apt-get使用代理，设置系统代理好像没啥用，应该是不能用于Console， 而proxychains在对于apt-get的时候经常报错，目前来说这种方式最稳了\n\n- 在使用较新的源码编译时（例如，Lean's LEDE），由于使用的是snapshot的代码，可能会出现官方的仓库里的包版本和编译出的固件版本不匹配。官方那边仓库的ipk内核版本已经到4.14.115，而lean这个仓库里的还在4.14.114。鉴于这种情况，所有需要用到的包建议全部都编译进固件里，不要使用opkg去安装了\n\n","cover":"","link":"compile-custom-openwrt-bin.html","preview":"\u003cp\u003e自己编译Openwrt(LEDE)固件 WNDR4300\u003c/p\u003e\n","title":"自己编译Openwrt(LEDE)固件"},{"content":"\n我的新桌面\n\n终于有了自己的小房间可以随意折腾了，本来房间大概在2*2m，有四平的样子，然而一个角落里有根不能拆的承重柱子，于是导致了桌子只能放170*70cm，也有想过直接80cm宽，不过那样的话就比门都要宽了，突出来不好。\n先感受下，我自个儿画的房间平面图\n\n![无标题.png](https://i.loli.net/2019/05/12/5cd7dbf32171e.png)\n\n哈哈，各种尴尬有没有，桌子打算是放在左边的，就差那么几厘米就能上180cm的桌子了。另外桌子宽度还有一个考虑，就是怕太宽了到时候放张椅子，背后就没空间了。\n\n~~头一回自己安排这种事儿，光这些尺寸我就量了好几遍~~\n\n\n然后又是跑家具市场，又是网上疯狂逛，折腾了两天决定还是在网上定制一张，等物流的日子是真的痛苦。厚度为5cm，准备直接上显示器支架。搞了一个乐歌的支架，带两个USB3.0接口。\n\n终于在今天，该到的都到了，捣鼓了一下午，现在，上图！！！\n\n\n![](https://i.bmp.ovh/imgs/2019/05/767e2131a1ad4563.jpg)\n\n","cover":"","link":"my-new-desktop.html","preview":"\u003cp\u003e我的新桌面\u003c/p\u003e\n","title":"我的新桌面"},{"content":"\n编译安装Windows Terminal\n\n\n## 要求\n\n* Windows 1903 或以上\n* Windows 10 SDK 1903 以上 `https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk`\n* VS2017 或以上\n* Visual Studio 安装以下组件 :\n  - 使用C++的桌面开发\n  - 通用Windows平台开发\n  - VS2019, 需要另外勾选 \"v141 Toolset\" 和 \"Visual C++ ATL for x86 and x64\"，同时VS2019的安装程序可以直接安装 SDK 1903\n* 设置里启用开发人员模式.\n\n## 步骤\n\n1. `git clone https://github.com/microsoft/Terminal` 克隆代码下来\n2. `git submodule update --init --recursive` 下载必备的文件\n3. 打开`OpenConsole.sln`解决方案\n4. `dep\\nuget\\nuget.exe restore OpenConsole.sln` 还原nuget包\n5. 尝试生成解决方案\n6. 切换运行平台， ARM64-\u003e x64\n7. 再次生成\n8. 2220错误，找到对应的工程，右键属性，配置属性-\u003eC/C++-\u003e常规-\u003e将警告视为错误， 改为 否（/WX-）\n    - Conhost/Host.Tests.Unit\n    - Conhost/Interactivity.Win32.Tests.Unit\n    - _Tools/VtPipeTerm\n    - Shared/Virtual Terminal/TerminalParser.UnitTests\n9. 编码问题（提示末尾缺分号什么的）， 我是用VSCode打开，直接复制源字符替换掉 `_Tools/VtPipeTerm/main.cpp`\n10. 重新生成解决方案，全部通过之后，右键解决方案-\u003e部署， 然后在开始菜单就能看到了","cover":"","link":"compile-and-install-windows-terminal.html","preview":"\u003cp\u003e编译安装Windows Terminal\u003c/p\u003e\n","title":"编译安装Windows Terminal"},{"content":"\n\n使用go作为MQTT服务端，angular作为客户端，进行消息交互\n\n\n\nGO服务端这边\n\n- 需要能够监听MQTT Broker的tcp端口(默认:1883)\n- 需要能够监听MQTT Websocket的 ws 端口\n- 提供一个广播或者指定发送到某个客户端的方法\n\n直接上代码\n\n```go\n\npackage utils\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"net\"\n\t\"net/http\"\n\t\"net/url\"\n\n\tlog \"github.com/soesoftcn/process-manage/pkg/soelog\"\n\t\"github.com/surgemq/message\"\n\ts \"github.com/surgemq/surgemq/service\"\n\t\"golang.org/x/net/websocket\"\n)\n\ntype ServerMessage struct {\n\tIsBroadCast bool        `json:\"isBroadCast\"`\n\tClientId    string      `json:\"clientId\"`\n\tMsgType     int         `json:\"msgType\"`\n\tMsg         interface{} `json:\"msg\"`\n}\n\nvar MqttSvr *s.Server\n\nfunc InitMQTTServer() {\n\tMqttSvr = \u0026s.Server{\n\t\tKeepAlive:        300,           // seconds\n\t\tConnectTimeout:   2,             // seconds\n\t\tSessionsProvider: \"mem\",         // keeps sessions in memory\n\t\tAuthenticator:    \"mockSuccess\", // always succeed\n\t\tTopicsProvider:   \"mem\",         // keeps topic subscriptions in memory\n\t}\n\n\tmqttaddr := \"tcp://:1883\"\n\taddr := \"tcp://127.0.0.1:1883\"\n\tAddWebsocketHandler(\"/mqtt\", addr)\n\twsAddr := \":1882\"\n\tgo ListenAndServeWebsocket(wsAddr)\n\n\terr := MqttSvr.ListenAndServe(mqttaddr)\n\tif err != nil {\n\t\tlog.Logger.Sugar().Errorf(\"surgemq/main: %v\", err)\n\t}\n}\n\n/* copy from reader to websocket, this copies the binary frames as is */\nfunc io_ws_copy(src io.Reader, dst *websocket.Conn) (int, error) {\n\tbuffer := make([]byte, 2048)\n\tcount := 0\n\tfor {\n\t\tn, err := src.Read(buffer)\n\t\tif err != nil || n \u003c 1 {\n\t\t\treturn count, err\n\t\t}\n\t\tcount += n\n\t\terr = websocket.Message.Send(dst, buffer[0:n])\n\t\tif err != nil {\n\t\t\treturn count, err\n\t\t}\n\t}\n\treturn count, nil\n}\n\n/* copy from websocket to writer, this copies the binary frames as is */\nfunc io_copy_ws(src *websocket.Conn, dst io.Writer) (int, error) {\n\tvar buffer []byte\n\tcount := 0\n\tfor {\n\t\terr := websocket.Message.Receive(src, \u0026buffer)\n\t\tif err != nil {\n\t\t\treturn count, err\n\t\t}\n\t\tn := len(buffer)\n\t\tcount += n\n\t\ti, err := dst.Write(buffer)\n\t\tif err != nil || i \u003c 1 {\n\t\t\treturn count, err\n\t\t}\n\t}\n\treturn count, nil\n}\n\nfunc WebsocketTcpProxy(ws *websocket.Conn, nettype string, host string) error {\n\tclient, err := net.Dial(nettype, host)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer client.Close()\n\tdefer ws.Close()\n\tchDone := make(chan bool)\n\n\tgo func() {\n\t\tio_ws_copy(client, ws)\n\t\tchDone \u003c- true\n\t}()\n\tgo func() {\n\t\tio_copy_ws(ws, client)\n\t\tchDone \u003c- true\n\t}()\n\t\u003c-chDone\n\treturn nil\n}\n\nfunc AddWebsocketHandler(urlPattern string, uri string) error {\n\tsugar := log.Logger.Sugar()\n\n\tsugar.Infof(\"AddWebsocketHandler urlPattern=%s, uri=%s\", urlPattern, uri)\n\tu, err := url.Parse(uri)\n\tif err != nil {\n\t\tsugar.Errorf(\"surgemq/main: %v\", err)\n\t\treturn err\n\t}\n\n\th := func(ws *websocket.Conn) {\n\t\tWebsocketTcpProxy(ws, u.Scheme, u.Host)\n\t}\n\thttp.Handle(urlPattern, websocket.Handler(h))\n\treturn nil\n}\n\nfunc ListenAndServeWebsocket(addr string) error {\n\treturn http.ListenAndServe(addr, nil)\n}\n\nfunc MessageFromServer(i ServerMessage) {\n\tmsg := message.NewPublishMessage()\n\tpayload, err := json.Marshal(i)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\tmsg.SetTopic([]byte(\"/superserver/notify\"))\n\tmsg.SetPayload(payload)\n\n\tMqttSvr.Publish(msg, nil)\n}\n\n\n```\n\n前\n","cover":"","link":"use-mqtt-with-golang-and-angular6.html","preview":"\u003cp\u003e使用go作为MQTT服务端，angular作为客户端，进行消息交互\u003c/p\u003e\n","title":"Use Mqtt With Golang and Angular6"},{"content":"\n解决git clone时出现`error:unable to write to file...`\n\n\n话说这天一哥们给我发消息问我的BWH有没有被block了, 我就打开博客网址看了一下, 我了个去, 403了. 一想不对啊, 我这个hugo的博客都没有登录功能, 哪来的权限啊.\n但当时人在外面, 没有马上看, 而是打开了google, 竟然正常, 那么推断应该是博客nginx这里的问题了.\n\n回去之后连上服务器一看, 好嘛, www路径下空空如也, 于是想到应该是webhook的脚本有问题了, 手动执行了一下就出现了上面的错误, git clone的时候根本就没有完整的文件.\n\n接下来开始猜, 先从权限猜起, 目录在`/tmp`下, 并且之前都是正常的. 再次看了一遍脚本的输出日志, 最后面提示`no space left on device`, 于是检查了一下硬盘空间, 仍有2G左右空闲,\n总不会是超售引起的吧, 应该没那么凄惨吧. 然后又想到是不是内存问题, clone的操作需要较多内存, 尝试了一下, 每次报错之后, 内存占用就会跑到很高, 特别是虚拟内存, 不过虚拟内存即使满了也没有\n什么关系才对.\n\n最后, 抱着试试的心态, 我执行了 `df -lh`, 好嘛, `/tmp`的大小竟然只有75M, 那就应该是git仓库内容增多导致达到这个挂载位置的上限了. 修改脚本, 把克隆路径放到其他位置, OK\n","cover":"","link":"solve-git-clone-no-space-left.html","preview":"\u003cp\u003e解决git clone时出现\u003ccode\u003eerror:unable to write to file...\u003c/code\u003e\u003c/p\u003e\n","title":"一次解决git clone时提示空间不足的问题"},{"content":"\n\u003c云烟成雨\u003e\n\n\n\u003e 你的晚安 是下意识的恻隐\n\n\u003e 我留至夜深 治疗失眠梦呓\n\n\u003e 那封手写信 留在行李箱底\n\n\u003e 来不及 赋予它旅途的意义\n\n\u003e 若一切 都已云烟成雨\n\n\u003e 我能否 变成淤泥\n\n\u003e 再一次 沾染你\n\n\u003e 若生命 如过场电影\n\n\u003e Oh 让我再一次 甜梦里惊醒\n\n\u003e 我多想再见你\n\n\u003e 哪怕匆匆一眼就别离\n\n\u003e 路灯下昏黄的剪影\n\n\u003e 越走越漫长的林径\n\n\u003e 我多想再见你\n\n\u003e 至少玩笑话还能说起\n\n\u003e 街巷初次落叶的秋分\n\n\u003e 渐行渐远去的我们\n\n\u003e 若一切 都已云烟成雨\n\n\u003e 我能否 变成淤泥\n\n\u003e 再一次 沾染你\n\n\u003e 若生命 如过场电影\n\n\u003e Oh 让我再一次 甜梦里惊醒\n\n\u003e 我多想再见你\n\n\u003e 哪怕匆匆一眼就别离\n\n\u003e 路灯下昏黄的剪影\n\n\u003e 越走越漫长的林径\n\n\u003e 我多想再见你\n\n\u003e 至少玩笑话还能说起\n\n\u003e 街巷初次落叶的秋分\n\n\u003e 渐行渐远去的我们\n\n\u003e 站台 汽笛响起\n\n\u003e 想念是你的声音\n\n\u003e 我们提着过去 走入人群\n\n\u003e 寻找着一个位置 安放自己\n\n\n\u003e 我多想再见你\n\n\u003e 哪怕匆匆一眼就别离\n\n\u003e 路灯下昏黄的剪影\n\n\u003e 越走越漫长的林径\n\n\u003e 我多想再见你\n\n\u003e 至少玩笑话还能说起\n\n\u003e 街巷初次落叶的秋分\n\n\u003e 渐行渐远去的我们\n","cover":"","link":"云烟成雨.html","preview":"\u003cp\u003e\u0026lt;云烟成雨\u0026gt;\u003c/p\u003e\n","title":"云烟成雨"},{"content":"\n重新格式化JSON\n\n\n```pascal\nFormatedJson := JSONReformat(OriginJSON,jsonHumanReadable);\nShowMessage(FormatedJson);\n```\n\n其他选项可以查看 `SynCommon.pas` 下的 `TTextWriterJSONFormat` 集合","cover":"","link":"syncommon-reformat-json.html","preview":"\u003cp\u003e重新格式化JSON\u003c/p\u003e\n","title":"Syncommon Reformat Json"},{"content":"\nUse Delphinus to Make It Easy to Install Packages\n\n\n之前看到 Delphinus 的时候, 因为它需要手动配置一个包的配置文件而望而却步. 直到今天真正使用了一下之后决定, 把自己能改的控件全都加入Delphinus支持\n\n要为一个控件加入Delphinus支持, 需要两个文件 `Delphinus.Info.json` 和 `Delphinus.Install.json` , 一个是包的描述文件, 一个是安装配置文件\n\n `Delphinus.Info.json` 内容如下:\n\n```json\n{\n    \"picture\": \"AsyncPro-1.0.png\",\n    \"id\": \"{5A4907EF-EBB9-452B-8373-D15316D49A71}\",\n    \"name\": \"AsyncPro\",\n    \"license_type\": \"Apache 2.0\",\n    \"license_file\": \"LICENSE\",\n    \"first_version\": \"\",\n    \"package_compiler_max\": \"32\",\n    \"package_compiler_min\": \"23\",\n    \"compiler_min\": \"23\",\n    \"compiler_max\": \"32\",\n    \"platforms\": \"Win32;Win64\",\n    \"report_url\": \"\",\n    \"dependencies\": []\n}\n\n```\n\n从上到下依次为, 包的图片\\唯一GUID\\名称\\授权信息\\版本号\\包最大编译器版本\\包最小编译器版本\\最小编译器版本\\最大编译器版本\\支持平台\\报告URL\\依赖\n\n一般一个独立的包只需要填写 id和name , 其他的信息可以用我这个抄一下, 当然如果一个包里有LICENSE文件, 那么可以用包里自带的. 当然了, 我们自用就随意一点吧\n\n`Delphinus.Install.json` 内容如下:\n\n```json\n{\n    \"search_pathes\": [\n        {\n            \"pathes\": \"source\",\n            \"platforms\": \"Win32;Win64\"\n        }\n    ],\n    \"browsing_pathes\": [\n        {\n            \"pathes\": \"source\",\n            \"platforms\": \"Win32;Win64\"\n        }\n    ],\n    \"source_folders\": [\n        {\n            \"folder\": \"source\"\n        },\n        {\n            \"folder\": \"packages\",\n            \"base\": \"\",\n            \"recursive\": true,\n            \"filter\": \"*;*.*\"\n        }\n    ],\n    \"projects\": [\n        {\n            \"project\": \"Packages\\\\Delphi\\\\Delphi.groupproj\"\n        }\n    ]\n}\n```\n\n`search_pathes` 下定义搜索路径, `browsing_pathes` 下定义浏览路径, 这两个路径都是跟系统平台相关的\n\n`source_folders` 源码路径, 一般如果代码整理一下的话, 最终只会有源码文件夹和包工程文件夹\n\n`\"recursive\": true` 注意这个需要有\n\n`projects` 指定工程组的位置\n\n\n\n\n","cover":"","link":"use-delphinus-to-make-it-easy-to-install-packages.html","preview":"\u003cp\u003eUse Delphinus to Make It Easy to Install Packages\u003c/p\u003e\n","title":"Use Delphinus to Make It Easy to Install Packages"},{"content":"\nPascalscripts Unable to Register Type TDatasetErrorEvent\n\nline about 892, comment the code as follow\n\n```pascal\n//cl.addTypeS('TDataSetErrorEvent', 'procedure (Dataset: TDataSet; E: TObject; var Action: TDataAction)');\n```\n","cover":"","link":"pascalscripts-unable-to-register-type-tdataseterrorevent.html","preview":"\u003cp\u003ePascalscripts Unable to Register Type TDatasetErrorEvent\u003c/p\u003e\n","title":"Pascalscripts Unable to Register Type TDatasetErrorEvent"},{"content":"\nDelphi Rest Header Do Not Encode\n\n\n当使用Delphi 自带的REST控件进行HTTP请求的时候， 如果\n\n```pascal\nhttp.FRESTRequest.AddAuthParameter('Authorization','Bearer ' + token, pkHTTPHEADER);\n```\n\n默认会把其中的空格编码成`%20`\n\n增加下面的一个参数即可不编码\n\n```pascal\nhttp.FRESTRequest.AddAuthParameter('Authorization','Bearer ' + FUserLoginInfo.data.token, pkHTTPHEADER,[TRESTRequestParameterOption.poDoNotEncode]);\n```","cover":"","link":"delphi-rest-header-do-not-encode.html","preview":"\u003cp\u003eDelphi Rest Header Do Not Encode\u003c/p\u003e\n","title":"Delphi Rest请求控件增加请求头时不编码"},{"content":"\nIDE Fix Pack 6.3 更新日志\n\n\nFrom [Here](https://andy.jgknet.de/blog/2018/06/ide-fix-pack-6-3-released/)\n\nThe new IDE Fix Pack 6.3 adds some IDE fixes and makes DFM reading a little bit faster due to the usage of buffers on the stack instead of the TBytes heap allocations with unnecessary FillChar calls that were introduced with XE3.\n\n新的 `IDE Fix Pack 6.3` 增加了一些IDE问题修复, 让DFM文件的读取变快了一点点, 使用 **栈** 上的缓存替代了**TBytes堆**上的多余的FillChar调用(XE3)\n\nThe compiler option extension `-x-fpr` also got a new feature. If a function has stack variables that exceed 4096 bytes, the function prolog that is generated will be up to 3 times faster than the original compiler generated code (RSP-19826).\n\n编译器选项 `-x-fpr` 也增加了新的特性. 如果一个`function` 声明了栈上的超过4096字节的变量, 该`function`生成的代码将比原编译器快3倍(RSP-19826)\n\nFurthermore the compiler option extensions are now combined into -x-On options what makes it easier to specify the options because you don’t need to remember all the option names anymore.\n\n另外编译器扩展选项合并到了一个 `-x-On` 选项中, 这样就不需要去记了.\n\n\u003e - -x-O1     启用选项 `-x-fvs`   `-x-fpr`\n\u003e - -x-O2     启用选项 `-x-fvs`   `-x-fpr` `-x-orc`\n\u003e - -x-O3     启用选项 `-x-fvs=2` `-x-fpr` `-x-orc`\n\u003e - -x-Ox     启用ABI更改优化: `-x-fvs=2` `-x-fpr` `-x-orc=2` `-x-ff`\n\nAll options are listed in the Readme.txt and can be specified under `Project Options`/`Delphi Compiler`/`Compiling`/`Other options`/`Additional options` to pass to the compiler.\n\n所有选项都在`Readme.txt`中可以看到.\n\nChangelog\n\n- Added: Patch to remove IDE flickering when WM_SETTINGCHANGE is broadcasted\n- Added: Fix for RSP-20700: Tooltip Help Insight is blinking if Structure View is scrolled\n- Added: Undo XE3+ TFiler/TReader/TParser/TStream TBytes usage, replace SetLength with SetLengthUninit for special cases\n- Added: -x-fpr generates 3 times faster stack memory page probing code (RSP-19826)\n- Added: Options -x-O1, -x-O2, -x-O3, -x-Ox that enable other optimization options\n\n更新日志\n\n- Added: 移除了当消息 `WM_SETTINGCHANGE` 被广播时的IDE闪烁\n- Added: 修复 RSP-20700: 修复当 `Structure View` 滚动时的帮助信息气泡闪烁\n- Added: 撤消XE3 + `TFiler` / `TReader` / `TParser` / `TStream TBytes`用法, 将`SetLength`替换为`SetLengthUninit`用于特殊情况\n- Added: -x-fpr 生成3倍快的堆栈内存页探测代码 (RSP-19826)\n- Added: 选项 `-x-O1`, `-x-O2`, `-x-O3`, `-x-Ox` 用于启用一些特性","cover":"","link":"idefixpack6.3.html","preview":"\u003cp\u003eIDE Fix Pack 6.3 更新日志\u003c/p\u003e\n","title":"IDEFixPack6.3"},{"content":"\n\n默认状态下, mORMot的SynCommon.pas单元的JSON反序列化会需要保证JSON中的字段和声明的结构体是一致的\n例如,\n\n```json\n{\"a\":1,\"b\":2}\n```\n\n是不能被反序列化到下面这个结构体的\n\n```pascal\nTTest = record\n  a:Integer;\nend;\n```\n\n在官方博客有篇帖子提到这样的需求 [链接](http://blog.synopse.info/post/2013/12/10/JSON-record-serialization)\n\n使用 `soReadIgnoreUnknownFields` 选项即可让反序列化忽略不存在的字段 \n\n```pascal\nTTextWriter.RegisterCustomJSONSerializerFromText(TypeInfo(TTestCustomJSONGitHub),\n    __TTestCustomJSONGitHub).Options := [soReadIgnoreUnknownFields,soWriteHumanReadable]\n```\n\n\u003e - soReadIgnoreUnknownFields to ignore any non defined field in the incoming JSON;\n\u003e - soWriteHumanReadable to let the output JSON be more readable.\n\n不过一般使用的时候, 对于这种的需求还是很大的, 如果有个JSON, 里面有几十个字段, 而且还疯狂嵌套, 那简直是要疯了\n\n于是, 直接在源码上进行修改, 以永久实现这个功能\n\n在`SynCommon.pas` 文件搜索 `TJSONRecordAbstract.Create`, 并增加一行\n\n```pascal\n  fItems := TObjectList.Create;\n  Options := [soReadIgnoreUnknownFields, soWriteHumanReadable];\n```\n\n这样就可以实现, 默认忽略字段, 并且输出JSON时是可读性更好的已展开的JSON\n\n最后, 为保证这个修改可以一直生效, 可以使用自己的GIT仓库, 把这个修改提交到自己的仓库中. 就像这样\n\norigin/master 对应官方的仓库\norigin2/master 对应自己本地的仓库 \n\norigin2中包含这个自定义的修改, 以后官方有修改了, 就先拉取一下origin, 然后推送到origin2, 那么以后要用代码了就从origin2克隆一份就行了\n","cover":"","link":"mormot-json忽略未定义的字段.html","preview":"","title":"mORMot Json忽略未定义的字段"},{"content":"\n\n# cxGrid支持使用like过滤时自动添加百分号\n\n默认状态下， 不会添加 `%%` 到过滤串中， 修改源码如下\n\n`cxFilter.pas` 在 `\\Library\\Sources\\cxFilter.pas` 和 `\\ExpressDataController\\Sources\\cxFilter.pas` 两个地方都有一个，一起修改掉\n\n`cxFilter.pas` 的 `TcxFilterCriteria.AddItem` 改成这样\n\n```pascal\n  //if AParent = nil then\n  //  AParent := Root;\n  //Result := AParent.AddItem(AItemLink, AOperatorKind, AValue, ADisplayValue);\n    if AParent = nil then\n    AParent := Root;\n  if AOperatorKind in [foLike, foNotLike] then\n    Result := AParent.AddItem(AItemLink, AOperatorKind, '%' + AValue + '%', ADisplayValue)\n  else\n    Result := AParent.AddItem(AItemLink, AOperatorKind, AValue, ADisplayValue);\n```\n\n`cxFilterDialog.pas` 在 `Library\\Sources\\cxFilterDialog.pas`和`ExpressQuantumGrid\\Sources\\cxFilterDialog.pas` \n\n```pascal\n// TcxFilterDialog.AddFilterItem\n\nprocedure TcxFilterDialog.AddFilterItem(AParent: TcxFilterCriteriaItemList;\n  AComboBox: TcxComboBox; AValue: Variant; ADisplayValue: string);\nvar\n  AOperator: TcxFilterControlOperator;\nbegin\n  AOperator := GetOperator(AComboBox);\n  if AOperator = fcoNone then Exit;\n  \n  //edited by lero 09-11-18  如果是like,而且没有输入%时,自动在前后加入%\n  if AOperator in [fcoLike, fcoNotLike] then\n  begin\n    if VarIsStr(AValue) and (AValue \u003c\u003e '') and (Pos('%', AValue) = 0) then\n      AValue := '%' + AValue + '%';\n  end;\n\n  if AOperator in [fcoBlanks, fcoNonBlanks] then\n    AValue := Null;\n  if VarIsNull(AValue) or (VarIsStr(AValue) and (AValue = '')) then\n    ADisplayValue := cxGetResourceString(@cxSFilterBlankCaption);\n\n  Criteria.AddItem(AParent, ItemLink, GetFilterOperatorKind(AOperator), AValue, ADisplayValue);\nend;\n```\n\n\n\n# DevExpress控件滚动条默认使用旧的经典滚动条样式\n\n新版本， 应该是17还是多少版本开始，默认使用触摸的滚动条样式， 查询了官方的论坛之后， 可以修改如下\n\n搜索`cxVer.inc` 在 `\\Library\\Sources\\cxVer.inc` 和 `\\ExpressCore Library\\Sources\\cxVer.inc` 两个地方各有一个\n\n打开后， 搜索 `USETOUCHSCROLLUIMODEASDEFAULT` 在 `$DEFINE` 前面加个点即可\n\n```pascal\n{.$DEFINE USETOUCHSCROLLUIMODEASDEFAULT}\n```\n\n# DevExpress下拉lookup控件加入输入时自动定位\n\n- 单元 `cxCustomData.pas` `Library\\Sources\\cxCustomData.pas` `ExpressDataController\\Sources\\cxCustomData.pas` 修改如下\n\n```pascal\nfunction TcxCustomDataController.DoIncrementalFilterRecord(ARecordIndex: Integer): Boolean;\nvar\n  S: string;\n  I: Integer;\nbegin\n  //edited by lero---\n  Result := False;\n  for I := 0 to Fields.ItemCount - 1 do\n  begin\n    S := GetInternalDisplayText(ARecordIndex, Fields[i]);\n    Result := DataCompareText(S, FIncrementalFilterText, True);\n    if Result then\n    begin\n      FDisplayIndex := i;\n      Exit;\n    end;\n  end;\n  //S := GetInternalDisplayText(ARecordIndex, FIncrementalFilterField);\n  //Result := DataCompareText(S, FIncrementalFilterText, True, FIncrementalFilteringFromAnyPos);\nend;\n```\n\n在`SortingBySummaryDataItemIndex`属性下方添加, 不要忘了在private节下加入 `FDisplayIndex:Integer;`\n\n```pascal\nproperty DisplayIndex: Integer  read FDisplayIndex write FDisplayIndex;   //add by lero\n```\n\n- 单元 `cxLookupEdit.pas` 分别在 `Library\\Sources\\cxLookupEdit.pas` 和 `ExpressEditors Library\\Sources\\cxLookupEdit.pas`\n\n```pascal\n// TcxCustomLookupEditLookupData.Locate\n\n\n    if ARecordIndex \u003c\u003e -1 then\n      begin\n        DataController.ChangeFocusedRecordIndex(ARecordIndex);\n        DoSetCurrentKey(ARecordIndex);\n        Result := True;\n        //此处为添加代码   add by lero---\n        if DataController.DisplayIndex \u003e -1 then\n        begin\n          S := DataController.DisplayTexts[ARecordIndex, DataController.DisplayIndex];\n          DataController.DisplayIndex := -1;\n        end\n        else\n        begin\n          S := DataController.DisplayTexts[ARecordIndex, AItemIndex];\n        end;\n      //结束\n        //S := DataController.DisplayTexts[ARecordIndex, AItemIndex];\n        if IsLikeTypeFiltering then\n          ATail := ''\n        else\n        begin\n          AText := Copy(S, 1, Length(AText));\n          ATail := Copy(S, Length(AText) + 1, Length(S));\n        end;\n        DoSetKeySelection(True);\n      end\n      else\n        DoSetKeySelection(False);\n```\n\n最后的最后，使用编译工具重新编译安装即可\n","cover":"","link":"cxgrid筛选自动添加百分号和默认旧的滚动条样式.html","preview":"","title":"CxGrid筛选自动添加百分号和默认旧的滚动条样式"},{"content":"\n\n找到 `DataSnap.DBClient.pas`文件， 拷贝到一个目录中， 例如 `D:\\DataSnap.DBClient.pas` ，修改其中的 `TCustomClientDataSet.AddFieldDesc` 方法，\n\n```pascal\n  //fix cds 字段长度限制问题\n  LName := TMarshal.ReadStringAsAnsi(CP_UTF8, TPtrWrapper.Create(@FieldDesc.szName[0]));\n  //if LName.Length = SizeOf(MIDASNAME) - 1 then\n  //begin\n    V := InternalGetOptionalParam(szFIELDNAME, FieldID);\n    if not VarIsNull(V) and not VarIsClear(V) then\n      LName := VarToStr(V);\n  //end;\n```\n\n然后打开命令行\n\n```bat\ncd \"C:\\Program Files (x86)\\Embarcadero\\Studio\\19.0\\bin\"\ndcc32.exe D:\\DataSnap.DBClient.pas\n```\n\n这样就可以生成 `DataSnap.DBClient.dcu` 文件\n\npas文件覆盖到 `C:\\Program Files (x86)\\Embarcadero\\Studio\\19.0\\source\\data\\dsnap`\ndcu文件覆盖到\n`C:\\Program Files (x86)\\Embarcadero\\Studio\\19.0\\lib\\win32\\debug`和 `C:\\Program Files (x86)\\Embarcadero\\Studio\\19.0\\lib\\win32\\release`\n\n如果需要x64程序也支持， 那么命令行使用 `dcc64.exe` 进行编译, 覆盖到对应位置即可\n\n\n\n\n","cover":"","link":"tclientdataset支持超长字段名.html","preview":"","title":"TClientDataSet支持超长字段名"},{"content":"\n\n\u003e 问: A和B轮流抛硬币决定谁穿女装, 抛中正面的人穿女装, 先抛的人穿女装的概率多大?\n\n解:\n\n不妨设A先抛, 并且A穿女装的概率为`x`, 那么B穿女装的概率为`1-x`,\n而B穿女装的概率为, A第一次没有抛中正面, 到了第二次抛, 就变成了 B\"先抛\", 那么也是`x` (先抛的人穿女装的概率为x)\n于是 `1-x = 1/2 * x`, 得`x=2/3`","cover":"","link":"先后抛硬币问题.html","preview":"","title":"先后抛硬币问题"},{"content":"\n\nFirst use these units as follows. Of course, also need some other units\n\n```pascal\nuses\n  SysUtils, Classes,\n  DB,Variants, Windows, Math,\n  System.IniFiles,\n  SynCommons,\n  IPPeerClient,\n  FireDAC.Comp.Client,\n  FireDAC.Phys.DS,\n  FireDAC.Comp.UI,\n  FireDAC.Phys.Intf,\n  FireDAC.Stan.Util,\n  FireDAC.Stan.Def,\n  FireDAC.Stan.Pool ,\n  FireDAC.Stan.Error,\n  FireDAC.Stan.Intf,\n  Datasnap.DSHTTPLayer;\n```\n\nthen we need a record to read configs, you can implement it as you like\n\n```pascal\n  TDSPoolConfig = record\n    CleanupTimeout: string;\n    ExpireTimeout: string;\n    MaximumItems: string;\n    Server: string;\n    Port: string;\n    DSUserName, DSPassword: string;\n    IsHttpClient:Boolean;\n    procedure ReadConfig;\n  end;\n```  \n\nok, now come the pool\n\n```pascal\nTDSConnectionPool = class(TComponent)\n  const\n    POOL_DEFNAME = 'POOL';\n  private\n    DSLink: TFDPhysDSDriverLink;\n    WaitCursor:TFDGUIxWaitCursor;\n    fIsReConn: Boolean;\n    Config:TDSPoolConfig;\n    function GetCount: Integer;\n    procedure LiftUp;\n    procedure ShutDown;\n    procedure OnError(ASender, AInitiator: TObject; var AException: Exception);\n    procedure OnRecover(ASender, AInitiator: TObject;AException: Exception; var AAction: TFDPhysConnectionRecoverAction);\n    procedure OnRestored(ASender:TObject);\n    procedure OnLost(ASender:TObject);\n  public\n    constructor Create; overload;\n    destructor Destroy; override;\n    function Lock: TFDConnection;\n    procedure WriteParams;\n    property Count:Integer read GetCount;\n    // if true the connection is not active\n    property IsReConn:Boolean read fIsReConn write fIsReConn;\n  end;\n```\n\nmy implementation\n\n```pascal\nconstructor TDSConnectionPool.Create;\nbegin\n  DSLink := TFDPhysDSDriverLink.Create(self);\n  WaitCursor := TFDGUIxWaitCursor.Create(self);\n  Config.ReadConfig;\n  LiftUp;\nend;\n\ndestructor TDSConnectionPool.Destroy;\nbegin\n  ShutDown;\n  FDFreeAndNil(DSLink);\n  FDFreeAndNil(WaitCursor);\n  inherited;\nend;\n\nfunction TDSConnectionPool.Lock: TFDConnection;\nbegin\n  Result := TFDConnection.Create(nil);\n  Result.ConnectionDefName := POOL_DEFNAME;\n  // make some different actions for main thread and other thread\n  if GetCurrentThreadID = MainThreadID then\n  begin\n    Result.OnRecover := OnRecover;\n    Result.OnRestored := OnRestored;\n  end\n  else\n  begin\n    Result.OnRecover := OnRecoverIgnore;\n    Result.OnRestored := OnRestored;\n  end;\nend;\n\nfunction TDSConnectionPool.GetCount: Integer;\nbegin\n  Result := FDManager.ConnectionCount;\nend;\n\nprocedure TDSConnectionPool.LiftUp;\nvar\n  oParams: TStrings;\nbegin\n  oParams := TStringList.Create;\n  oParams.Add('DriverID=DS');\n  oParams.Add('Server='+ Config.Server);\n  oParams.Add('Port='+  Config.Port);\n  oParams.Add('Pooled='+  'True');\n  oParams.Add('POOL_CleanupTimeout='+  Config.CleanupTimeout);\n  oParams.Add('POOL_ExpireTimeout='+  Config.ExpireTimeout);\n  oParams.Add('POOL_MaximumItems='+  Config.MaximumItems);\n  // also can support http protocol\n  if Config.IsHttpClient then\n    oParams.Add('Protocol='+  'http')\n  else\n    oParams.Add('Protocol='+  'tcp/ip');\n\n  //oParams.Add('LoginTimeout='+'2000');\n  //oParams.Add('CommunicationTimeout='+'2000');\n  oParams.Add('User_Name='+  Config.DSUserName);\n  oParams.Add('Password='+  Config.DSPassword);\n\n//  FDManager.ResourceOptions.AutoReconnect := True;\n  FDManager.AddConnectionDef(POOL_DEFNAME, 'DS', oParams);\n  FreeAndNil(oParams);\n\n  FDManager.Active := True;\nend;\n\n// may be used to write out params to file for debug\nprocedure TDSConnectionPool.WriteParams;\nbegin\n FileFromString(RecordSaveJSON(Config,TypeInfo(TDSPoolConfig)),\n   ExtractFilePath(ParamStr(0))+'ConnParam.connection',True);\nend;\n\nprocedure TDSConnectionPool.ShutDown;\nbegin\n  FDManager.CloseConnectionDef(POOL_DEFNAME);\n  FDManager.Close;\nend;\n\nprocedure TDSConnectionPool.OnError(ASender, AInitiator: TObject;\n  var AException: Exception);\nbegin\n  // log error\nend;\n\nprocedure TDSConnectionPool.OnRecover(ASender, AInitiator: TObject;\n  AException: Exception; var AAction: TFDPhysConnectionRecoverAction);\nbegin\n  IsReConn := True;\n\n  // set global flag\n  if ReConnectionCount = 0 then\n  begin\n    ReConnectionCount := ReConnectionCount + 1;\n  end\n  else\n  begin\n    ReConnectionCount := ReConnectionCount + 1;\n  end;\n  AAction := faFail; // if set to faRetry, this event will be triggered many times\nend;\n\nprocedure TDSConnectionPool.OnRestored(ASender: TObject);\nbegin\n  IsReConn := False;\n  // set global flag\n  if ReConnectionCount \u003e 0 then\n  begin\n    ReConnectionCount := 0;\n  end\n  else\n  begin\n    ReConnectionCount := 0;\n  end;\nend;\n\nprocedure TDSConnectionPool.OnLost(ASender: TObject);\nbegin\n  // notify to handle connection lost. only when faRetry\nend;\n\nprocedure TDSConnectionPool.OnRecoverIgnore(ASender, AInitiator: TObject;\n  AException: Exception; var AAction: TFDPhysConnectionRecoverAction);\nbegin\n  // can do something different here when get connection in a thread\n\n  IsReConn := True;\n  // set global flag\n  if ReConnectionCount = 0 then\n  begin\n    ReConnectionCount := ReConnectionCount + 1;\n  end\n  else\n  begin\n    ReConnectionCount := ReConnectionCount + 1;\n  end;\n  AAction := faFail;\nend;\n\n```\n\n\n\n\n\n\n","cover":"","link":"firedac-ds-connection-pool.html","preview":"","title":"FireDAC DataSnap Connection Pool"},{"content":"\n\n# 如何使用mORMot构建Rest服务并使用\n\n## 服务端\n\n```pascal\nvar\n  FModel: TSQLModel;\n  FDB: TSQLRestServer;\n  FServer: TSQLHttpServer;\n\n    //Create Server\n    FModel := TSQLModel.Create([], 'api');\n    FDB := TSQLRestServerFullMemory.Create(FModel, 'test.json', false, false);\n    //reg services\n    FDB.ServiceRegister(TTestService, [TypeInfo(ITestService)], sicShared);\n\n    //setting and start it\n    FServer := TSQLHttpServer.Create(httpPort, [FDB], '+',\n    useHttpApiRegisteringURI);\n    FServer.AccessControlAllowOrigin := '*'; // allow cross-site AJAX queries\n\n```\n\n### 接口和DTO单元\n\n```pascal\ntype\n  TTest = record\n    A, B: string;\n  end;\n\n  TTest1 = class(TPersistent)\n  private\n    fB: string;\n    fA: string;\n  published\n    property A: string read fA write fA;\n    property B: string read fB write fB;\n  end;\n\n  ITestService = interface(IInvokable)\n    ['{85B34854-522A-4218-A66C-4E2C274BD318}']\n    function TestMethod(const D: TTest): TServiceCustomAnswer;\n    procedure Fuck(const D: TTest; out r: TTest1);\n  end;\n\n//初始化的时候注册一下\ninitialization\n  TInterfaceFactory.RegisterInterfaces([TypeInfo(IClockService)]);\n```\n\n### 服务类\n\n```pascal\n  TTestService = class(TInterfacedObject, ITestService)\n  public\n  published\n    function TestMethod(const D: TTest): TServiceCustomAnswer;\n    procedure Fuck(const D: TTest; out r: TTest1);\n  end;\n\nimplementation\n\nfunction TTestService.TestMethod(const D: TTest): TServiceCustomAnswer;\nbegin\n  Result.Status := 200;\n\n  Result.Content := '{\"A\":\"sdsdsd\",\"B\":\"sdsfdgfsweeed\"}';\nend;\n\nprocedure TTestService.Fuck(const D: TTest; out r: TTest1);\nbegin\n\n  r.A := 'Hellsinsidn';\n  r.B := 'sdwfgfgf';\nend;\n\n{ TTest1 }\n\nend.\n\n```\n\n正常实现接口方法并编写逻辑处理代码即可, 返回值为 `TServiceCustomAnswer` 的话就可以返回自定义的JSON内容给客户端\n\n## 客户端\n\n```pascal\n//定义几个常量\nconst\n  ROOM_NAME = 'api';\n  SERVICE_503 = 'HTTP服务不可用';\ntype\n  // 配置一下服务器\n  TServiceConfig = record\n    Host:string;\n    Port:string;\n    /// \u003csummary\u003e\n    ///   载入配置\n    /// \u003c/summary\u003e\n    procedure LoadConf;\n  end;  \n//小小地封装一下, 方便调用\nTSOAClient = class(TPersistentWithCustomCreate)\n  private\n    Client: TSQLHttpClient;\n    Model: TSQLModel;\n    Config: TServiceConfig;\n    /// \u003csummary\u003e\n    ///   注册服务接口\n    /// \u003c/summary\u003e\n    procedure RegServices;\n  public\n    /// \u003csummary\u003e\n    ///   创建SOA客户端实例\n    /// \u003c/summary\u003e\n    /// \u003cparam name=\"pvConfig\"\u003e\n    ///   配置\n    /// \u003c/param\u003e\n    constructor Create(pvConfig: TServiceConfig);\n    destructor Destory; overload;\n\n    /// \u003csummary\u003e\n    ///   取得接口实例\n    /// \u003c/summary\u003e\n    /// \u003cparam name=\"I\"\u003e\n    ///   接口\n    /// \u003c/param\u003e\n    /// \u003cparam name=\"obj\"\u003e\n    ///   返回接口实例\n    /// \u003c/param\u003e\n    /// \u003creturns\u003e\n    ///   是否成功\n    /// \u003c/returns\u003e\n    function Get(I: TGUID; out obj): Boolean;\n  end;\n\nimplementation\n\nfunction TSOAClient.Get(I: TGUID; out obj): Boolean;\nbegin\n  Result := Client.Services.Resolve(I, obj);\nend;\n\ndestructor TSOAClient.Destory;\nbegin\n  FreeAndNil(Client);\n  FreeAndNil(Model);\nend;\n\nprocedure TSOAClient.RegServices;\nbegin\n  //  Client.ServiceRegister([TypeInfo(ITestService)],sicShared);\n  Client.ServiceDefine([ITestService\n  //新接口注册在这里\n\n\n  ], sicShared);\nend;\n\nconstructor TSOAClient.Create(pvConfig: TServiceConfig);\nbegin\n  Config := pvConfig;\n  Model := TSQLModel.Create([], ROOM_NAME);\n  Client := TSQLHttpClient.Create(Config.Host, Config.Port, Model);\n  RegServices;\nend;  \n\n\n```\n\n### 调用\n\n```pascal\nvar\n  c:TSOAClient;\n  conf:TServiceConfig;\n  I:ITestService;\nbegin\n  Result := False;\n  conf.LoadConf;\n\n  try\n    c := TSOAClient.Create(conf); //创建连接客户端 连接到HTTP服务\n  except\n    on E: Exception do\n    begin\n      // SERVICE_503\n      Exit;\n    end;\n  end;\n  try\n    if c.Get(ITestService,I) then\n    begin\n      //这里进行随意的调用即可\n      //I.Fuck\n    end;\n\n  finally\n    FreeAndNil(c);\n  end;\nend;\n```\n\n如果返回 TServiceCustomAnswer, 那就用正常的HTTP组件去调用, 然后自行处理返回的body即可\n\n小结: 这种模式我觉得很适合把Delphi的DataSnap改造成这种形式,\n一方面可以享受到http.sys的高效, 另一方面这种基于接口的编程方式, 可以完全脱离代理类的那套流程\n","cover":"","link":"how-to-use-mormot-to-build-rest-services-and-consume-them.html","preview":"","title":"How to Use mORMot to Build Rest Services and Consume Them"},{"content":"\n\nFirst, make sure your hugo blog files are hosted on Github or any other git hosting server where you can access to through network.\nGithub is suggested.\n\nin your server\n\n```bash\napt-get install hugo\nwget https://github.com/adnanh/webhook/releases/download/2.6.8/webhook-linux-amd64.tar.gz\ntar -zxvf webhook-linux-amd64.tar.gz\nmv webhook-linux-amd64 webhook \u0026\u0026 cd webhook\nchmod +x webhook\nvim hooks.json\n```\n\n```json\n[\n  {\n    \"id\": \"redeploy-webhook\",\n    \"execute-command\": \"/pathto/hookscripts.sh\",\n    \"command-working-directory\": \"/directory/to/webhook\"\n  }\n]\n```\n\n```bash\ncd ~/webhook\n./webhook -hooks hooks.json -verbose -port 1234 -hotreload \u0026\n```\n\nor add\n\n```bash\n/pathto/webhook -hooks /pathto/hooks.json -verbose -port 1234 -hotreload \u0026\n```\n\nto `/etc/rc.local`\n\nwhen started, you can test it use\n\n```bash\ncurl -X POST http://example.com:1234/hooks/redeploy-webhook\n```\n\nhere is my `hugo.sh`\n\n```bash\n#!/bin/sh\nGIT_REPO=https://github.com/kirileec/llinx.me\nTMP_GIT_CLONE=/tmp/blog\nNGINX_HTML=/var/www\nrm -rf ${TMP_GIT_CLONE}\ngit clone $GIT_REPO $TMP_GIT_CLONE\ncd $TMP_GIT_CLONE/llinx.me\nhugo\nrm -rf ${NGINX_HTML}/*\ncp -rf ${TMP_GIT_CLONE}/llinx.me/public/* ${NGINX_HTML}\n```","cover":"","link":"use-webhook-to-deploy-hugo.html","preview":"","title":"Use webhook to deploy Hugo"},{"content":"\n\n1. 首先安装govendor\n\n```go\ngo get -u github.com/kardianos/govendor\n```\n并添加 $GOPATH/bin/ 到环境变量中\n这样可以执行 `govendor` 命令来确认已经完成安装\n\n2. 新建目录 例如 `$GOPATH/src/gin-mgo-api` 并创建一个 `main.go`, 然后 `govendor init` 初始化之\n3. 使用 `govendor` 来管理依赖\n\n```bash\ngovendor fetch github.com/gin-gonic/gin\ngovendor fetch gopkg.in/mgo.v2\n``` \n\n4. 创建MongoDB数据连接\n\ndb/connect.go\n\n```go\npackage db\n\nimport (\n\t\"fmt\"\n\t\"gopkg.in/mgo.v2\"\n)\n\nvar (\n\tSession *mgo.Session\n\tMongo *mgo.DialInfo\n)\n\nconst (\n\tMongoDBUrl = \"mongodb://localhost:27017/super\"\n)\n\nfunc Connect() {\n\turi := MongoDBUrl\n\tmongo, err := mgo.ParseURL(uri)\n\ts, err := mgo.Dial(uri)\n\tif err != nil {\n\t\tfmt.Printf(\"Can't connect to mongo, go error %v\\n\", err)\n\t\tpanic(err.Error())\n\t}\n\ts.SetSafe(\u0026mgo.Safe{})\n\tfmt.Println(\"Connected to\", uri)\n\tSession = s\n\tMongo = mongo\n}\n\n```\n\n5. 创建数据库连接的中间件\n\nmiddlewares/middlewares.go\n\n```go\npackage middlewares\n\nimport (\n\t\"fmt\"\n\t\"gin-mgo-api/db\"\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc Connect(c *gin.Context) {\n\tfmt.Println(\"Connect Middleware\")\n\tif db.Session == nil {\n\t\tfmt.Println(\"Error DB Session\")\n\t}\n\ts := db.Session.Clone()\n\n\tdefer s.Close()\n\n\tc.Set(\"db\", s.DB(db.Mongo.Database))\n\tc.Next()  //这一句是必须的, 否则数据连接在跑完这个方法之后就被关闭了\n}\n\nfunc Middleware(c *gin.Context) {\n\tfmt.Println(\"this is a middleware!\")\n}\n```\n\n6. 建立一个Model\n\nmodels/super.go\n\n```go\npackage models\n\nimport (\n\t\"gopkg.in/mgo.v2/bson\"\n)\n\n\ntype Super struct {\n\tId    bson.ObjectId `json:\"_id,omitempty\" bson:\"_id,omitempty\"`\n\tName  string\n\tValue string\n}\n```\n\n7. 好了可以开始写点路由啥的了\n \nmain.go\n\n```go\npackage main\n\nimport (\n\t\"gin-mgo-api/db\"\n\t\"gin-mgo-api/middlewares\"\n\t\"gin-mgo-api/models\"\n\t\"net/http\"\n\n\t\"github.com/gin-gonic/gin\"\n\tmgo \"gopkg.in/mgo.v2\"\n)\n\n//在启动时先建立数据库连接\nfunc init() {\n\tdb.Connect()\n}\n\nfunc main() {\n\trouter := gin.Default()\n\tgin.SetMode(gin.DebugMode)\n\n\trouter.Use(middlewares.Connect)\n\trouter.GET(\"/someGet\", func(c *gin.Context) {\n        //每个接口都可以用这样的方式获得数据库操作对象\n\t\tdb := c.MustGet(\"db\").(*mgo.Database)\n\t\tsupers := []models.Super{}\n        //没数据可以先插进去几条, 或者用MongoDB Compass操作\n\t\t// super := models.Super{Name: \"hhhh\", Value: \"iiii\"}\n\t\t// err := db.C(\"super\").Insert(\u0026super)\n\t\terr := db.C(\"super\").Find(nil).All(\u0026supers)\n\t\tif err != nil {\n\t\t\tc.Error(err)\n\n\t\t}\n\t\tc.JSON(http.StatusOK, supers)\n\n\t})\n\n    //这里也可以这样 router.Run(\":9090\") 暂时还不知道有什么区别\n    \n\thttp.ListenAndServe(\":9090\", router)\n}\n\n```","cover":"","link":"build-restapi-with-gin-and-mgo.html","preview":"","title":"Build Restapi With Gin and Mgo"},{"content":"\n\nNexus 6P跟了我有快两年的时间了, 最近开始变得越来越不给力了, 经常20%左右就直接关机, 一个早上还没过完就只剩下60%的电了, 于是基本上最近一段时间都是随时带着充电头. \n\n终于, 最近还是决定给这台机子换块电池. 于是果断淘宝, 找了一块华为的电池(其实无所谓了, 能比原来的电池好就行)\n\n1. 拿起吹风机就是一顿乱吹, 然后用美工刀(没去搞什么手术刀), 找个缝, 插进去, 虽然最终还是把外壳给搞的坑坑洼洼, 幸好还是正常拆下了下面的这块塑料. 刀片插进去之后稍微动一动, 尽量先撬起一点, 再找张硬一点的纸继续下面的工作, 我就直接用送的抽奖卡了 O(∩_∩)O哈哈~\n\n[![微信图片_20180321215011.jpg](https://i.loli.net/2018/03/21/5ab2642273b81.jpg)](https://i.loli.net/2018/03/21/5ab2642273b81.jpg)\n\n[![微信图片_20180321215016.jpg](https://i.loli.net/2018/03/21/5ab264225507e.jpg)](https://i.loli.net/2018/03/21/5ab264225507e.jpg)\n\n[![微信图片_20180321214953.jpg](https://i.loli.net/2018/03/21/5ab264222a41f.jpg)](https://i.loli.net/2018/03/21/5ab264222a41f.jpg)\n\n[![微信图片_20180321214944.jpg](https://i.loli.net/2018/03/21/5ab26421f21e7.jpg)](https://i.loli.net/2018/03/21/5ab26421f21e7.jpg)\n\n[![微信图片_20180321214957.jpg](https://i.loli.net/2018/03/21/5ab264227dc2d.jpg)](https://i.loli.net/2018/03/21/5ab264227dc2d.jpg)\n\n[![微信图片_20180321214949.jpg](https://i.loli.net/2018/03/21/5ab26421f2506.jpg)](https://i.loli.net/2018/03/21/5ab26421f2506.jpg)\n\n2. 开盖这里绕了个弯子, 看着视频居然找错了位置, 只怪Nexus6p的上下两个部分长得太像, 上部分和边框贴得很紧, 而下部分则有空隙\n\n[![微信图片_20180321214935.jpg](https://i.loli.net/2018/03/21/5ab264224a3f3.jpg)](https://i.loli.net/2018/03/21/5ab264224a3f3.jpg)\n\n[![微信图片_20180321214939.jpg](https://i.loli.net/2018/03/21/5ab2642269ae0.jpg)](https://i.loli.net/2018/03/21/5ab2642269ae0.jpg)\n\n3. 然后是电池了, 真的是实在的胶水机, 电池都粘的真的是牢, 我直接把电池撕了一块皮下来\n\n[![微信图片_20180321214912.jpg](https://i.loli.net/2018/03/21/5ab26421394cb.jpg)](https://i.loli.net/2018/03/21/5ab26421394cb.jpg)\n[![微信图片_20180321214921.jpg](https://i.loli.net/2018/03/21/5ab2642179c51.jpg)](https://i.loli.net/2018/03/21/5ab2642179c51.jpg)\n\n\n4. 最后还是正常地开机了(#^.^#)\n","cover":"","link":"replace-battery-of-nexus6p.html","preview":"","title":"Replace Battery of Nexus6p"},{"content":"\n\n```pascal\nuses\n  SynCrtSock;\n\n{$R *.dfm}\n\nprocedure TForm1.btn1Click(Sender: TObject);\nbegin\n  mmo1.Lines.Add( TWinHTTP.Get('https://www.baidu.com'));\nend;\n```\n静态调用","cover":"","link":"twinhttp.html","preview":"","title":"TWinHTTP"},{"content":"\n\n\u003e 工程设置(Release or Debug)\n\u003e Delphi Compiler -\u003e Linking -\u003e Map file -\u003e Detailed\n\u003e Delphi Compiler -\u003e Compiling -\u003e Debug information -\u003e Debug information\n\n```pascal\n{*******************************************************}\n{                                                       }\n{           工程: 短信专业版                            }\n{       单元功能: 日志类                                }\n{           作者: Linx                                  }\n{           时间: 2017-12-10 17:29:47                   }\n{                                                       }\n{       版权所有 (C) 2017 Soesoft                       }\n{                                                       }\n{*******************************************************}\n\nunit SMSPro.Log.Logger;\n\ninterface\n\nuses\n  System.SysUtils,\n  Vcl.ComCtrls,\n  Data.DBXCommon;\n\ntype\n  TSMSLogger = class\n  public\n    class procedure InitSynLog();\n    function GetCurLogFileName:string;\n  end;\n\nimplementation\n\nuses\n  SynLog,\n  SynCommons;\n\n{ TSoeLogger }\n\nclass procedure TSMSLogger.InitSynLog;\nbegin\n  ForceDirectories('.\\log\\smspro');\n  TSynLog.Family.Level := LOG_VERBOSE;\n  TSynLog.Family.Level := [sllException, sllExceptionOS,sllInfo,sllError,sllEnter];\n  TSynLog.Family.LocalTimeStamp := True;\n  //不记录环境变量\n  TSynLog.Family.NoEnvironmentVariable := True;\n  //记录单元名\n  TSynLog.Family.WithUnitName := True;\n  //行结尾符号\n  TSynLog.Family.EndOfLineCRLF := True;\n  TSynLog.Family.DestinationPath := '.\\log\\smspro\\';\n  //TSynLog.Family.PerThreadLog := true;\n  //TSynLog.Family.HighResolutionTimeStamp := true;\n  //TSynLog.Family.AutoFlushTimeOut := 5;\n  //TSynLog.Family.StackTraceUse := stOnlyAPI;\n  //lz压缩\n  TSynLog.Family.OnArchive := EventArchiveSynLZ;\n  //TSynLog.Family.OnArchive := EventArchiveZip;\n  TSynLog.Family.ArchiveAfterDays := 7; // archive after one day\n  TSynLog.Family.RotateFileSizeKB := 10240;\n  TSynLog.Family.RotateFileDailyAtHour := 20;\n  //忽略的异常（只是不记录到日志里）\n  TSynLog.Family.ExceptionIgnore.Add(TDBXError);\n  TSynLog.Family.ExceptionIgnore.Add(EOSError);\nend;\n\nfunction TSMSLogger.GetCurLogFileName: string;\nbegin\n  Exit(TSynLog.Add.FileName);\nend;\n\nend.\n```","cover":"","link":"synlog日志组件捕获成吨可调试异常.html","preview":"","title":"SynLog日志组件捕获成吨可调试异常"},{"content":"\n\n代码如下\n\n其实我一直有个疑问， 为什么github上很多的配置库基本上都是只读的，并没有提供写配置的方法，因为如果可以实时地修改某个配置项的话就会很方便了。\n我这个版本是直接更新整个文件的. 另外CnPack里有个根据Ini配置文件生成读写单元的功能， 但是我认为如果配置文件里需要加入新的配置项的话依然会很不方便（需要重新生成）\n\n```pascal\n{*******************************************************}\n{                                                       }\n{           工程: 短信专业版                             }\n{       单元功能: 配置管理                               }\n{           作者: Linx                                  }\n{           时间: 2017-12-10 17:26:50                   }\n{                                                       }\n{       版权所有 (C) 2017 soesoft                       }\n{                                                       }\n{*******************************************************}\n\nunit SMSPro.Base.JSONConfig;\n\ninterface\n\nuses\n  System.SysUtils,\n  SynCommons,\n  Vcl.Dialogs;\nconst\n  CONFIG_FILENAME = 'SMS.json';\ntype\n  TParam = record\n    name: string;\n    description: string;\n    field: string;\n    hdwms_sms_type: string;\n    demo:string;\n  end;\n\n  TParamDynArray = array of TParam;\n\n  TTemplate = record\n    sms_template_code: string;\n  end;\n\n  TSMSConfig = record\n    account: record\n      username: string;\n      password: string;\n    end;\n    pageSize:Integer;\n    log:Boolean;\n    api: record\n      baseUri: string;\n      sendApi: string;\n      checkApi: string;\n      templatesApi: string;\n      templateApi:string;\n      listDetail: string;\n    end;\n    params: array of TParam;\n    template: TTemplate;\n    procedure LoadFromFile(pvFileName: string = '');\n    function SaveToFile(pvFileName: string = ''): Boolean;\n    procedure SaveDefaultToFile();\n    function DecodeFile(pvFileName: string = ''):Boolean;\n    function EncodeFile(pvFileName:string = ''):Boolean;\n  end;\n\nprocedure LoadConfig;\n\nfunction Config: TSMSConfig;\n\nvar\n  SMSConfig: TSMSConfig;\n\nimplementation\n\nuses\n  System.IOUtils;\n\nprocedure LoadConfig;\nbegin\n  SMSConfig.LoadFromFile();\nend;\n\nfunction Config: TSMSConfig;\nbegin\n  Result := SMSConfig;\nend;\n\nprocedure TSMSConfig.SaveDefaultToFile();\nvar\n  lvFileName: string;\n  configContent: RawJSON;\nbegin\n  lvFileName := ExtractFilePath(ParamStr(0)) + CONFIG_FILENAME;\n  configContent := RecordSaveJSON(Self, TypeInfo(TSMSConfig));\n  TFile.WriteAllText(lvFileName, configContent);\nend;\n\n\nfunction TSMSConfig.SaveToFile(pvFileName: string = ''): Boolean;\nvar\n  lvFileName: string absolute pvFileName;\n  configContent: RawJSON;\n  IfSaveBase64:Boolean;\nbegin\n  Result := True;\n  try\n    if lvFileName = '' then\n    begin\n      lvFileName := ExtractFilePath(ParamStr(0)) + CONFIG_FILENAME;\n    end;\n    if not FileExists(lvFileName) then\n    begin\n      IfSaveBase64 := True;\n    end\n    else\n    begin\n      configContent := TFile.ReadAllText(lvFileName);\n      IfSaveBase64 := IsBase64(configContent);\n    end;\n\n    if IfSaveBase64 then\n    begin\n      configContent := RecordSaveBase64(Self,TypeInfo(TSMSConfig));\n    end\n    else\n    begin\n      configContent := RecordSaveJSON(Self, TypeInfo(TSMSConfig));\n    end;\n\n    TFile.WriteAllText(lvFileName, configContent,TEncoding.UTF8);\n  except\n    Result := False;\n  end;\n\nend;\n\nprocedure TSMSConfig.LoadFromFile(pvFileName: string = '');\nvar\n  lvFileName: string absolute pvFileName;\n  configContent: RawJSON;\nbegin\n  if lvFileName = '' then\n  begin\n    lvFileName := ExtractFilePath(ParamStr(0)) + CONFIG_FILENAME;\n  end;\n  if TFile.Exists(lvFileName) then\n  begin\n\n    configContent := AnyTextFileToRawUTF8(lvFileName, True);\n\n    if IsBase64(configContent) then\n    begin\n      if not RecordLoadBase64(PAnsiChar(configContent), Length(configContent), Self,\n        TypeInfo(TSMSConfig)) then\n      begin\n        ShowMessage('读取短信配置失败');\n      end;\n    end\n    else\n    begin\n      if not RecordLoadJson(Self, configContent, TypeInfo(TSMSConfig)) then\n      begin\n        ShowMessage('读取短信配置失败');\n      end;\n    end;\n  end\n  else\n  begin\n    ShowMessage('短信配置文件SMSPro.json不存在');\n  end;\nend;\n\nfunction TSMSConfig.DecodeFile(pvFileName: string = ''):Boolean;\nvar\n  lvFileName: string absolute pvFileName;\n  configContent: RawJSON;\n  tmp:TSMSConfig;\nbegin\n  Result := False;\n  if lvFileName = '' then\n  begin\n    lvFileName := ExtractFilePath(ParamStr(0)) + CONFIG_FILENAME;\n  end;\n  if not FileExists(lvFileName) then\n  begin\n    Exit;\n  end\n  else\n  begin\n    configContent := AnyTextFileToRawUTF8(lvFileName, True);\n  end;\n\n  if IsBase64(configContent) then\n  begin\n    if RecordLoadBase64(PAnsiChar(configContent), Length(configContent), tmp, TypeInfo(TSMSConfig)) then\n    begin\n      configContent := RecordSaveJSON(tmp, TypeInfo(TSMSConfig));\n      Result := True;\n    end;\n  end\n  else\n  begin\n    Exit(True);\n  end;\n\n  TFile.WriteAllText(lvFileName, configContent, TEncoding.UTF8);\nend;\n\nfunction TSMSConfig.EncodeFile(pvFileName:string = ''):Boolean;\nvar\n  lvFileName: string absolute pvFileName;\n  configContent: RawJSON;\n  tmp:TSMSConfig;\nbegin\n  Result := False;\n  if lvFileName = '' then\n  begin\n    lvFileName := ExtractFilePath(ParamStr(0)) + CONFIG_FILENAME;\n  end;\n  if not FileExists(lvFileName) then\n  begin\n    Exit;\n  end\n  else\n  begin\n    configContent := AnyTextFileToRawUTF8(lvFileName, True);\n  end;\n\n  if not IsBase64(configContent) then\n  begin\n    if RecordLoadJSON(tmp, configContent, TypeInfo(TSMSConfig)) then\n    begin\n      configContent := RecordSaveBase64(tmp, TypeInfo(TSMSConfig));\n      Result := True;\n    end;\n  end\n  else\n  begin\n    Exit(Result);\n  end;\n\n  TFile.WriteAllText(lvFileName, configContent, TEncoding.UTF8);\nend;\n\n\ninitialization\n  LoadConfig;\n\nfinalization\n\nend.\n\n```\n","cover":"","link":"以json作为配置文件.html","preview":"","title":"以JSON作为配置文件"},{"content":"\n\n```pascal\nprocedure TForm1.FormCreate(Sender: TObject);\ntype\n  TGroup = record\n    name: string;\n    value: string;\n  end;\n  TGroupArr = array of TGroup;\nvar\n  DA:TDynArray;\n  strArr:TStringDynArray;\n  v:string;\n  newResult,findResult:TGroup;\n  groupArr:TGroupArr;\nbegin\n  SetLength(strArr,2);\n  strArr[0]:='123';\n  strArr[1]:='345';\n  DA.Init(TypeInfo(TStringDynArray),strArr);\n  v := 'str 1';\n  //DA.Add('str 1') is illegal\n  DA.Add(v);\n  v := 'str 2';\n  DA.Add(v);\n  ShowMessage(DA.SaveToJSON());\n  DA.ClearSafe;\n\n  //find record from array\n  DA.Init(TypeInfo(TGroupArr),groupArr);\n  //必须设置这个属性 才可以查找\n  DA.Compare := SortDynArrayString;\n  newResult.name := 'A';\n  newResult.value := 'AValue';\n  DA.Add(newResult);\n\n  newResult.name := 'B';\n  newResult.value := 'BValue';\n  DA.Add(newResult);\n  findResult.name := 'A';\n\n  //找到了就会自动填充\n  DA.FindAndFill(findResult);\n  ShowMessage(findResult.value);\n\nend;\n```","cover":"","link":"mormot数组操作.html","preview":"","title":"mORMot数组操作"},{"content":"\n\n```pascal\ntype\n  TCusObject = class\n  private\n    FB: string;\n    FA: string;\n    procedure SetA(const Value: string);\n    procedure SetB(const Value: string);\n  published\n    property A: string read FA write SetA;\n    property B: string read FB write SetB;\n  end;\n\nprocedure TCusObject.SetA(const Value: string);\nbegin\n  FA := Value;\nend;\n\nprocedure TCusObject.SetB(const Value: string);\nbegin\n  FB := Value;\nend;\n\n\nuses\n  SynCommons;\n```\n\n```pascal\nprocedure TForm1.btn1Click(Sender: TObject);\nvar\n  json,json1:Variant;\nbegin\n  json := _JsonFast(mmo1.Lines.Text); // more faster O(∩_∩)O\n  json1 := _Json(mmo1.Lines.Text);\n  mmo2.Lines.Add('==========Parse Json String To Variant==========');\n  mmo2.Lines.Add('a:' + json.a);\n  mmo2.Lines.Add('b:' + json.b);\n  mmo2.Lines.Add('==========END==========');\n\nend;\n\nprocedure TForm1.btn2Click(Sender: TObject);\nvar\n  json:Variant;\nbegin\n  json := _JsonFast(mmo1.Lines.Text); // more faster O(∩_∩)O\n\n  json.c := 'This is C';\n\n  mmo2.Lines.Add('==========Add Field To Json==========');\n  mmo2.Lines.Add('New Json:' + VariantToString(json));\n  mmo2.Lines.Add('a:' + json.a);\n  mmo2.Lines.Add('b:' + json.b);\n  mmo2.Lines.Add('c:' + json.c);\n  mmo2.Lines.Add('==========END==========');\n\nend;\n\nprocedure TForm1.btn3Click(Sender: TObject);\nvar\n  json:Variant;\nbegin\n  json := _JsonFast(mmo1.Lines.Text); // more faster O(∩_∩)O\n\n  TDocVariantData(json).Delete('a');\n\n  mmo2.Lines.Add('==========Remove Field From Json==========');\n  mmo2.Lines.Add('New Json:' + VariantToString(json));\n  mmo2.Lines.Add('==========END==========');\n\nend;\n\nprocedure TForm1.btn4Click(Sender: TObject);\nvar\n  json,json1:Variant;\nbegin\n  json := _JsonFast(mmo1.Lines.Text); // more faster O(∩_∩)O\n  json1 :=  _JsonFast('{}');\n  json1.c := 'This is C';\n  json1.d := 'This is D';\n  TDocVariantData(json).AddValue('c',VariantToUTF8(json1));\n\n  mmo2.Lines.Add('==========Add Json To Json As One Field==========');\n  mmo2.Lines.Add('New Json:' + VariantToString(json));\n  mmo2.Lines.Add('==========END==========');\n\nend;\n\nprocedure TForm1.btn5Click(Sender: TObject);\nvar\n  json,json1:Variant;\n  prettyJson:RawJSON;\nbegin\n  json := _JsonFast(mmo1.Lines.Text); // more faster O(∩_∩)O\n  json1 :=  _JsonFast('{}');\n  json1.c := 'This is C';\n  json1.d := 'This is D';\n  TDocVariantData(json).AddValue('c',VariantToUTF8(json1));\n  prettyJson := TDocVariantData(json).ToJSON('','',jsonHumanReadable);\n  mmo2.Lines.Add('==========Add Json To Json As One Field==========');\n  mmo2.Lines.Add('New Json:' +prettyJson);\n  mmo2.Lines.Add('==========END==========');\nend;\n\nprocedure TForm1.btn6Click(Sender: TObject);\nvar\n  json:Variant;\n  prettyJson:RawJSON;\nbegin\n  json := _JsonFast(mmo1.Lines.Text); // more faster O(∩_∩)O\n\n  TDocVariantData(json).AddOrUpdateValue('c',_Json( '{\"name\":\"This is C name\",\"sex\":\"This is C sex\"}'));\n\n\n  mmo2.Lines.Add('==========Add Sub Object==========');\n  prettyJson := TDocVariantData(json).ToJSON('','',jsonHumanReadable);\n  mmo2.Lines.Add('New Json:' + prettyJson);\n  mmo2.Lines.Add('a:' + json.a);\n  mmo2.Lines.Add('b:' + json.b);\n  mmo2.Lines.Add('c.name:' + json.c.name);\n  mmo2.Lines.Add('==========END==========');\n\nend;\n```\n\n\n","cover":"","link":"mormot操作json.html","preview":"","title":"mORMot操作JSON"},{"content":"\n\n文件-\u003e首选项-\u003e设置，在右侧加入一条\n\n```json\n{\n    \"explorer.sortOrder\": \"modified\"\n}\n```","cover":"","link":"设置vscode的文件列表排序按照修改时间为准.html","preview":"","title":"设置VSCODE的文件列表排序按照修改时间为准"},{"content":"\n\n当一个属性为[]类似的数组访问形式， 并且标记为default时，那么可以不用写Itemsp[], 直接 objs[]这样访问\n```delphi\n   property Items[const Key:string]:TObject read FGetItem write FSetItem;default;\n```\n\n当多个单元同时拥有相同名称的方法或者变量， 并且你在另外一个单元里都引用了这些单元时，就会出问题了\n例如: Syncommons这个单元里有大量的和Delphi自带同名的类型， 比如 TStringDynArray\n\n那么如果有一天，你在某个单元里引用了Syncommons， 就会报错， 因为你写的之前的方法所需要的类型并不是Syncommons这个单元里的那个类型（即使它们的定义是一样的）\n这时候只需要做一件事 **把Syncommons单元的引用位置移动到最前面** ，因为Delphi的编译器会用后面的单元覆盖前面单元的相同声明\n","cover":"","link":"delphi奇技淫巧.html","preview":"","title":"Delphi奇技淫巧"},{"content":"\n\n\u003e\n当你走进这欢乐场\n背上所有的梦与想\n各色的脸上各色的妆\n没人记得你的模样\n三巡酒过你在角落\n固执的唱着苦涩的歌\n听他在喧嚣里被淹没\n你拿起酒杯对自己说\n一杯敬朝阳 一杯敬月光\n唤醒我的向往 温柔了寒窗\n于是可以不回头地逆风飞翔\n不怕心头有雨 眼底有霜\n一杯敬故乡 一杯敬远方\n守着我的善良 催着我成长\n所以南北的路从此不再漫长\n灵魂不再无处安放\n一杯敬明天 一杯敬过往\n支撑我的身体 厚重了肩膀\n虽然从不相信所谓山高水长\n人生苦短何必念念不忘\n一杯敬自由 一杯敬死亡\n宽恕我的平凡 驱散了迷惘\n好吧天亮之后总是潦草离场\n清醒的人最荒唐\n好吧天亮之后总是潦草离场\n清醒的人最荒唐\n","cover":"","link":"消愁.html","preview":"","title":"消愁"},{"content":"\n\n假设这样一种情景，一个界面上几十个CheckBox，每个都表示某个选项的启用或不启用，并且这些选项都需要存储起来。\n那么怎么做呢？每个都创建一个字段存储起来？那如果选项很多呢？\n\n又或者设计一个权限系统。。。\n\n二进制的世界是美妙的，门就两个状态，开或者关。用二进制表示的话就是1和0 .\n\nDelphi中， set集合本身就是以一个数字存储起来的\n\n```pascal\n  TSwitchStatus2 = set of (\n    WindowOpen,\n    WindowPause,\n    WindowClose,\n    AirConditionHigh,\n    AirConditionMedium,\n    AirConditionLow,\n    AirConditionOpen,\n    AirConditionClose);\n```\n```pascal\nfunction SetToBin(p: PByteArray; size: Integer): UInt8;\nvar\n  i,j: Integer;\n  function SetBit(const X, N: integer): integer;\n  asm\n        bts     eax, edx\n  end;\nbegin\n  Result := 0;\n  for i := 0 to size - 1 do\n    for j := 0 to 7 do\n      if Odd(p^[size - 1 - i] shr j) then\n        Result := SetBit(Result, i * 8 + 8 - j);\nend;\n```\n\n以上代码可以将一个最大容量为8的集合转换为一个8位的十进制值\n\n```pascal\n  SetToBin(@pvSwitchStatus, SizeOf(TSwitchStatus2));\n```\n\n其实这里的8位的意思是，这个值最大为\n11111111 (无符号), 当然也可以写出 16位甚至64位的方法，那样就可以存储更多的状态。\n\n当一个集合变量拥有了某个状态， 那么对应的二进制的对应位置的值就为1，否则为0\n\n转换出来的数值可以直接存储，这样就实现了，一个字段就存储了8个状态。\n\n当然还是需要转换回来的啦\n\n```pascal\n  Byte(switchStatus2) := DataFrame.Data[4];\n```\n\n那么接下来就可以使用in语法来判断某个状态是否开启了， 或者写个算法，做一下移位，然后用odd判断一下也可以（这样比较快）\n\n当然了， 如果需要存储的状态并没有太大的关联性， 那么某种意义上来说， 并不适合存放在一起的\n\n\n对于权限系统来说，可以将权限归类，每个类别限制在较少的数量，如此一来，一组权限只需要一个数字就行了\n\n那么如果，真的很多权限呢？ 那么只要把一个数拆分为好几个部分即可，拆两半的话就一个高位一个低位即可\n\n\n\n","cover":"","link":"store-multi-state-with-one-number.html","preview":"","title":"使用一个数字存储很多状态"},{"content":"\n\n声明\n```pascal\ntype\n  TMyRecord = record\n    id:Integer;\n    name:string;\n  end;\n\n  ITestService = interface(IInvokable)\n    ['{CB7ABEE8-134D-4706-8C6D-FAACECA754D4}']\n    function PostClient(const rec:TMyRecord):TServiceCustomAnswer;\n  end;\n\n```\n\n```pascal\nfunction TTestService.PostClient(const rec:TMyRecord): TServiceCustomAnswer;\nbegin\n  CheckMethod('POST',Result);\n\n  Success('成功取得请求体:'+RecordSaveJson(rec,TypeInfo(TMyRecord)), Result);\nend;\n```\n\n客户端调用方法\n\n```json\n{\n    \"rec\":\n    {\n        \"id\":\"id\",\n        \"name\":\"name\"\n    }\n\n}\n```\n\n不能直接向其它服务端那样，而是需要指定一下参数名， 这里的 `rec` 就是参数名，\n那么， 其实一次POST请求可以传递多个参数了\n","cover":"","link":"mormot-rest-server-deserialize-record-from-json-body.html","preview":"","title":"mORMot REST服务端自动解析json body为record"},{"content":"\n\n- [DataSetJSONConverter4D](https://github.com/ezequieljuliano/DataSetConverter4Delphi)\n- [mORMot](https://github.com/synopse/mORMot)\n\n\n我是从自带的例子 `20 - DTO interface based service` 进行修改而来\n```pascal\n  IAirportService = interface(IInvokable)\n    ['{4A613FCE-3B0D-4582-97C5-4244B06C2006}']\n    function ReturnCds(a:Integer):TServiceCustomAnswer;\n  end;\n```\n\n这里返回 `TServiceCustomAnswer`的原因是\ngoogle 搜索到 \n\n[https://synopse.info/forum/viewtopic.php?id=2400](https://synopse.info/forum/viewtopic.php?id=2400)\n\n这个帖子，作者说，为了返回的json不带result这个字段，那么必须返回这个类型\n\n见 \n\n[https://synopse.info/files/html/api-1.18/mORMot.html#TSERVICECUSTOMANSWER](https://synopse.info/files/html/api-1.18/mORMot.html#TSERVICECUSTOMANSWER)\n\n当然我就立马试了一下，不过不行，在经过认真阅读了文档之后，必须\n\n```pascal\nTServiceCustomAnswer.Header := JSON_CONTENT_TYPE_HEADER;\n```\n\n即Header必须要设置，否则无效\n\n写了一个简单的类\n\n```pascal\nTHTTPServiceBase = class(TInterfacedObject)\npublic\n    procedure Success(var cds:TClientDataSet;out answer:TServiceCustomAnswer);overload;\n    procedure Fail(const msg:string;out answer:TServiceCustomAnswer);\nend;\n\nprocedure THTTPServiceBase.Fail(const msg: string;\nout answer: TServiceCustomAnswer);\nvar\n    ILog: ISynLog;\nbegin\n    ILog := TSynLog.Enter(self,'Fail');\n    ILog.log(sllInfo,'Fial');\nend;\n\nprocedure THTTPServiceBase.Success(var cds: TClientDataSet;out answer:TServiceCustomAnswer);\nbegin\n    answer.Header := JSON_CONTENT_TYPE_HEADER;\n    answer.Content := ToUTF8(cds.AsJSONObjectString);\n    answer.Status := 200;\nend;\n```\n\n实现Service\n\n```pascal\nTAirportService = class(THTTPServiceBase, IAirportService)\n  public\n    function ReturnCds(a:Integer):TServiceCustomAnswer;\nend;\n\nfunction TAirportService.ReturnCds(a:Integer): TServiceCustomAnswer;\nvar\n  cds:TClientdataSet;\nbegin\n  if a\u003c\u003e1 then\n  begin\n    Self.Fail('错误的参数',Result);\n  end;\n  cds := TClientdataSet.Create(nil);\n  try\n    cds.FieldDefs.Clear;\n    cds.FieldDefs.Add('F_NAME', ftString, 100);\n    cds.FieldDefs.Add('F_SEX', ftString, 100);\n    cds.CreateDataSet;\n\n    cds.Append;\n    cds.FieldByName('F_NAME').AsString := '这是一个名字';\n    cds.FieldByName('F_SEX').AsString := '这是一个性别';\n    cds.Post;\n    self.Success(cds,Result);\n  finally\n    FreeAndNil(cds);\n  end;\nend;\n```\n\n如此一来，就可以实现我的以下要求了\n\nHTTP URL 中传入方法名和参数，即可获得需要的数据，内部可以传入自己的连接池用于查询数据\n\nTHTTPServiceBase类中做一些处理，可以加入验证机制，自带的验证机制，我暂时还没搞懂\n\n接下来可以尝试如何实现POST body的解析\n","cover":"","link":"mormot-rest-server-return-tclientdataset-data.html","preview":"","title":"mORMot返回TClientDataSet"},{"content":"\n\n```pascal\nuses \n  SynCommons, SynLZO, SynCrtSock;\ntype\n  TTestServer = class\n    protected\n      fstr : string;\n      fServer: THttpApiServer; //内部为http.sys的实现\n      function Process(Ctxt: THttpServerRequest): cardinal;\n    public\n      constructor Create(const str:string;const path:string);\n      destructor Destroy; override;\n  end;\n\n\n{ TTestServer }\n\nconstructor TTestServer.Create(const str:string;const path:string);\nbegin\n  fstr := str;\n  fServer := THttpApiServer.Create(false);\n  fServer.AddUrl(path,'888',false,'+',true);\n  fServer.RegisterCompress(CompressSynLZ); //可以启用不同的压缩库\n  fServer.OnRequest := Process;\nend;\n\ndestructor TTestServer.Destroy;\nbegin\n  fServer.Free;\n  inherited;\nend;\n\nfunction TTestServer.Process(Ctxt: THttpServerRequest): cardinal;\nbegin\n  Ctxt.OutContentType := JSON_CONTENT_TYPE;// ContentType: application/json; charset=utf-8\n\n  Ctxt.OutContent := ToUTF8(fstr); //转换到UTF8的字符串， 解决中文乱码的问题\n  result := 200;\nend;\n\n```\n\n```pascal\n   //可以绑定多个路径， 但是是同一个端口\n   TestServer := TTestServer.Create('{\"你好\":\"aaa\"}','root') ; \n   TestServer2 := TTestServer.Create('{\"你好\":\"bbb\"}','bbb') ;\n```\n\n非常棒！！\n","cover":"","link":"make-mormot-work-in-normal-vcl-app.html","preview":"","title":"mORMot运行在普通VCL程序中"},{"content":"\n\n使用\n```delphi\nReportMemoryLeaksOnShutdown := True;\n```\n来开启自带的内存泄露检测\n\n引用 `System.JSON`单元\n\n测试代码如下：\n```pascal\nprocedure TForm1.FormCreate(Sender: TObject);\nvar\n  jo:TJsonObject;\n  joo:TJsonObject;\n  ja:TJsonArray;\n  jao:TJsonValue;\nbegin\n  //状况1 单个JSON对象 直接释放即可\n  jo := TJSONObject.ParseJSONValue('{\"A\":true}') as TJSONObject;\n  //jo.Free;\n  FreeAndNil(jo);\n\n  //状况2 数组对象 在遍历时， 无需对遍历的对象进行释放\n  ja := TJSONObject.ParseJSONValue('[{\"A\":true},{\"B\":false}]') as TJSONArray;\n  for jao in ja do\n  begin\n    OutputDebugString(PChar(jao.ToString));\n    // jao.Free;  这样会报异常   因为其实这里的jao仅仅是一个指针，而不是拷贝出来的对象\n  end;\n  //ja.Free;\n  FreeAndNil(ja);\n\n  //状况3 Values['Name'] 出来的对象， 其实这里和状况2类似\n  jo := TJSONObject.ParseJSONValue('{\"A\": {\"B\":true}}') as TJSONObject;\n\n  joo := jo.Values['A'] as TJSONObject;\n  OutputDebugString(PChar(joo.ToString));\n  //joo.Free;\n  //FreeAndNil(joo);  //这样也会出错\n\n  FreeAndNil(jo);\nend;\n```\n\n为什么会这样， 看源码：\n```delphi\ndestructor TJSONObject.Destroy;\nvar\n  Member: TJSONAncestor;\n  I: Integer;\nbegin\n  if FMembers \u003c\u003e nil then\n  begin\n    for i := 0 to FMembers.Count - 1 do\n    begin\n      Member := TJSONAncestor(FMembers[I]);\n      if Member.GetOwned then\n        Member.Free;\n    end;\n    FreeAndNil(FMembers);\n  end;\n  inherited Destroy;\nend;\n\ndestructor TJSONArray.Destroy;\nvar\n  Element: TJSONAncestor;\n  I: Integer;\nbegin\n  if FElements \u003c\u003e nil then\n  begin\n    for I := 0 to FElements.Count - 1 do\n    begin\n      Element := TJSONAncestor(FElements[I]);\n      if Element.GetOwned then\n        Element.Free;\n    end;\n    FreeAndNil(FElements);\n  end;\n  inherited Destroy;\nend;\n```\n\n也就是说，这棵对象的树会自己处理树枝的生命周期， 因此只要管好 `ParseJSONValue` 出来的那个对象即可\n\n\n\n\n\n\n","cover":"","link":"manage-tjsonobject-memory.html","preview":"","title":"TJSONObject 对象内存释放"},{"content":"\n\n[gasp_hack](http://pan.baidu.com/s/1eRRXhn0)\n\n下载之后， 运行 `GaspHack_v2_MOD.bat` 等待补丁执行完毕， 然后到进入PE系统， 将 `.\\workingDir\\output`中的字体替换到系统字体目录，重启\n\n重新执行一次ClearType调整，会发现字体看着瞬间就舒坦了\n\n测试系统 Windows Server 2016","cover":"","link":"gasphack-make-font-looks-better.html","preview":"","title":"gasphack 补丁让字体更好"},{"content":"\n\n首先第一步， 当然是先在本地搭建好hugo\n\n## 配置nginx\n\n```nginx\nserver {\n        listen 443 ssl default_server;\n        listen [::]:443 ssl default_server;\n        root /var/www;\n        ssl on;\n        ssl_certificate /etc/ssl/certs/llinx.me.pem;\n        ssl_certificate_key /etc/ssl/private/llinx.me.key;\n        ssl_dhparam /etc/ssl/certs/dhparam.pem;\n        index index.html index.htm index.nginx-debian.html;\n\n        server_name llinx.me;\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n\nserver {\n        listen 80;\n        server_name llinx.me;\n        rewrite ^(.*) https://$server_name$1 permanent;\n}\n```\n```bash\nservice nginx restart\n```\n\n## 配置HTTPS\n\n\u003e https://llinx.me/post/automatic-issuance-and-renewal-of-acmesh-using-ssl/\n\n## 配置git\n```bash\napt install git -y\ncd ~\nmkdir llinx.me.git\ncd llinx.me.git\ngit init --bare\ncd hooks\ntouch post-receive\nvi post-receive\n```\n使用以下脚本\n\n```sh\n#!/bin/sh \nGIT_REPO=/root/llinx.me.git\nTMP_GIT_CLONE=/tmp/blog\nNGINX_HTML=/var/www\nrm -rf ${TMP_GIT_CLONE}\ngit clone $GIT_REPO $TMP_GIT_CLONE\nrm -rf ${NGINX_HTML}/*\ncp -rf ${TMP_GIT_CLONE}/* ${NGINX_HTML}\n```\n:wq\n\n```bash\nchmod +x post-receive\n```\n## 设置本地git(Source Tree)\n\n- 创建新仓库\n- 目录选择hugo的public目录， 名称修改为自己的域名\n- 生成SSH-KEY \n  \n  ```bash\n    ssh-keygen -t rsa -C \"A@B.COM\"\n  ```\n\n\n## 配置SSH\n\n```bash\ncd ~\nmkdir .ssh\nvi ~/.ssh/authorized_keys \n```\n\n设置权限\n```bash\nchmod 600 authorized_keys \nchmod 700 -R .ssh  \n```\n\n## 测试ssh连接\n\n```bash\nssh root@IP -p PORT\n```\n如果无需密码登陆那么进行下一步\n\nSource Tree 添加远端为\n```\nssh://root@IP:PORT/root/llinx.me.git\n```\n选项中设置密钥为id_rsa (私钥)\n\n## 修改hugo设置并推送\n主要是`baseurl`，因为一般在本地使用的时候也不会去搞https的\n\n## 存放其他文件\n为保证其他文件不丢失，那么可以把public加入忽略，然后把整个博客目录推送到github上或者其他代码托管服务上\n","cover":"","link":"host-a-hugo-blog-using-git-hooks.html","preview":"","title":"使用git钩子在VPS架设hugo博客"},{"content":"\n\n首先需要导出typecho的文章\n\n```php\n\u003c?php\n$db= new mysqli();\n$db-\u003econnect('localhost','root','root','typecho');\n$sql=\u003c\u003c\u003cTEXT\nselect title,text,created,t2.category,t1.tags,slug from typecho_contents c\nleft join \n (select cid,CONCAT('\"',group_concat(m.name),'\"') tags from typecho_metas m,typecho_relationships r where m.mid=r.mid and m.type='tag' group by cid ) t1\n on c.cid=t1.cid\n left join \n(select cid,CONCAT('\"',GROUP_CONCAT(m.name),'\"') category from typecho_metas m,typecho_relationships r where m.mid=r.mid and m.type='category' group by cid) t2\non c.cid=t2.cid\nTEXT;\n$db-\u003equery(\"set character set 'utf8'\");//读库 \n$res=$db-\u003equery($sql);\nif($res){\n    if($res-\u003enum_rows\u003e0){\n\n        while($r=$res-\u003efetch_object()) {\n            $_c=date('Y-m-d H:i:s',$r-\u003ecreated);\n            $_t=str_replace('\u003c!--markdown--\u003e','',$r-\u003etext);\n            $_a = str_replace(array('C#'),'CSharp',$r-\u003etags);\n            $_a = str_replace(array(','),'\",\"',$r-\u003e$_a);\n            $_g = str_replace(array('C#'),'CSharp',$r-\u003ecategory);\n            $_g = str_replace(array(','),'-',$_g);\n            \n            $_tmp = \u003c\u003c\u003cTMP\n+++\ntitle= \"$r-\u003etitle\"\ncategories= [$_g]\ntags= [$_a]\ndate= \"$_c\"\n+++\n\n$_t\n\nTMP;            \n            $file_name=iconv(\"utf-8\",\"gb2312\",$r-\u003eslug);\n            //替换不合法文件名字符\n           file_put_contents(str_replace(array(\" \",\"?\",\"\\\\\",\"/\" ,\":\" ,\"|\", \"*\" ),'-',$file_name).\".md\",$_tmp);\n        }\n    }\n    $res-\u003efree();\n}\n\n$db-\u003eclose();\n```\n将以上代码保存为convert.php, 放置到网站目录下，修改其中的mysql账号密码，即可导出hugo所需要的格式了。\n\n如果有部分文章没有正常slug的那只能麻烦点手动修改文件名为文章名了，当然也可以再写个脚本，不过我文章不多, 就累点累点了，\n\n注意：文件名中可以包含中文，也可以有括号 空格什么的，但有些字符应该手动把他修改掉\neg. `#` `%` `@` 类似的这种本身就被用于URL的字符\n","cover":"","link":"typecho迁移到hugo.html","preview":"","title":"typecho迁移到hugo"},{"content":"\n\n最近在使用beego开发一个小工具，主要干两件事，一边和`RabbitMQ`进行消息投递和通讯，另一边使用`mongodb`然后提供rest api用于外部调用。\n\n在经过几天的测试后，发现，每天早上起来，外部发起请求必然会超时，然后console里还能够正常输出日志，一开始我还在想是不是线程死锁之类的问题，然而并不是。后面经过测试发现，不是beego这边问题，而是mongodb这边问题，因为在进行消息的压力测试投递下，必死，后面将mgo的连接池大小改小，发现死的更快了。于是终于确定了问题的根源所在，其实就是连接池资源耗尽，导致新的请求无法获得连接请求数据库了。\n进一步研究发现，其实是我在`Service.Prepare()`之后取得了数据连接，后面并没有释放之。我本以为`Service`自动释放的时候应该会把连接释放掉的，然而，呵呵。那个连接还在，系统可不敢释放它。不过beego的controller在方法调用完后，会自动调用`BaseController`的`Finish`方法来处理数据连接，这边就是正常的。\n\n找到了问题所在，现在消息处理速度杠杠的☺\n","cover":"","link":"golang-mgo-connection-pool-problem.html","preview":"","title":"golang mgo 连接池问题"},{"content":"\n\n\u003e \"github.com/nevernet/logger\"\n\n首先这个库，属于一种对于beego自带日志的扩展， 然而封装的不是特别详细， 因此目前来说还是自己修改其代码以达到自己的目的。\n\nbeego的日志模块在unix系统的Terminal支持颜色输出的情况下应该是好， 不过在Windows下，我看了下代码的实现，默认自带的`ConsoleWriter`，在判断到系统是`windows`的时候会默认将`colorable`设置成`false`。然后我去官方仓库翻了翻`issue`，翻到了一个加入颜色支持的`issue`，不过并没有后续的对`windows`进行支持的。然而官方的`bee`工具里的日志输出就非常(๑•̀ㅂ•́)و✧， 其实我现在是想要一个日志输出像 `bee run`那样的输出，例如 `SUCCESS` 标签为绿色，非常漂亮。但后来经过尝试发现，其实`windows`的命令行或者`powershell` 如果不进行相关的修改，即使加上颜色，还是很难看，主要还是那个字体，并不能像`vscode`里的`powershell`那样。于是暂时先搞个带颜色的出来就好。\n\n在研读\n\u003e https://github.com/mattn/go-colorable\n\n这个库的实现方式之后，了解到，只要给日志模块一个可以比较好支持颜色输出的Writer即可了。 后来发现其实beego的内部已经加入了支持，只不过目前的1.8版本还没有正式实现之，需要用户自己实现\n\n```go\n\nfunc NewColorConsole() Logger {\n\tcw := \u0026consoleWriter{\n\t\tlg:       newLogWriter(NewAnsiColorWriter(os.Stdout)),\n\t\tLevel:    LevelDebug,\n\t\tColorful: true,\n\t}\n\treturn cw\n}\n\nfunc init() {\n\tRegister(AdapterConsole, NewColorConsole)\n}\n```\n\n由于我对go还不是很熟悉，因此暂时就先这样直接修改代码先用着了\n\n","cover":"","link":"beego-in-the-windows-output-with-the-color-of-the-log.html","preview":"","title":"beego 在Windows下输出带有颜色的日志"},{"content":"\n\n首次听到RabbitMQ这个东西是一个同事要使用这玩意儿来做java后端中的异步消息通讯，当时他说这是一个基本不会丢消息的消息队列，我就想，哪有这么牛，这年头什么是丢不了的呢。\n\n但其实也没有多厉害，这个队列可以把消息持久化，也就是说，消息不仅仅存储在内存中，通过一个选项durable，可以让消息同时存储在服务器硬盘中，这样即使服务器宕机了，重启后依然可以将队列中未被消费的消息提取出来继续工作。硬盘挂了不久啥也没了么，呵呵。\n\n### Connection：\n连接，每个客户端可以建立一个连接，也许可以多个，一般默认是使用AMQP协议进行通讯\n\n### Exchange\n交换区，相当于消息集中营，就像论坛中大的版块，RabbitMQ中可以允许建立多个这样的版块，而每个版块都可以有自己的属性，例如,topic|direct。 同样的，版块可以设置各种属性，例如客户端断开连接后自动清除以及消息的有效时间等\n\n### Queue\n队列，这个相当于论坛中的用户，每个用户都在排队等待某些消息，当然也可以多个用户同时排在一个队列中，但是这的队列并不是顺序队列，也就是说队列中的身份是对等的，而不是按顺序。\n\n### Routing Key\n这个相当于论坛的帖子，比如我关注了某个帖子，那么这个帖子中发出的新的回复，每个关注这个帖子的所有用户都可以看到这些回复，正如上面说的，每个人都可以对楼层进行回复，而不是排队进行回复，这里的回复就是消息的消费了。当然，如果有个用户回复说，后面来的就不要回复了，那么这个楼层在某种意义上就没必要回复了。这个相当于用户发送了ack，即消息确认。而如果有个用户正在进行回复，那么此时他相对来说较忙了，那么其他人就可以得到优先回复楼层的特权了，也就是消息平均分配给了其他消费者\n\n","cover":"","link":"personal-understanding-of-nouns-in-rabbitmq.html","preview":"","title":"RabbitMQ 中名词的个人理解"},{"content":"\n\n这将是一个历史性的时刻。。。。哈哈， 虽然今天是愚人节，但不是开玩笑\n首先讲讲我遇到的问题\n\n本来我在局域网有一台服务器 192.168.1.205, 该服务器主要用于文件的共享, 平时的时候一般都可以使用`\\\\192.168.1.205`访问这台机子上的共享内容。突然有一天，我无法使用这种方式访问了，提示：windows找不到 “\\\\192.168.1.205” 请检查路径是否正确，当时由于旁边还有`别的机子`，所以就先想办法解决了眼前的事情。但是无法访问必然带来很多的不便，于是我想要想办法解决这个问题。\n\n后来我发现，可以先进入`网络`找到那台机子之后以双击的形式访问共享，这让我看到了希望。于是我尝试使用机器名来访问，但是结果非常让我失望☹\n\n这种情况持续了很久，直到后来，各种其他问题导致我渐渐对这个系统产生了抛弃的情绪，于是打算要重装系统了，正巧最近有Server 2016的发布，于是就打算换这个。然后这天晚上，不知怎么的，突然想起来要整理一下现在的桌面。然后，无聊着就又去搜了下那个情况了。\n\n我本来已经不抱什么希望了，因为我已经基本上尝试了所有和共享有关的设置，没有什么是网上的帖子没有提到的了\n\n。。\n\n但是，哈哈哈 祭上链接了\n\n\u003e https://answers.microsoft.com/zh-hans/windows/forum/windows_7-networking/windows/18b23bc0-642e-444b-bd9e-b1727f2435c0\n\n\n在这个问答第一页的最后一个回答，一位叫 kingofhill 的网友的回答，以下摘抄他回答作为备忘\n```\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\\{F02C1A0D-BE21-4350-88B0-7367FC96EF3C}]\n@=\"Computers and Devices\"\n```\n抱着试试的态度，我打开注册表编辑器，导航到了这个`NameSpace`，惊喜地发现，真的没有这个项，于是加入这个项。 \n\n当然，这里还需要重启一下资源管理器，居然神奇的恢复正常了\n\n\n","cover":"","link":"win10-could-not-access-the-local-area-network-share-prompt-windows-could-not-find-1921681205.html","preview":"","title":"Win10 无法访问局域网共享 提示 windows找不到 “\\192.168.1.205”"},{"content":"\n\n## 跨域\n跨域, 对于个人目前的接触的项目来说, 我知道的出现最多的就是使用`rxjs`访问后端API时发生. 跨域发生时, 如果没有了解过, 那么很可能回去`rxjs`那边去找问题, 因为毕竟是这货报出的错嘛. \n\n跨域的请求流程, 首先`rxjs`内部向服务器端发出`OPTIONS`类型的请求, 如果服务器端没有响应, 那么就会出现跨域了.\n而 `OPTIONS` 请求的结果就是返回一个带有`Access-Control-Allow-Origin`头的Response, `rxjs`得知这个头之后就允许了后续的跨域访问. \n\nbeego的跨域访问支持其实在官方的仓库里以插件形式存在的\n\n\u003e https://github.com/astaxie/beego/blob/master/plugins/cors/cors.go\n\n\n只要在`beego.Run()` 之前加入\n```go\n\tbeego.InsertFilter(\"*\", beego.BeforeRouter, cors.Allow(\u0026cors.Options{\n\t\tAllowAllOrigins: true,\n\t\tAllowMethods:    []string{\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"},\n\t\tAllowHeaders:    []string{\"Origin\", \"Authorization\", \"Access-Control-Allow-Origin\", \"Content-Type\"},\n\t\tExposeHeaders:   []string{\"Content-Length\", \"Access-Control-Allow-Origin\"},\n\t}))\n```\n\n即可\n\n","cover":"","link":"beego-cross-domain-access-support.html","preview":"","title":"beego 加入跨域访问支持"},{"content":"\n\n```bash\ngit clone https://github.com/Neilpang/acme.sh.git\ncd ./acme.sh\n./acme.sh --install\n```\n重新连接ssh\n\n```bash\nacme.sh --issue -d llinx.me -w /var/www\n```\n```bash\nacme.sh --installcert -d llinx.me \\\n               --keypath       /etc/ssl/private/llinx.me.key  \\\n               --fullchainpath /etc/ssl/certs/llinx.me.pem \\\n               --reloadcmd     \"service nginx force-reload\"\n```\n```bash\nopenssl dhparam -out /etc/ssl/certs/dhparam.pem 2048\n```\n```nginx\nssl_certificate /etc/ssl/certs/llinx.me.pem;\nssl_certificate_key /etc/ssl/private/llinx.me.key;\nssl_dhparam /etc/ssl/certs/dhparam.pem;\n```\n```bash\nservice nginx restart\n```\n\n","cover":"","link":"automatic-issuance-and-renewal-of-acmesh-using-ssl.html","preview":"","title":"使用acme.sh自动签发和续期ssl"},{"content":"\n\n经过多年安装系统的经验积累，目前已经排除以下方式进行系统安装：\n\n- PE解开install.wim\n- 光驱安装\n- GHOST\n\n首先，第一种并非不好，而是有时候会出问题，例如，整半天装完后发现在系统准备阶段提示没有XXX，其实是驱动问题，而且是USB驱动，那个时候是崩溃的啊。第二种，毕竟现在电脑有光驱的不多，台式机基本不会带这玩意儿，而笔记本的光驱除非你的电脑比较新，否则用久了，光驱有时候会读不出来，而且还要刻录一个光盘，虽然在以前来看是非常炫酷的事情，不过现在么，你装个系统还要随时带着光盘吗。第三种，这种方式下的系统没有 **一个** 是好系统。\n\n目前都采用刻录U盘的方式。不过最近发现想要直接刻录完就安装，还真有点难，主要是现在的电脑很多都是UEFI的BIOS，那么必须要切换到Legacy模式下即传统BIOS下，而且UEFI的速度也是不能忽视的。\n\n而如果硬盘分区是GPT， 那就麻烦了，普通的启动U盘，到了选择分区的时候会提示无法安装，就因为是GPT分区。Win8以上的系统会相对方便很多。但是有时还是需要安装Win7的。\n\n其实很简单， 只需要对刻录好的U盘，做点小动作即可。首先下载 `efi shell x64` 解压到U盘根目录。然后压缩软件打开 `sources\\install.wim\\4\\Windows\\Boot\\EFI\\`找到`bootmgfw.efi`也解压到根目录即可。然后BIOS选择\n`Launch EFI Shell from filesystem device`即可进入EFI SHELL，会列出所有设备，随后如果只插了一个U盘，那么 `fs0:`准没错，不然还可以一个个试。然后输入`bootmgfw.efi`就可以进入安装界面了\n\n","cover":"","link":"gpt分区格式u盘安装win7.html","preview":"","title":"GPT分区格式U盘安装Win7"},{"content":"\n\n```pascal\nTStringListHelper = class Helper for TStringList\n  function Contains(value:string):Boolean;\nend;\n\n\nfunction TStringListHelper.Contains(value: string): Boolean;\nvar\n  index: Integer;\nbegin\n  if self.Find(str, index) then\n    Exit(True)\n  else\n    Exit(False);\nend;\n```\n\n简直和C#的扩展方法一毛一样, 写完放那就可以不用管了\n","cover":"","link":"helper-of-delphi.html","preview":"","title":"Helper of Delphi "},{"content":"\n\nI had already added `obj/Debug` to  `.gitignore`,\nhowever, files in this path are still in file list that to be committed\n\nIf you want to ignore `obj/Debug` dir, which should be confirmed first is `obj/Debug` is not already under version control.\nSo.\n```git\ngit rm -r --cached obj/Debug \n```\n","cover":"","link":"gitwhat-to-when-nothing-is-do-ignored.html","preview":"","title":"[git].gitignore cannot ignore the specific dir or file"},{"content":"\n\nNormally, we use AutoMapper to Map object like this:\n```c#\nMapper.Initialize(\n       (cfg) =\u003e\n        {\n            cfg.CreateMap\u003cTSource, TTarget\u003e();\n        }\n    );\ntarget = Mapper.Map\u003cTTarget\u003e(source);\n```\n\nhowever, this will create a new instanse of `TTarget`, then the reference of `target` would be changed. The original object of target will not change in this case. The solution is as follows:\n```c#\nMapper.Map(source, target);\n```\n","cover":"","link":"csharp-automapper-property-values-creating-a-new-update-without-obxject.html","preview":"","title":"csharp AutoMapper: Update property values without creating a new object"},{"content":"\n\n```pascal\n    if dbgehMainDBTableView1.DataController.DataSet.Fields[i].DataType = ftFloat then\n    begin\n      cxGridDBTableSummaryItem := dbgehMainDBTableView1.DataController.Summary.FooterSummaryItems.Add as TcxGridDBTableSummaryItem;\n      cxGridDBTableSummaryItem.Column := dbgehMainDBTableView1.columns[i];\n      cxGridDBTableSummaryItem.FieldName := dbgehMainDBTableView1.DataController.DataSet.Fields[i].DisplayName;\n      cxGridDBTableSummaryItem.Kind := skSum;\n    end;\n```\n","cover":"","link":"cxgird-adding-footer-dynamically.html","preview":"","title":"cxGird adding footer dynamically"},{"content":"\n\n```pascal\nprocedure Print();\nvar\n  AscFields, DescFields, S: string;\n  IndexPrint: string;\n  I: integer;\n  Index: integer;\n  cds: TClientDataSet;\nbegin\n  S := '';\n  AscFields := '';\n  DescFields := '';\n  IndexPrint := 'GoodsSaleReportIndex';\n\n  if (cxgrdbtvGoodsSaleReport.DataController.DataSource.DataSet is TClientDataSet) then\n  begin\n    Cds := cxgrdbtvGoodsSaleReport.DataController.DataSource.DataSet as TClientDataSet;\n    for I := 0 to cxgrdbtvGoodsSaleReport.SortedItemCount - 1 do\n    begin\n      Index := cxgrdbtvGoodsSaleReport.SortedItems[I].Index;\n      S := cxgrdbtvGoodsSaleReport.Columns[Index].DataBinding.Field.FieldName + ';';\n      AscFields := AscFields + S;\n      if cxgrdbtvGoodsSaleReport.SortedItems[I].SortOrder = soDescending then\n        DescFields := DescFields + S ;\n    end;\n\n    cds.IndexDefs.Update;\n    if cds.IndexDefs.IndexOf(IndexPrint) \u003e= 0 then\n    begin\n      cds.DeleteIndex(IndexPrint);\n    end;\n    cds.AddIndex(IndexPrint, AscFields, [], DescFields);\n    cds.IndexName := IndexPrint;\n  end;\n  self.PrintReport(); \nend;\n```\n","cover":"","link":"print-cxgrid-sorted-data.html","preview":"","title":"Print cxgrid sorted data"},{"content":"\n\nGEXPERT 右键 `Replace Component`\nEh控件会残留 `RowDetailData:TRowDetailPanelControlEh`\n记得清理\n\n动态创建列\n------------------------------------------------\n```delphi\nself.FillDataSet();\n//kirile 2015-08-20 动态创建列\n  dbgehMainDBTableView1.ClearItems;\n  for i := 0 to Self.dbgehMainDBTableView1.DataController.DataSet.FieldCount - 1 do\n  begin\n    Self.dbgehMainDBTableView1.CreateColumn;\n    Self.dbgehMainDBTableView1.columns[i].DataBinding.FieldName := Self.dbgehMainDBTableView1.DataController.DataSet.Fields[i].DisplayName;\n    Self.dbgehMainDBTableView1.Columns[i].Caption := Self.dbgehMainDBTableView1.DataController.DataSet.Fields[i].DisplayName;\n    Self.dbgehMainDBTableView1.Columns[i].Width := 160;\n  end;\n```\n\nEh 关键字\n-----------------------------------------------------\n```pascal\nDBGridEhGrouping, \nToolCtrlsEh,\nDBGridEhToolCtrls, \nDynVarsEh, \nDBGridEh, \nPropFilerEh, \nPropStorageEh, \nPrnDbgeh,\nDBCtrlsEh, \nDBLookupEh, \nEhLibVCL, \nGridsEh,\nDBAxisGridsEh, \nDBVertGridsEh,\nTRowDetailPanelControlEh,\nTDBVertGridEh,\nTDBGridEh,\nTDBLookupComboboxEh,\nTDBCheckBoxEh,\nTPrintDBGridEh,\nTPropStorageEh,\nTIniPropStorageManEh;\n```\n---------------------------------------------------------------------------------\n执行语句\n-------\n```pascal\nwith FDQuery do begin\n  Command.CommandText.Text := 'Update T_CABINET set F_State = :F_State where F_ID = :F_ID';\n  ParamByName('F_State').Value := aState;\n  ParamByName('F_ID').Value := aID;\n  try\n    try\n      ExecSQL;\n      result := true;\n    except\n      on E: EFDDBEngineException do begin\n      oMessage := '更新状态失败,请检查！' ;\n      result:=False;\n      end;\n    end;\n  except\n    on E: Exception do\n    begin\n      oMessage := E.Message;\n    end;\n  end;\nend;\n```\n删除记录\n---\n```pascal\n  with myMainDM.sdsDelete do\n  begin\n    Connection := myConnection;\n    Command.CommandText.Text := 'Delete From T_STORAGE Where F_AutoID = :F_AutoID';\n    ParamByName('F_AutoID').AsInteger := aAutoID;\n    ExecSQL ;\n    try\n      if RowsAffected \u003c=0 then\n        oMessage := '您选择的记录已不存在，请检查！'\n      else\n        result := true;\n    except\n      on E: Exception do\n      begin\n        oMessage := E.Message;\n      end;\n    end;\n    myMainDM.sdsDelete.Close();\n  end;\n```\n日期时间  替换为 `cxDateEdit` 设置 `properties`-\u003e `Kind`\n `DBLOOKUPComboboxEh` -\u003e  `cxLookupCombobox`\n","cover":"","link":"rxlibeh-control-replacement-process.html","preview":"","title":"RxlibEh控件替换流程"},{"content":"\n\n```pascal\nprocedure CreateMultiBands(GridView:TcxGridDBBandedTableView;cds:TClientDataSet);\nvar\n  band,band1:TcxGridBand;\n  col:TcxGridDBBandedColumn;\n  fieldCount:Integer;\n  i,j,k:Integer;\n  Lines:TStringList;\n  bandCaption:string;\n  bands:TDictionary\u003cstring,TcxGridBand\u003e ;\nbegin\n  bands := TDictionary\u003cstring, TcxGridBand\u003e.Create;\n  fieldCount := cds.Fields.Count;\n  GridView.BeginUpdate(lsimPending);\n  for i := 0 to fieldCount - 1 do\n  begin      //第一层表头绘制\n    Lines := TStringList.Create;\n    ExtractStrings(['|'], [], PChar(cds.Fields[i].FieldName), Lines); //对一个字段进行分割处理\n    bandCaption := '';\n    if not bands.ContainsKey(Lines[0] + '|') then   //如果第一行重复不添加\n    begin\n      band := GridView.Bands.Add;\n      band.Caption := Lines[0];\n      bandCaption := Lines[0] + '|';\n      if Lines.Count = 1 then\n      begin\n        col := GridView.CreateColumn;\n        col.Position.BandIndex := band.Index;\n        col.DataBinding.FieldName := cds.Fields[i].FieldName;\n      end;\n      bands.Add(bandCaption, band);\n    end;\n    FreeAndNil(Lines);\n  end;\n  for i := 0 to fieldCount - 1 do\n  begin\n    Lines := TStringList.Create;\n    ExtractStrings(['|'], [], PChar(cds.Fields[i].FieldName), Lines);\n    for j := 1 to Lines.Count - 1 do\n    begin\n      band := GridView.Bands.Add;\n      band.Caption := Lines[j];\n      bandCaption := '';\n      for k := 0 to j - 1 do\n      begin\n        bandCaption := bandCaption + Lines[k] + '|';\n      end;\n      if bands.TryGetValue(bandCaption, band1) then\n      begin\n        band.Position.BandIndex := band1.Position.Band.Index;\n      end;\n      bandCaption := '';\n      for k := 0 to j do\n      begin\n        bandCaption := bandCaption + Lines[k] + '|';\n      end;\n      if Lines.Count - 1 = j then\n      begin\n        col := GridView.CreateColumn;\n        col.Position.BandIndex := band.Index;\n        col.DataBinding.FieldName := cds.Fields[i].FieldName;\n        ;\n      end;\n      bands.Add(bandCaption, band);\n    end;\n    FreeAndNil(Lines);\n  end;\n  GridView.EndUpdate;\nend;\n```\n","cover":"","link":"cxgrid-create-multilevel-title.html","preview":"","title":"cxgrid create multilevel title"},{"content":"\n\n防止添加重复数据  \n```pascal\nFDMemTable2.First;\n  while  not FDMemTable2.Eof do\n  begin\n    if not FDMemTable1.Locate('F_AUTOID',FDMemTable2.FieldByName('F_AUTOID').AsString,[] ) then\n       FDMemTable1.CopyRecord(FDMemTable2);\n    FDMemTable2.Next;\n  end;\n```\n完全转移数据\n```pascal\nFDMEMTABLE.AppendData(FDMEMTABLE.DATA);\n```\n","cover":"","link":"fdmemtable-data-copy.html","preview":"","title":"FDMemTable data copy"},{"content":"\n\n摘自网络\n```pascal\nprocedure EnumFileInQueue(path: PChar; fileExt: string; fileList: TStringList);\nvar\n   searchRec: TSearchRec;\n   found: Integer;\n   tmpStr: string;\n   curDir: string;\n   dirs: TQueue;\n   pszDir: PChar;\nbegin\n   dirs := TQueue.Create; //创建目录队列\n   dirs.Push(path); //将起始搜索路径入队\n   pszDir := dirs.Pop;\n   curDir := StrPas(pszDir); //出队\n   {开始遍历,直至队列为空(即没有目录需要遍历)}\n   while (True) do\n   begin\n      //加上搜索后缀,得到类似'c:/*.*' 、'c:/windows/*.*'的搜索路径\n      tmpStr := curDir + '/*.*';\n      //在当前目录查找第一个文件、子目录\n      found := FindFirst(tmpStr, faAnyFile, searchRec);\n      while found = 0 do //找到了一个文件或目录后\n      begin\n          //如果找到的是个目录\n         if (searchRec.Attr and faDirectory) \u003c\u003e 0 then\n         begin\n          {在搜索非根目录(C:/、D:/)下的子目录时会出现'.','..'的\"虚拟目录\"\n          大概是表示上层目录和下层目录吧。。。要过滤掉才可以}\n            if (searchRec.Name \u003c\u003e '.') and (searchRec.Name \u003c\u003e '..') then\n            begin\n               {由于查找到的子目录只有个目录名，所以要添上上层目录的路径\n                searchRec.Name = 'Windows';\n                tmpStr:='c:/Windows';\n                加个断点就一清二楚了\n               }\n               tmpStr := curDir + '/' + searchRec.Name;\n               {将搜索到的目录入队。让它先晾着。\n                因为TQueue里面的数据只能是指针,所以要把string转换为PChar\n                同时使用StrNew函数重新申请一个空间存入数据，否则会使已经进\n                入队列的指针指向不存在或不正确的数据(tmpStr是局部变量)。}\n               dirs.Push(StrNew(PChar(tmpStr)));\n            end;\n         end\n         else //如果找到的是个文件\n         begin\n             {Result记录着搜索到的文件数。可是我是用CreateThread创建线程\n              来调用函数的，不知道怎么得到这个返回值。。。我不想用全局变量}\n            //把找到的文件加到Memo控件\n            if fileExt = '.*' then\n               fileList.Add(curDir + '/' + searchRec.Name)\n            else\n            begin\n               if SameText(RightStr(curDir + '/' + searchRec.Name, Length(fileExt)), fileExt) then\n                  fileList.Add(curDir + '/' + searchRec.Name);\n            end;\n         end;\n          //查找下一个文件或目录\n         found := FindNext(searchRec);\n      end;\n      {当前目录找到后，如果队列中没有数据，则表示全部找到了；\n        否则就是还有子目录未查找，取一个出来继续查找。}\n      if dirs.Count \u003e 0 then\n      begin\n         pszDir := dirs.Pop;\n         curDir := StrPas(pszDir);\n         StrDispose(pszDir);\n      end\n      else\n         break;\n   end;\n   //释放资源\n   dirs.Free;\n   FindClose(searchRec);\nend;\nprocedure TForm1.Button1Click(Sender: TObject);\nvar\n   dir: string;\n   FileNameList: TStringList;\nbegin\n   dir := trim('H:\\Single\\Client\\Capture');\n   FileNameList := TStringList.Create;\n   //EnumFileInQueue(PChar(dir), '.*', FileNameList);\n   EnumFileInQueue(PChar(dir), '.jpg', FileNameList);\n   Memo1.Lines.Assign(FileNameList );\n   FileNameList.Free;\nend;\n```\n","cover":"","link":"delphi-enumeration-directory-file-method.html","preview":"","title":"Delphi EnumFileInQueue Method"},{"content":"\n\n## 标识符大小写命名\n### 定义\n本文使用以下简称\n`Pascal`: Delphi的命名方式, 所有单词均为首字母大写, 其它字母小写, 不使用下划线,但可以使用点\n`Camel`: 驼峰命名法 首个单词首字母小写, 其它单词遵循`Pascal`规则\n\n|标识符|大小写|备注|\n|-----|------|----|\n|命名空间|Pascal||\n|类|Pascal||\n|接口|Pascal|以 \"I\" 开头|\n|方法/函数|Pascal||\n|属性|Camel||\n|事件|Pascal||\n|私有字段|Camel|以 \"_\" 开头|\n|非私有字段|Camel||\n|枚举|Pascal||\n|参数|Camel||\n|局部变量|Camel||\n|泛型类型|Pascal|以 \"T\" 开头|\n|集合类型|Pascal|以 \"s\" 结尾表示为复数|\n\n## 目录布局\n### 解决方案下的布局\n注意: 目录应该是实际存在的目录, 即先实际建立目录再到VS里添加或者创建相关项目, 如果直接在VS里创建目录那么这个创建的目录是虚的.所有目录名可以加上项目的名称, 中间以点分隔. 另外特别注意 ####不要使用奇怪的文件夹, 例如`Methods Function` ####\n\n`Infrastructure`: 基础设施, 存放多个模块公用的类库, 例如 `Common`类库就存放在这个目录下, \n`Doc`: 存放相关文档\n`Modules`: 存放各个子模块\n`ThirdParties`: 存放第三方类库, 例如自己修改过或实现了新特性的类库, 还有一些不在Nuget上存放的包, 以及一些其它人写的通用的类库, 该目录下的类库应该全部托管到git的仓库, 然后以子模块的形式加载到解决方案中\n\n`README.md`: 写一些项目总体的描述和一些开发环境设置的教程\n\n### 模块下目录布局\n`Services`: 服务, 存放所有用到的服务类, 包括发起HTTP请求的类, 封装的函数也可以放在这里\n`ViewModels`: 视图模型类, 目前暂时把 模块主视图`ModuleViewModel`和其它显示视图模型`ClassViewModel`都放在这里, 其实也可以把这两个分开,但因为一般一个模块只有一个主视图, 就懒得分开了\n`Models`: 模型, 基础的模型, 在REST应用中, 这里存放和后台DTO对应的Model, 当然如果这个Model在多个模块中使用, 那么应该独立出来放到单独的一个 Api 类库下的Model文件夹中, 并以Model的作用以文件夹进行归类\n`Views`: 视图, 嗯, 所有界面相关的都扔这里吧\n`Constants`: 放一些常量\n`Helpers`: 辅助类, 例如 `ValidationRule` 这种\n`Extensions`: 扩展类, 一般也就放点扩展方法吧\n`Enums`: 枚举类放在这个里面\n`Converters`: WPF绑定用的转换器\n`Selectors`: 模板选择器\n`Resources`: 图像/静态资源\n`Events`: Prism使用的事件消息\n\n\n","cover":"","link":"current-wpf-identifier-naming-conventions.html","preview":"","title":"目前使用的WPF代码规范"},{"content":"\n\n# SQL Server参数嗅探\n\n没想到我也会有接触到数据库这么深的地方哈哈。\n\n起因是，公司软件的报表打开很慢，查一个月的营业综合报表数据，居然花了10几分钟，简直恶心。然后我拿到数据库之后下断点调试，经过几分钟的折腾后终于定位到了一个表值函数上。\n\n然后为了让结果快点出来，将时间间隔设置为5天，竟然需要一分钟才出结果，然后我尝试将这个函数里面的代码拷贝出来，给参数直接赋值然后执行，天啊 3秒，见鬼了，尝试了几次之后终于确定这个问题很诡异。于是就各种搜“为什么同样的sql语句直接执行和放到存储过程中的效率完全不一样”，百度是肯定没有的了，那么笨的家伙。。。。\n于是stackoverflow，在一个票数很高的问题里，\n\n\u003e http://stackoverflow.com/questions/440944/sql-server-query-fast-but-slow-from-procedure\n\n发现了这么个名词\n###and prevent parameter sniffing###\n然后百度一下，就出来了参数嗅探\n\n\u003e http://www.cnblogs.com/lyhabc/articles/3222179.html\n\n具体是怎么样的原理，我看了一下午也没看出个所以然，不过了解了个大概。\n意思就是，`sql server`对于一个语句会有编译然后生成执行计划这么一个过程。\n\n我们一般执行一句sql语句的时候，其实是先编译然后生成执行计划，最后根据执行计划去执行。\n那么一个执行过程的效率如何关键就在这个执行计划。如果对于同样的代码，放到`procedure`和直接执行，它们生成的执行计划是不同的。\n\n为什么呢，问题就在`procedure`在`sql server`里会经过优化，它的执行计划不会每次都重新生成，同理也不会每次调用都重新编译\n那么如果\n```sql\nEXEC sp_recompile N'PROCEDURENAME'\n```\n在一个过程前调用前执行这么一句，就可以保证它生成的执行计划是准确的。\n\n而如果没有进行重新编译，`sql server`就可能使用一个烂的执行计划去干活了，自然就慢了。\n\n下面摘几种方式来处理参数嗅探\n\n|方法|是否修改存储过程|是否每次运行都要重编译|执行计划准确度|\n|---|--------------|-------------------|------------|\n|用exec()方式运行动态SQL|需要|会|很准确|\n|使用本地变量local variable|需要|不会|一般|\n|query hint+\"recompile\" |需要|会|很准确|\n|query  hint指定join运算 |需要|不会|很一般|\n|query hint optimize for|需要|不会|比较准确|\n|Plan Guide|不需要|不会|比较准确|\n\n","cover":"","link":"sql server参数嗅探.html","preview":"","title":"SQL Server参数嗅探"},{"content":"\n\n```c#\n    public class SaturnJsonSerializer : ISerializer\n    {\n        private readonly JsonSerializer _serializer;\n\n        public SaturnJsonSerializer()\n        {\n            ContentType = \"application/json\";\n            _serializer = new JsonSerializer\n            {\n                MissingMemberHandling = MissingMemberHandling.Ignore,\n                NullValueHandling = NullValueHandling.Include,\n                DefaultValueHandling = DefaultValueHandling.Include\n            };\n        }\n\n        public SaturnJsonSerializer(JsonSerializer serializer)\n        {\n            ContentType = \"application/json\";\n            _serializer = serializer;\n        }\n\n        public string Serialize(object obj)\n        {\n            using (var stringWriter = new StringWriter())\n            {\n                using (var jsonTextWriter = new JsonTextWriter(stringWriter))\n                {\n                    jsonTextWriter.Formatting = Formatting.Indented;\n                    jsonTextWriter.QuoteChar = '\"';\n\n                    _serializer.Serialize(jsonTextWriter, obj);\n\n                    var result = stringWriter.ToString();\n                    return result;\n                }\n            }\n        }\n\n        public string DateFormat { get; set; }\n\n        public string RootElement { get; set; }\n\n        public string Namespace { get; set; }\n\n        public string ContentType { get; set; }\n    }\n```\n```c#\npublic class SaturnRequest : RestRequest\n    {\n        #region Constructors\n        public SaturnRequest()\n        {\n            IntializeJsonSerializer();\n        }\n\n        public SaturnRequest(Method method) : base(method)\n        {\n            IntializeJsonSerializer();\n        }\n\n        public SaturnRequest(string resource) : base(resource)\n        {\n            IntializeJsonSerializer();\n        }\n\n        public SaturnRequest(string resource, Method method) : base(resource, method)\n        {\n            IntializeJsonSerializer();\n        }\n\n        public SaturnRequest(Uri resource) : base(resource)\n        {\n            IntializeJsonSerializer();\n        }\n\n        public SaturnRequest(Uri resource, Method method) : base(resource, method)\n        {\n            IntializeJsonSerializer();\n        }\n\n        #endregion\n\n        #region Methods\n        protected void IntializeJsonSerializer()\n        {\n            JsonSerializer = new SaturnJsonSerializer();\n        }\n        #endregion\n    }\n```\n##usage\n\n```c#\nvar request = new SaturnRequest(\"/api\",Method.POST);\nrequest.AddJsonBody(obj);\n```\n\n","cover":"","link":"restsharp-use-newtonsoftjson-to-serialize.html","preview":"","title":"RestSharp use Newtonsoft.JSON to serialize object and deserialize json"},{"content":"\n\nFirst you need a `BooleanToVisibilityConverter` to Converter `bool` to `Visibility`\n\nMaterialDesignThemes has already owned one\n\nadd follow code to your xaml file\n```xml\nxmlns:converters=\"clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf\"\n```\n```xml\n\u003cconverters:BooleanToVisibilityConverter x:Key=\"booleanToVisibilityConverter\" /\u003e\n```\n\nrefer to \n\n\u003e http://stackoverflow.com/questions/22073740/binding-visibility-for-datagridcolumn-in-wpf\n\n`DataGridTextColumn` or any other supported dataGrid columns doesn't lie in Visual tree of `DataGrid`, so the solution is:\n\nwe add \n```xml\n\u003cFrameworkElement x:Name=\"dummyElement\" Visibility=\"Collapsed\" /\u003e\n```\nto `UserControl` under `Grid`\n\njust like this\n\n```xml\n    \u003cGrid\u003e\n        \u003cFrameworkElement x:Name=\"dummyElement\" Visibility=\"Collapsed\" /\u003e\n.....\n.....\n\u003c/Grid\u003e\n```\n\nthen use it \n```xml\n\u003cDataGridTemplateColumn Width=\"Auto\"                                                  Header=\"MyColumn\"                                                 Visibility=\"{Binding DataContext.isVisible,                                                                   Converter={StaticResource booleanToVisibilityConverter},                                                                      Source={x:Reference dummyElement}}\"\u003e\n\n```\n\ndone\n","cover":"","link":"binding-visibility-datagridcolumn-in-for-wpf.html","preview":"","title":"Binding Visibility for DataGridColumn in WPF"},{"content":"\n\n```c#\nusing RestSharp.Extensions.MonoHttp;\n\n    public static class ExQueryString\n    {\n        public static string GetQueryString(this object obj)\n        {\n            var properties = from p in obj.GetType().GetProperties()\n                             where p.GetValue(obj, null) != null\n                             select p.Name + \"=\" + HttpUtility.UrlEncode(p.GetValue(obj, null).ToString());\n\n            return string.Join(\"\u0026\", properties.ToArray());\n        }\n    }\n```\n","cover":"","link":"csharp-restsharp-query-string-maker.html","preview":"","title":"csharp RestSharp query string maker "},{"content":"\n\n```c#\nusing Newtonsoft.Json;\n\npublic static class ObjectCopier\n    {\n        /// \u003csummary\u003e\n        /// Perform a deep Copy of the object, using Json as a serialisation method. NOTE: Private members are not cloned using this method.\n        /// \u003c/summary\u003e\n        /// \u003ctypeparam name=\"T\"\u003eThe type of object being copied.\u003c/typeparam\u003e\n        /// \u003cparam name=\"source\"\u003eThe object instance to copy.\u003c/param\u003e\n        /// \u003creturns\u003eThe copied object.\u003c/returns\u003e\n        public static T Clone\u003cT\u003e(this T source)\n        {\n            // Don't serialize a null object, simply return the default for that object\n            if (ReferenceEquals(source, null))\n            {\n                return default(T);\n            }\n\n            // initialize inner objects individually\n            // for example in default constructor some list property initialized with some values,\n            // but in 'source' these items are cleaned -\n            // without ObjectCreationHandling.Replace default constructor values will be added to result\n            var deserializeSettings = new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace };\n\n            return JsonConvert.DeserializeObject\u003cT\u003e(JsonConvert.SerializeObject(source), deserializeSettings);\n        }\n    }\n```\nwith this extension, just use\n```c#\nvar newObj = oldObj.Clone();\n```\nto clone one new object\n\n","cover":"","link":"deep-copy-obxject-csharp.html","preview":"","title":"csharp Deep Copy Object"},{"content":"\n\nforgive my poor english\nfor example: \nA java enum like\n```java\npublic enum SomeTypeEnum {\n    A(0),B(1),C(2);\n\n    private int value;\n    SomeTypeEnum(int value){\n      this.value = value;\n    }\n    public int getValue(){\n      return value;\n    }\n}\n```\nmay be map to \n```json\n{\"someType\":\"A\"}\n```\n\nthen it can only be deserialized to string Type\n\nhowever when we do this\n```c#\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Converters;\n\npublic enum SomeType\n{\n   A=0,B=1,C=2\n}\npublic class SomeTypeTest\n{\n    [JsonConverter(typeof(StringEnumConverter))]\n    public SomeType someType {get;set;}\n}\n```\n\nit's OK whatever do deserializing or serializing, nothing else should be care, just do it!!\n\n\n\n","cover":"","link":"newtonsoft.json using stringenumconverter to make it compatiable with enum type.html","preview":"","title":"Newtonsoft.Json using StringEnumConverter to make it compatiable with enum type"},{"content":"\n\n```c#\npublic class StringBoolConverter : JsonConverter\n    {\n        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)\n        {\n            writer.WriteValue(((bool)value) ? \"TRUE\" : \"FALSE\");\n        }\n\n        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\n        {\n            return reader.Value.ToString() == \"TRUE\";\n        }\n\n        public override bool CanConvert(Type objectType)\n        {\n            return objectType == typeof(bool);\n        }\n    }\n```\n### Usage\n\n```c#\nusing Newtonsoft.Json;\n\npublic class Test\n{\n    [JsonConverter(typeof(StringBoolConverter))]\n    public bool A {get;set;}\n}\n\nvar test = new Test(){A=true};\nJsonConvert.SerializeObject(test);\n=\u003e\u003e  {\"A\":\"TRUE\"}\n\n//this can be supported default\nJsonConvert.DeserializeObject(\n         @\"{\"\"A\"\":\"\"TRUE\"\"}\"\n        );\n```\n\n\n\n","cover":"","link":"stringboolconverter-convert-string-to-bool.html","preview":"","title":"StringBoolConverter Convert string to bool"},{"content":"\n\n## 准备工作\n\n\u003e 链接: http://pan.baidu.com/s/1c2f0m1U 密码: xtg3\n\n\n\n1. 首先刷入以下的固件\n\n\u003e openwrt-15.05.1-ar71xx-nand-wndr4300-ubi-factory.img\n\u003e openwrt-15.05.1-ar71xx-nand-wndr4300-squashfs-sysupgrade.tar\n\n固件刷入方式， 第一个使用tftp刷入\n#### A\n\n- 用牙签插入WNDR4300的菊花，断电开机，等黄灯闪烁，松开菊花， 看到所有灯删，再次压住菊花，等到绿灯闪烁即可\n- 插上网线， 设置ip地址为 `192.168.1.2` `255.255.255.0` , 网关无需设置\n- 打开cmd， 执行 `ping 192.168.1.1 -t` ， 放到一边， 确认一直可以ping通即可\n- Windows 7 以上系统直接在 `控制面板\\程序\\程序和功能`-\u003e `启用或关闭Windows功能`-\u003e 勾上`TFTP客户端`\n- 将 `openwrt-15.05.1-ar71xx-nand-wndr4300-ubi-factory.img`放在`D:\\`\n- 打开cmd, `cd D:\\` 回车\n- `D:` 回车\n- 运行 `tftp -i 192.168.1.1 PUT openwrt-15.05.1-ar71xx-nand-wndr4300-ubi-factory.img`\n- 稍等片刻，发现上传完毕，同时路由器在重启，设置ip为自动获取， 等待重新获得ip\n- 获得到ip之后，重启WNDR4300的电源， 否则没有5G无线，其实只是多重启一次\n\n#### B\n第二个直接在已刷好Openwrt的路由器管理界面里刷入， 不详说， 个人更加喜欢第一种， 因为第二种经常出问题\n\n\n## 配置软件源和上传文件\n\n\n运行`hfs.exe`, 将以下文件全部拖到`Virtual File System`处\n\n```\nclient_linux_mips32\nluci-app-kcptun_1.2.0-1_chaos-calmer_all.ipk\nluci-app-shadowsocks_1.3.7-1_all.ipk\nluci-i18n-kcptun-zh-cn_1.2.0-1_all.ipk\nluci-theme-material-fix_0.2.17-1_ar71xx.ipk\nluci-app-vlmcsd_1-1_all.ipk\nVlmcsd-KmsAto_svn977-2016-07-13_ar71xx.ipk\nshadowsocks-libev_2.5.6-1_ar71xx.ipk\n```\n\nssh到Openwrt上，依次使用wget 将这些文件上传到openwrt的目录下\n\n## 安装和配置kcptun\n\n假设服务器上的ss和kcptun都已配置好， 并且可以使用客户端正常链接\n\n```bash\nmkdir /usr/bin/kcptun\nmv client_linux_mips32 /usr/bin/kcptun/client \nchmod +x /usr/bin/kcptun/client\nopkg install luci-app-kcptun_1.2.0-1_chaos-calmer_all.ipk\nopkg install luci-i18n-kcptun-zh-cn_1.2.0-1_all.ipk\n\n```\n访问 `192.168.1.1` ， 然后在`kcptun`的配置列表中修改加入自己的配置， 并`保存`\n勾上启用进程监控，启用定时重启任务\n客户端可执行文件填入 `/usr/bin/kcptun/client`\n`Kcptun 客户端`选择刚才加入的配置， `保存并应用`， 然后可以在PC上用ss连接这个kcptun client试试看是否可以使用\n\n\n## 安装配置 ss\n\n```bash\nopkg install shadowsocks-libev_2.5.6-1_ar71xx.ipk\nopkg install luci-app-shadowsocks_1.3.7-1_all.ipk\n```\n\n同样的， 到ss的服务器管理里添加自己的ss配置， 这里因为要连接到kcptun， 所以是这样的\n\n服务端地址:`127.0.0.1` 服务端端口: `kcptun本地监听端口，我的是7878`\n加密方式:`ss的加密方式` 密码：`ss的密码`\n\n`保存`\n\n`基本设置`-\u003e`透明代理`\n\n主服务器选择刚才添加的配置， 本地端口填写 `1080`， `其他都不开`\n\n\n`访问控制`-\u003e`内网区域`\n勾上 `桥接: \"br-lan\"`, `代理类型`:`正常代理` `代理自身`:`直接连接`\n\n`访问控制`-\u003e`外网区域`\n\n`被忽略IP列表`: `/etc/ignore.list`\n\n这个列表的获取方式为\n```bash\nwget -O- 'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest' | awk -F\\| '/CN\\|ipv4/ { printf(\"%s/%d\\n\", $4, 32-log($5)/log(2)) }' \u003e /etc/ignore.list\n```\n其他暂时先不配置，`保存并应用`\n\n## 配置dnsmasq ipset\n\n我使用的固件已经包括了`dnsmasq-full` 和 `ipset`，因此略过 \n\n```bash\nvi /etc/dnsmasq.conf\n```\n```\nserver=114.114.114.114\nno-resolv\ncache-size=1000\ndhcp-range=192.168.1.50,192.168.1.200,48h\ndhcp-option=3,192.168.1.1\nconf-dir=/etc/dnsmasq.d\n```\n\n```bash\nvi /etc/dnsmasq.d/gfw.conf\n```\n```\n#Google and Youtube\nserver=/.google.com/208.67.222.222#443\nserver=/.google.com.hk/208.67.222.222#443\nserver=/.gstatic.com/208.67.222.222#443\nserver=/.ggpht.com/208.67.222.222#443\nserver=/.googleusercontent.com/208.67.222.222#443\nserver=/.appspot.com/208.67.222.222#443\nserver=/.googlecode.com/208.67.222.222#443\nserver=/.googleapis.com/208.67.222.222#443\nserver=/.gmail.com/208.67.222.222#443\nserver=/.google-analytics.com/208.67.222.222#443\nserver=/.youtube.com/208.67.222.222#443\nserver=/.googlevideo.com/208.67.222.222#443\nserver=/.youtube-nocookie.com/208.67.222.222#443\nserver=/.ytimg.com/208.67.222.222#443\nserver=/.blogspot.com/208.67.222.222#443\nserver=/.blogger.com/208.67.222.222#443\n\n#FaceBook\nserver=/.facebook.com/208.67.222.222#443\nserver=/.thefacebook.com/208.67.222.222#443\nserver=/.facebook.net/208.67.222.222#443\nserver=/.fbcdn.net/208.67.222.222#443\nserver=/.akamaihd.net/208.67.222.222#443\n\n#Twitter\nserver=/.twitter.com/208.67.222.222#443\nserver=/.t.co/208.67.222.222#443\nserver=/.bitly.com/208.67.222.222#443\nserver=/.twimg.com/208.67.222.222#443\nserver=/.tinypic.com/208.67.222.222#443\nserver=/.yfrog.com/208.67.222.222#443\n\n#Dropbox\nserver=/.dropbox.com/208.67.222.222#443\n\n#1024\nserver=/.t66y.com/208.67.222.222#443\n\n#shadowsocks.org\nserver=/.shadowsocks.org/208.67.222.222#443\n\n#btdigg\nserver=/.btdigg.org/208.67.222.222#443\n\n#sf.net\nserver=/.sourceforge.net/208.67.222.222#443\n\n#feedly\nserver=/.feedly.com/208.67.222.222#443\n\n# Here Comes The ipset\n\n#Google and Youtube\nipset=/.google.com/gfw\nipset=/.google.com.hk/gfw\nipset=/.gstatic.com/gfw\nipset=/.ggpht.com/gfw\nipset=/.googleusercontent.com/gfw\nipset=/.appspot.com/gfw\nipset=/.googlecode.com/gfw\nipset=/.googleapis.com/gfw\nipset=/.gmail.com/gfw\nipset=/.google-analytics.com/gfw\nipset=/.youtube.com/gfw\nipset=/.googlevideo.com/gfw\nipset=/.youtube-nocookie.com/gfw\nipset=/.ytimg.com/gfw\nipset=/.blogspot.com/gfw\nipset=/.blogger.com/gfw\n\n#FaceBook\nipset=/.facebook.com/gfw\nipset=/.thefacebook.com/gfw\nipset=/.facebook.net/gfw\nipset=/.fbcdn.net/gfw\nipset=/.akamaihd.net/gfw\n\n#Twitter\nipset=/.twitter.com/gfw\nipset=/.t.co/gfw\nipset=/.bitly.com/gfw\nipset=/.twimg.com/gfw\nipset=/.tinypic.com/gfw\nipset=/.yfrog.com/gfw\n\n#Dropbox\nipset=/.dropbox.com/gfw\n\n#1024\nipset=/.t66y.com/gfw\n\n#shadowsocks.org\nipset=/.shadowsocks.org/gfw\n\n#btdigg\nipset=/.btdigg.org/gfw\n\n#sf.net\nipset=/.sourceforge.net/gfw\n\n#feedly\nipset=/.feedly.com/gfw\n#custom\nserver=/instagram.com/208.67.222.222#443\nipset=/instagram.com/gfw\nserver=/cdninstagram.com/208.67.222.222#443\nipset=/cdninstagram.com/gfw\n```\n```bash\nipset -N gfw iphash\niptables -t nat -A PREROUTING -p tcp -m set --match-set gfw dst -j REDIRECT --to-port 1080\n```\n加入`防火墙自定义规则`\n```\nipset -N gfw iphash\niptables -t nat -A PREROUTING -p tcp -m set --match-set gfw dst -j REDIRECT --to-port 1080\n```\n```bash\n/etc/init.d/firewall restart\n/etc/init.d/dnsmasq restart\n```\n\n## 安装Materialize主题\n```bash\nopkg install luci-theme-material-fix_0.2.17-1_ar71xx.ipk\n```\n\n## 安装KMS服务器\n\n```bash\nopkg install Vlmcsd-KmsAto_svn977-2016-07-13_ar71xx.ipk\nopkg install luci-app-vlmcsd_1-1_all.ipk\n```\n`dnsmasq.conf` 加入\n```\nsrv-host=_vlmcs._tcp.lan,openwrt.lan,1688,0,100\n```\n最后开心地测试吧\n\n","cover":"","link":"the-wndr4300-configuration-over-the-wall.html","preview":"","title":"WNDR4300配置ss kcptun "},{"content":"\n\n## RestBase\n\n```c#\npublic abstract class RestBase\n{\n    public GlobalError restException {get;set;}\n}\n```\n\n如此， 此类的子类都有了类型为 `GlobalError` 的 `restException` 字段\n\n在使用RestSharp进行REST请求时， 如果发生异常， 一般会将错误以 GlobalError 这样的统一的形式返回，那么在\n\n```c#\n            request.OnBeforeDeserialization = (resp) =\u003e\n            {\n                if (((int)resp.StatusCode) \u003e= 400)\n                {\n                    string restException = \"{{ \\\"restException\\\" : {0} }}\";  //注意这行， 修改了返回的内容\n                    var content = resp.RawBytes.AsString(); //get the response content\n                    var newJson = string.Format(restException, content);\n\n                    resp.Content = null;\n                    resp.RawBytes = Encoding.UTF8.GetBytes(newJson.ToString());\n                }\n            };\n```\n","cover":"","link":"csharp-adds-a-restexception-to-each-model-by-inheritance.html","preview":"","title":"csharp 通过继承为每个Model添加一个restException"},{"content":"\n\n由于各种原因，自建的gitlab服务器使用了非标准端口的HTTP服务，即使正确的加入了sshkey， 也依然提示需要输入用户和密码，而同样的情况下， windows下的git-shell则可以正常免密码进行pull和push， 而在linux下却不行， 尝试进行git版本的升级（默认是1.9.1）无效，因此可以使用以下方法进行操作，以实现免输入密码和用户名\n\n首先git远端地址使用 HTTP 方式\n```bash\nsudo touch ~/.netrc\nsudo chmod 600 ~/.netrc\nsudo gedit ~/.netrc\n```\n写入以下内容\n\n```\nmachine 服务IP地址 login gitlab用户名 password gitlab密码\n```\n\n然后测试\n\n```git\ngit pull origin\n```\n\n\n","cover":"","link":"git-need-to-enter-the-user-name-password-case-how-to-automatically-enter.html","preview":"","title":"git 需要输入用户名密码的情况下如何自动输入"},{"content":"\n\nPrism的项目结构，在使用RegionName设置区域的时候，只是给某个控件设置一个RegionName，而不会把这个区域注册到RegionManager中，这就导致了当在Module中弹出一个窗口时，新窗口的所有区域都不会被注册， 因而无法在新窗口上进行导航的操作。\n解决方法如下：\n\n```charp\n_container.RegisterType\u003cLoginWindow, LoginWindow\u003e();\nvar login = _container.Resolve\u003cLoginWindow\u003e();\nRegionManager.SetRegionManager(login, _regionManager);\n```\n这样就可以将这个新的Window中包含的区域注册进系统\n","cover":"","link":"prism-wpf-processing-module-in-the-popup-window-regions.html","preview":"","title":"WPF Prism 处理模块中弹出窗口的Regions"},{"content":"\n\n##nginx\n```bash\napt-get install nginx\n```\n\n##mysql\n```bash\napt-get install mysql-server-5.5 mysql-client-5.5\n```\nif error like `logger:command not found`\ntry this\n```bash\napt-get --yes autoremove --purge mysql-server-5.5\napt-get --yes autoremove --purge mysql-client-5.5\napt-get --yes autoremove --purge mysql-common\nrm -rf /var/lib/mysql /etc/mysql ~/.mysql\ndeluser mysql\napt-get autoclean\napt-get update \u0026\u0026 sudo apt-get upgrade\napt-get install mysql-server-5.5 mysql-client-5.5\ndpkg --configure -a\napt-get --reinstall install bsdutils  ##maybe the most important line\n\napt-get install mysql-server-5.5 mysql-client-5.5\n```\n### import data\n```bash\nmysql -uroot -p\n\ncreate database typecho;\nuse typecho;\n\nsource /path/to/sqlfile;\n```\n\n## PHP\n```bash\napt-get install php5 php5-fpm\napt-get install php5-mysql\n```\n\n## nginx conf file\n```bash\ncd /etc/nginx\nvi typecho.conf\n```\n```nginx\nif (!-e $request_filename) {\n        rewrite ^(.*)$ /index.php$1 last;\n    }\n```\n```bash\nvi enable-php-pathinfo.conf\n```\n```nginx\nlocation ~ [^/]\\.php(/|$)\n        {\n            fastcgi_pass  unix:/tmp/php-cgi.sock;\n            fastcgi_index index.php;\n            include fastcgi.conf;\n            include pathinfo.conf;\n        }\n```\n```bash\nvi fastcgi_param\n```\n```nginx\nfastcgi_param   QUERY_STRING            $query_string;\nfastcgi_param   REQUEST_METHOD          $request_method;\nfastcgi_param   CONTENT_TYPE            $content_type;\nfastcgi_param   CONTENT_LENGTH          $content_length;\n\nfastcgi_param   SCRIPT_FILENAME         $request_filename;\nfastcgi_param   SCRIPT_NAME             $fastcgi_script_name;\nfastcgi_param   REQUEST_URI             $request_uri;\nfastcgi_param   DOCUMENT_URI            $document_uri;\nfastcgi_param   DOCUMENT_ROOT           $document_root;\nfastcgi_param   SERVER_PROTOCOL         $server_protocol;\n\nfastcgi_param   GATEWAY_INTERFACE       CGI/1.1;\nfastcgi_param   SERVER_SOFTWARE         nginx/$nginx_version;\n\nfastcgi_param   REMOTE_ADDR             $remote_addr;\nfastcgi_param   REMOTE_PORT             $remote_port;\nfastcgi_param   SERVER_ADDR             $server_addr;\nfastcgi_param   SERVER_PORT             $server_port;\nfastcgi_param   SERVER_NAME             $server_name;\n\nfastcgi_param   HTTPS                   $https if_not_empty;\n# PHP only, required if PHP was built with --enable-force-cgi-redirect\nfastcgi_param   REDIRECT_STATUS         200;\n```\n```bash\ncd sites-available\nvi default\n```\n```nginx\nserver {\n        listen 80 default_server;\n        listen [::]:80 default_server ipv6only=on;\n        root /path/to/htmlroot;\n        server_name loclahost;\n        #return 301 https://$server_name$request_uri;\n        include typecho.conf;\n        location / {\n           index  index.html index.htm index.php l.php;\n           autoindex  off;\n       }\n       location ~ \\.php(.*)$  {\n            fastcgi_pass unix:/var/run/php5-fpm.sock;\n            fastcgi_index  index.php;\n            fastcgi_split_path_info  ^((?U).+\\.php)(/?.+)$;\n            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n            fastcgi_param  PATH_INFO  $fastcgi_path_info;\n            fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;\n            include        fastcgi_params;\n        }\n}\n```\n```bash\n/etc/init.d/nginx configtest\n/etc/init.d/nginx restart\n```\n\n\n\n\n","cover":"","link":"install-nginx-mysql-php.html","preview":"","title":"Install nginx mysql php"},{"content":"\n\nfrom\n\u003e https://adblockplus.org/en/filter-cheatsheet\n\ntranslated by linx\n\n#简单的屏蔽规则\n\n##例子 1: 根据网址的一部分屏蔽\n```\n/banner/*/img\n```\n该规则屏蔽:\n```\nhttp://example.com/banner/foo/img\nhttp://example.com/banner/foo/bar/img?param\nhttp://example.com/banner//img/foo\n```\n但不屏蔽:\n```\nhttp://example.com/banner/img\nhttp://example.com/banner/foo/imgraph\nhttp://example.com/banner/foo/img.gif\n```\n\n##例子 2: 根据域名屏蔽\n```\n||ads.example.com^\n```\n该规则屏蔽:\n```\nhttp://ads.example.com/foo.gif\nhttp://server1.ads.example.com/foo.gif\nhttps://ads.example.com:8000/\n```\n\n但不屏蔽:\n```\nhttp://ads.example.com.ua/foo.gif\nhttp://example.com/redirect/http://ads.example.com/\n```\n##例子3: 屏蔽确定的地址\n```\n|http://example.com/|\n```\n该规则屏蔽:\n```\nhttp://example.com/\n```\n但不屏蔽:\n```\nhttp://example.com/foo.gif\nhttp://example.info/redirect/http://example.com/\n```\n#屏蔽规则中的选项\n```\n||ads.example.com^$script,image,domain=example.com|~foo.example.info\n```\n该规则仅仅屏蔽 `http://ads.example.com/foo.gif` 但仅当一下条件满足时:\n\n该地址是作为脚本或者图片加载时.\n脚本或者图片加载自 `example.com`域名 (例如 `example.com` 自身或者 `子域名.example.com`) 但不是其多级子域名.\n\n#白名单规则\n用于在已有规则命中时, 加入一条例外\n\n##例子 1: 特定请求中的例外\n```\n@@||ads.example.com/notbanner^$~script\n```\n##例子 2: 整个页面的例外\n```\n@@||example.com^$document\n```\n#注释\n```\n!这是一条注释\n```\n#过滤选项\n```\nscript\n~script\n```\n包含或者排除JavaScript脚本文件\n```\nimage\n~image\n```\n包含或者排除图像\n```\nstylesheet\n~stylesheet\n```\n包含或者排除css\n```\nobject\n~object\n```\n包含或者排除由浏览器插件管理的内容,例如flash java\n```\nobject-subrequest\n~object-subrequest\n```\n包含或者排除由浏览器插件加载的文件\n```\nsubdocument\n~subdocument\n```\n包含或者排除页面的嵌入内容(frames)\n```\ndocument\n```\n用于排除页面本身 (e.g. @@||example.com^$document)\n```\nelemhide\n```\n用于防止元素规则应用于页面 (e.g. @@||example.com^$elemhide)\n```\ndomain=\n```\n指定域名列表, 由竖线分隔 (|), 使过滤规则生效. 可以用波浪符号 (~) 来否定之.\n```\nthird-party\n~third-party\n```\n指明一个过滤规则是否应该处理第三方或者第一域\n\n#元素隐藏(由 `Element Hiding Helper for Adblock Plus` 扩展使用)\n##域名选择器\n`##selector` 占位符.\n`###advert` 匹配拥有unique id为 \"advert\" 的元素\n`##.advert` 匹配拥有class id 为 \"advert\" 的元素\n`##table[height=\"100\"][width=\"100\"]` \n`##a[href=\"http://example.com/\"]`\n`##div[style=\"width:300px;height:250px;\"]`\t`\n\n` ###advert \u003e .link` 匹配元素内部的关闭的`link`标签, 并且id为\"advert\"\n`##a[href^=\"http://example.com/\"]`\n\n`##div[style^=\"width:300px;height:250px;\"]`\n`##div[style$=\"width:300px;height:250px;\"]`\n`##div[style*=\"width:300px;height:250px;\"]`\n","cover":"","link":"adblock-rule-definition.html","preview":"","title":"Adblock 规则定义"},{"content":"\n\nrefer to \n\u003e https://blog.kuoruan.com/110.html\n\n## Server\n首先需要一个已经架设好的ss服务, 例如为 `1.1.1.1:9999` 加密方式为`aes-256-cfb` 密码为`password`\n```shell\nwget --no-check-certificate https://raw.githubusercontent.com/kuoruan/kcptun_installer/master/kcptun.sh\nchmod +x ./kcptun.sh\n./kcptun.sh\n```\n\n执行之后, 会有一个向导过程, 因为没兴趣折腾过多, 因此只做了小小的修改\n\n- 设置一下kcptun的密码\n- 指定一个kcptun的端口\n- 加速端口填入9999也就是ss的端口\n- 加速方式为fast3\n- 禁用压缩\n- 加密方式为none\n\n上述的最后两项为可选, 我的目的是想要在openwrt路由器上跑kcptun客户端, 因为如果这两项开起来的话, 那基本上几秒钟进程就挂了, 禁用压缩和不加密可以减少资源的占用. 然而..... 并没有什么卵用, TP-LINK 841ND 改装版, 这个基本跑不动, 虽然可以开起来但是会无法访问\n\n## Client\n客户端选用 kcptun_gclient, 虽然界面比较大了 \n需要配置以下\n\n- 本地监听端口\n- 禁用压缩\n- 通讯密钥\n- 加密方式\n- 模式\n- 过期时间\n\n除了本地监听端口, 其他都在kcptun.sh执行的时候给出了. \n\n## ss\n新建一条服务器, 地址是127.0.0.1, 端口填写上面的本地监听端口, 加密方式以及密码为ss服务器的加密方式和密码,\nPS: 之前用了一段时间的rc4-md5, 本以为加密强度下降了可以性能更好的, 没想到反之啊, 换回aes-256-cfb, 之后好多了\n\n\n## 测试\n\n- shadowsocks开启系统代理, 模式为PAC模式, 然后git克隆一个github上的项目, 终于可以摆脱那个3kb/s的情况了\n- youtube 开个4K视频. 然后看connection, 爽\n\n\n\n","cover":"","link":"kcptun-shadowsocks.html","preview":"","title":"kcptun \u0026amp;\u0026amp; shadowsocks"},{"content":"\n\n```csharp\nrequest.AddParameter(\"application/json\", jsonStr, ParameterType.RequestBody); \n```\n\nSomtimes when you use \n```csharp\nrequest.AddJsonBody(object);\n```\nto add Json body will result in data losing.\neg. \nA Class like this\n```csharp\npublic class ReportMessage\n{\n    public string reportName {get;set;}\n    public string dataSetName {get;set;}\n    public List\u003cdynamic\u003e data {get;set;}\n}\n```\nmay be serialized to \n```jsonp\n{\\\"reportName\\\":\\\"aaa.frx\\\",\n\\\"dataSetName\\\":\\\"data\\\",\n\\\"data\\\":[\\\"filed1\\\":\\\"field1data\\\",\\\"field2\\\":\\\"field2data\\\"}]\n}\n```\nor \n```json\n{\"reportName\":\"aaa.frx\",\n\"dataSetName\":\"data\",\n\"data\":[{\"filed1\":\"field1data\",\"field2\":\"field2data\"},\n{\"filed3\":\"field1data\",\"field4\":\"field2data\"},\n{\"filed5\":\"field1data\",\"field6\":\"field2data\"}\n]\n}\n```\nwhen I POST that to a Nancy Host using PostMan or Fiddler, it can be deserilized OK. But When Post it using RestSharp with AddJsonBody, then\n```json\n{\"reportName\":\"aaa.frx\",\n\"dataSetName\":\"data\",\n\"data\":[\n{},{},{}\n]\n}\n```\nthe data disappeared.\n\n\n\n\n\n","cover":"","link":"manually-add-json-string-to-restsharp-body.html","preview":"","title":"RestSharp Manually Add Json String To Body"},{"content":"\n\n```csharp\nStaticConfiguration.DisableErrorTraces = false\n```\nStaticConfiguration这是一个静态类,需要`using Nancy;`\n","cover":"","link":"nancy-c-to-open-the-detailed-error-output.html","preview":"","title":"C# Nancy 开启详细错误输出"},{"content":"\n\n```csharp\npublic partial class SaturnAPIService : ServiceBase\n    {\n        NancyHost host;\n        public SaturnAPIService()\n        {\n            InitializeComponent();\n        }\n\n        protected override void OnStart(string[] args)\n        {\n            //necessary because of Namespace Reservations\n            var config = new HostConfiguration() { RewriteLocalhost = true, UrlReservations = new UrlReservations() { CreateAutomatically = true } };\n\n            host = new NancyHost(config, new Uri(\"http://localhost:1234\"));\n            \n            host.Start();\n            \n        }\n\n        protected override void OnStop()\n        {\n            host.Stop();\n        }\n```\nrefer to \n\u003e https://github.com/NancyFx/Nancy/wiki/Self-Hosting-Nancy\n\n\n\n\n\n","cover":"","link":"service-hosting-http-based-services-using-nancy-windows.html","preview":"","title":"Windows Service hosting HTTP based services using Nancy"},{"content":"\n\n## XAML\n\n```xml\n\u003cListBox ItemTemplate=\"{StaticResource HandBrandShowTemplate}\"\n         ItemsSource=\"{Binding showHandBrands,\n                               Mode=TwoWay,\n                               IsAsync=True}\"\n         SelectedItem=\"{Binding selectedHandBrand,\n                                Mode=TwoWay}\"\n         x:Name=\"handBrandListbox\" \n         dd:DragDrop.IsDragSource=\"True\" \n         dd:DragDrop.IsDropTarget=\"True\"\n         dd:DragDrop.DropHandler=\"{Binding}\"\u003e\n```\n\n## ViewModel\nimplement interface `IDropTarget`\n\n```csharp\n        public void DragOver(IDropInfo dropInfo)\n        {\n            HandBrandItemViewModel sourceItem = dropInfo.Data as HandBrandItemViewModel;\n            HandBrandItemViewModel targetItem = dropInfo.TargetItem as HandBrandItemViewModel;\n\n            if (sourceItem != null \u0026\u0026 targetItem != null \u0026\u0026 targetItem.CanAcceptChildren)\n            {\n                dropInfo.DropTargetAdorner = DropTargetAdorners.Highlight;\n                dropInfo.Effects = DragDropEffects.Copy;\n            }\n        }\n\n        public void Drop(IDropInfo dropInfo)\n        {\n            HandBrandItemViewModel sourceItem = dropInfo.Data as HandBrandItemViewModel;\n            HandBrandItemViewModel targetItem = dropInfo.TargetItem as HandBrandItemViewModel;\n            targetItem.Children.Add(sourceItem);\n\n            var msg = new HostMessage(\"正在进行房间拖拽操作....\"\n                + \"\\n 源手牌号:\" + sourceItem.handBrand.handBrandShowId\n                + \"\\n 目标手牌号:\" + targetItem.handBrand.handBrandShowId\n\n                , \"HandBrandDialog\");\n        }\n\n```\n\n","cover":"","link":"gongsolutionswpfdragdrop-to-achieve-wpf-drag-and-drop.html","preview":"","title":"GongSolutions.Wpf.DragDrop 实现WPF拖拽"},{"content":"\n\n\n\u003e Name: helloWorld\n\u003e Key: eJzzzU/OLi0odswsqslIzcnJD88vykmpsUQCNc41hjV+7q5+AF74Ds8=\n","cover":"","link":"mockups-balsamiq.html","preview":"","title":"Balsamiq Mockups"},{"content":"\n\n原因:放Flash时CPU飙升, 风扇转速直逼6000RPM, 不得已准备给风扇加油\n\n清灰前:\n播放Flash CPU占用 95% Chrome最高CPU 60%, 风扇转速直逼5000+RPM\n\n清灰加油后:\nCPU依旧, CPU温度温度最高72 风扇转速4000+RPM  效果显著\n","cover":"","link":"remember-a-thorough-cleaning.html","preview":"","title":"记一次彻底清灰"},{"content":"\n\n如果是预先知道的多条件可以直接`||`或者`\u0026\u0026`把多个条件拼在一起然后放在`Where()`子句里就可以，不过如果是不确定的条件，就不能用这种方法了，作为一个菜鸟，本来还想着是不是可以一直`.Where`下去，发现不行\n\n先上辅助扩展类\n```csharp\npublic static class PredicateBuilder\n{\n    public static Expression\u003cFunc\u003cT, bool\u003e\u003e True\u003cT\u003e() \n    { return f =\u003e true; }\n    public static Expression\u003cFunc\u003cT, bool\u003e\u003e False\u003cT\u003e() \n    { return f =\u003e false; }\n    public static Expression\u003cFunc\u003cT, bool\u003e\u003e Or\u003cT\u003e(this Expression\u003cFunc\u003cT, bool\u003e\u003e expr1,Expression\u003cFunc\u003cT, bool\u003e\u003e expr2)\n    {\n        var invokedExpr = Expression.Invoke(expr2, expr1.Parameters.Cast\u003cExpression\u003e());\n        return Expression.Lambda\u003cFunc\u003cT, bool\u003e\u003e(Expression.Or(expr1.Body, invokedExpr), expr1.Parameters);\n    }\n    public static Expression\u003cFunc\u003cT, bool\u003e\u003e And\u003cT\u003e(this Expression\u003cFunc\u003cT, bool\u003e\u003e expr1, Expression\u003cFunc\u003cT, bool\u003e\u003e expr2)\n    {\n        var invokedExpr = Expression.Invoke(expr2, expr1.Parameters.Cast\u003cExpression\u003e());\n        return Expression.Lambda\u003cFunc\u003cT, bool\u003e\u003e(Expression.And(expr1.Body, invokedExpr), expr1.Parameters);\n    }\n}\n```\n使用方法很简单，先 \n```csharp\nvar Predicate = PredicateBuilder.True\u003cT\u003e();  //T 为需要进行过滤和查询的类型\n```\n在循环或者遍历的时候\n```csharp\npredicate = predicate.And(lambda);\nor\npredicate = predicate.Or(lambda);\n\n```\n一步步构建需要的表达式\n最后`Where(predicate)`这样既可\n","cover":"","link":"linq-c-dynamic-multi-condition-query.html","preview":"","title":"C# Linq动态多条件查询"},{"content":"\n\n就跟脑子发热一样， 一时热， 一时凉\n\n具体表现为，随便干点啥，开机什么都不做， CPU占用也哗哗地上升，我真是怀疑我这酷睿地2.8GHz的双核CPU难道已经赶不上时代的潮流要被淘汰了吗。随之而来的就是风扇哗哗地转，用Aida看一下风扇转速，飙到了5000+，几乎是已经到了极限最大速度了，而随之而来的噪音也是可见的，比光驱读盘的那个震动的声响都要大。感觉要么是风扇久了快不行了，要么是之前涂得硅脂快不行了。但是之前有打开看过硅脂，并没有干掉，难道是涂得不好么。不管那么多，立马搞了点风扇油外加硅脂，准备拆掉大搞一场，说不定导热硅脂垫可能更适合我，毕竟之前有过一次经验，效果还不错的。GPU的温度还在比较能接受的范围内，尽量就先不动那边的了。目前还不知道风扇好不好加油，反正肯定是要全拆掉的。然而国庆，鬼晓得什么时候发货，网购快，个鬼，真正用到的时候等死了都不会到，急死了。\n\n另外，那恐怖的CPU占用，基本上都是Chrome在播放视频的时候出现的，现在的Flash真是一点都不省心了。当然不完全是这个，就连普通的时候那个CPU也是经常跳的。好怀念以前用Chrome看视频，CPU最高只有30%的那个时候啊，现在是怎么了，这年头的硬件设备淘汰得真是太快了，完全无法跟上潮流啊。可想而知，人也很容易被淘汰，一旦停止了学习。借了台华硕的笔记本，试了一下，也是一样播放个视频，CPU就满了，不行啊，接下来一定要找个方法改善一下才行\n","cover":"","link":"recent-computer-fever-serious.html","preview":"","title":"最近电脑发热严重"},{"content":"\n\n## Nuget\n\u003e http://nuget.fishlee.net/v3/index.json \nFrom [这里](https://blog.fishlee.net/2015/10/14/announcing_nuget_acceleration_service/)\n\n\n## Python Pypi\n\n\u003e```\n\u003evi ~/.pip/pip.conf\n\n\u003e[global]\n\u003eindex-url = http://pypi.v2ex.com/simple\n\u003e[install]\n\u003etrusted-host=pypi.v2ex.com\n\u003e:wq\n\u003e```\n\n## NPM\n\u003e```\n\u003evi ~/.npmrc\n\u003e\n\u003eregistry = https://registry.npm.taobao.org\n\u003e```\n\u003eFrom [淘宝NPM镜像](https://npm.taobao.org/)\n\n## Ubuntu \n\u003e [163镜像](http://mirrors.163.com/.help/ubuntu.html)\n\n## Openwrt\n\u003e [http://openwrt.proxy.ustclug.org/](http://openwrt.proxy.ustclug.org/)\n\n## Homebrew\n\u003e \n\u003e\u003e [http://homebrew-mirror-china.tycdn.net/](http://homebrew-mirror-china.tycdn.net/)\n\u003e\u003e `export HOMEBREW_BOTTLE_DOMAIN=\"http://homebrew-mirror-china.tycdn.net\"`\n\n\u003e----\n\u003e\u003e [https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git](https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git)\n\u003e\n```bash\ncd \"$(brew --repo)\"\ngit remote set-url origin git://mirrors.ustc.edu.cn/brew.git\n```\n\u003e[https://lug.ustc.edu.cn/wiki/mirrors/help/homebrew-bottles](https://lug.ustc.edu.cn/wiki/mirrors/help/homebrew-bottles)\n\u003e \n\u003e\n```bash\n# 对于bash用户：\necho 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' \u003e\u003e ~/.bash_profile\nsource ~/.bash_profile\n# 对于zsh用户\necho 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' \u003e\u003e ~/.zshrc\nsource ~/.zshrc\n```\n----\n\u003e [http://ban.ninja/](http://ban.ninja/)\n\n","cover":"","link":"mirror-accelerated-source-collection.html","preview":"","title":"镜像(加速源)收集"},{"content":"\n\n```xml\n\u003cGroupBox Grid.Row=\"2\" Header=\"类型\"\u003e\n            \u003cListBox ItemsSource=\"{Binding roomTypeLists}\" SelectedItem=\"{Binding selectedType, UpdateSourceTrigger=PropertyChanged}\"\u003e\n                \u003cListBox.Template\u003e\n                    \u003cControlTemplate TargetType=\"{x:Type ListBox}\"\u003e\n                        \u003cScrollViewer HorizontalScrollBarVisibility=\"Disabled\" VerticalScrollBarVisibility=\"Auto\"\u003e\n                            \u003cWrapPanel IsItemsHost=\"True\"\n                                       Orientation=\"Horizontal\"\n                                       ScrollViewer.CanContentScroll=\"True\" /\u003e\n                        \u003c/ScrollViewer\u003e\n                    \u003c/ControlTemplate\u003e\n                \u003c/ListBox.Template\u003e\n                \u003cListBox.ItemContainerStyle\u003e\n                    \u003cStyle TargetType=\"{x:Type ListBoxItem}\"\u003e\n                        \u003cSetter Property=\"Template\"\u003e\n                            \u003cSetter.Value\u003e\n                                \u003cControlTemplate TargetType=\"{x:Type ListBoxItem}\"\u003e\n                                    \u003cRadioButton Content=\"{Binding Path=content}\" IsChecked=\"{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected}\" /\u003e\n                                \u003c/ControlTemplate\u003e\n                            \u003c/Setter.Value\u003e\n                        \u003c/Setter\u003e\n                    \u003c/Style\u003e\n                \u003c/ListBox.ItemContainerStyle\u003e\n\n            \u003c/ListBox\u003e\n\n        \u003c/GroupBox\u003e\n```\n","cover":"","link":"wpf-using-radiogroup-to-achieve-the-effect-of-listbox.html","preview":"","title":"WPF 用ListBox实现RadioGroup的效果"},{"content":"\n\n当我使用`TextBox`或者`TextBlock`时, `StringFormat`是有效的, 但是使用`Label`时, 就无效了, 比如\n\n\n```xml\n\u003cLabel Content=\"{Binding roomGoods.totalCount,StringFormat=TotalCount: {0:C}}\"/\u003e\n```\n只会显示`totalCount`的内容, 但是不会显示前面的`TotalCount: `部分\n\n经过查询, 加入如下属性\n\n```xml\n\u003cLabel Content=\"{Binding roomGoods.totalCount}\" ContentStringFormat=\"TotalCount: {0}\"/\u003e\n\n```\n","cover":"","link":"binding-stringformat-wpf-is-invalid.html","preview":"","title":"WPF Binding StringFormat 无效"},{"content":"\n\n`sshpass`: 用于解决ssh scp等命令需要手动输入密码的情况\n\n使用方法很简单 只要在原有的命令前面加上\n`sshpass -p 密码 ` 即可\n例如`sshpass -p password ssh user@xxx.com`\n","cover":"","link":"sshpass.html","preview":"","title":"sshpass"},{"content":"\n\n首先必须要配置 `Jenkins Location` 下的管理员邮箱地址, 用于发送邮件, 我这里使用yeah.net的网易邮箱\n\n安装插件`Email Extension Plugin`\n\n`SMTP SERVER`: `smtp.yeah.net`\n`Default User E-mail suffix`: `@yeah.net`\n`Default Recipients`: `邮箱地址`\n\n\n邮件通知下的配置\n和上面类似\n\n使用SMTP认证并且勾上SSL, 用户名和密码分别为邮箱地址和密码(管理员的发件邮箱)\n\n然后底下可以填写一个测试邮箱地址进行发送测试\n","cover":"","link":"jenkins-add-send-mail-function.html","preview":"","title":"Jenkins 添加发送邮件功能"},{"content":"\n\n添加构建 Execute Windows batch Command\n```\n\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\MSTest.exe\" /testcontainer:\"C:\\Program Files (x86)\\Jenkins\\workspace\\Saturn-win\\bin\\Release\\Modules\\Tests\\Saturn.Module.LoginTests2.dll\" /resultsfile:G:\\www\\%BUILD_ID%.trx\n```\n需要将测试工程的生成目录单独出来\n我这里使用生成事件, 将测试工程所需的文件全部拷贝到单独的目录\n```\nxcopy /y /s /e \"$(ProjectDir)bin\\$(ConfigurationName)\" \"$(SolutionDir)bin\\$(ConfigurationName)\\Modules\\Tests\\\"\n```\n","cover":"","link":"mstest-jenkins-execution-unit-test.html","preview":"","title":"Jenkins MSTest 执行单元测试"},{"content":"\n\n## Gitlab搭建\n\n\u003e https://github.com/beginor/gitlab-ce\n\n先安装说明把image pull下来\n\n```\nsudo mkdir -p /gitlab/etc\nsudo mkdir -p /gitlab/log\nsudo mkdir -p /gitlab/data\n```\n创建对应的映射文件, 这样可以把重要的文件保存在容器外面\n\n```\ndocker run \\\n    --detach \\\n    --publish 8443:443 \\\n    --publish 8180:80 \\\n    --publish 2222:22 \\\n    --hostname 192.168.1.206 \\\n    --name gitlab \\\n    --restart unless-stopped \\\n    --volume /gitlab/etc:/etc/gitlab \\\n    --volume /gitlab/log:/var/log/gitlab \\\n    --volume /gitlab/data:/var/opt/gitlab \\\n    beginor/gitlab-ce\n```\n\n跑起来之后需要较长一段时间启动, 启动完成之前会一直提示502错误, 属于正常情况\n\n## Jenkins\n\n由于是Windows下的编译, 因此直接下载Jenkins的Win安装包进行安装, 安装完成之后, 访问`http://localhost:8080`即可, 先安装一些推荐的插件, 暂时不要自定义, 因为一不小心就装了很多, 会需要很长时间去安装\n\n安装必须的插件\nGit plugin\nMSBuild Plugin\nMSTestRunner plugin\n\n\n配置Git源码管理,例如\n`git@192.168.1.206:linx/saturn.git`\n然后 添加`Credentials`\n选择如下\n\nSSH Username with private key\n`Username` linx\n`Private Key` \n`Enter directly` 直接粘贴私钥(注意不是公钥)\n分支可以自己填\n*/develop\n\n构建触发器, 选择`Poll SCM`\n日程表填写\n```\nH/2 * * * *\n```\n或者\n```\n* * * * *\n```\n\n这样表示定时检查代码库的更新, 前者为2分钟一次, 后者是1分钟\n\n然后到 http://127.0.0.1:8080/configureTools/\n配置`MSBuild`, `Name`随便填, `Path To MSBuild` 填写 `C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\`\n\n同样的, 配置好`MSTest`, 路径一般是\n`C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\`\n以上是Visual Studio 2015的路径\n\n\n回到工程配置\n##### 构建\n- 添加 `Execute Windows batch command`\n`nuget.exe restore XXX.sln`\n这一步可以将解决方案的包还原, 需要手动将`nuget.exe`拷贝到解决方案根目录或者环境变量的目录下\n\n- 添加`Build a Visual Studio project or solution MSBuild`\n`MSBuild Version`选择刚添加的 `MSBuild 4.5`\n`MSBuild Build File` 填写解决方案的名称\n`Command Line Arguments` 填写 `/t:Build /p:Configuration=Release`\n\n最后保存之后, 回到工程界面, 点击立即构建, 测试一下是否正常\n\n这样添加好之后, 就可以在Gitlab上推送的时候,自动触发编译\n\n然后还需要添加一些东西, 暂时还没有落实\n\n- 自动修改工程的版本号, 使编译出来的成品的版本号自动变化\n- 调用MSTest执行单元测试\n- 测试结果正常的情况下, 将构建的文件转移到发布服务器或者测试服务器, 或者进行打包成安装包\n- 全部流程完成之后, 对git进行打tag标记所有源码, 以便以后根据tag生成所需要的版本的全部内容\n- 流程成功或者失败, 都发送文件到指定的邮箱地址, 通知相关人\n- 生成报告发布到报告web服务器, 以供查看\n\n\n\n\n\n\n\n\n\n\n\n\n\n","cover":"","link":"gitlabjenkins-construction-of-wpf-continuous-integration-environment.html","preview":"","title":"GitLab+Jenkins 构建WPF持续集成环境"},{"content":"\n\n## 生成多个密钥\n```bash\nssh-keygen -t rsa -C \"a@email.com\" -f ~/.ssh/id_rsa.a\nssh-keygen -t rsa -C \"b@email.com\" -f ~/.ssh/id_rsa.b\nssh-keygen -t rsa -C \"c@email.com\" -f ~/.ssh/id_rsa.c\n```\n\n## 配置多密钥匹配各自的主机\n\n位置是 \n当前用户:~/.ssh/config\n全局:\n- Windows 下在 `\"C:\\Program Files\\Git\\etc\\ssh\\ssh_config\"`\n- Linx下在 `/etc/ssh/ssh_config`\n\n一般情况下不需要修改全局的文件, 只需要新增一个用户的`config`即可(默认不存在)\n\n以下为一个例子:\n```\nHost 192.168.1.206\n    Port 2222\n    User \"linx\"\n    KexAlgorithms +diffie-hellman-group1-sha1\n    IdentityFile ~/.ssh/id_rsa.a\n```\n\n可以指定ssh使用的端口(使用非22端口时)\n第四行一般是`Gerrit`会需要使用\n最后一行, 则指定了访问`192.168.1.206`这个主机是需要使用的KEY私钥\n\n**特殊情况**: 比如Jenkins在访问非标准端口的Git仓库时, 需要在全局`ssh_config`里配置, 否则会无法访问, 提示不是正常的仓库\n\n最后, `ssh -T git@192.168.1.206`, 无需带上端口\n\n\n\n\n","cover":"","link":"ssh-git-multi-host-multi-key-management.html","preview":"","title":"git SSH多主机多密钥的管理"},{"content":"\n\n话说这天打开博客一直转圈圈, F12一看, 找到了罪魁祸首, 字体库的请求出了问题, 导致一直卡着, 卡好几分钟\n\n搜索之后发现, fonts.useso.com 已无法访问, 随后又找到了停止运营的公告, 恭喜360 又造孽一次, 成功达成成就 说关就关\n","cover":"","link":"360-front-end-public-library.html","preview":"","title":"360前端公共库挂了"},{"content":"\n\n先上链接:\n\u003e https://blog.kuoruan.com/102.html\n\u003e http://www.dou-bi.com/ss-jc37/\n\u003e https://blog.kuoruan.com/111.html\n\u003e https://blog.kuoruan.com/110.html\n\n\n服务端:\n```\nwget https://raw.githubusercontent.com/kuoruan/kcptun_installer/master/kcptun.sh\nchmod +x ./kcptun.sh\n./kcptun.sh\n```\n输入一个监听端口+ss端口+key,即可跑起服务端了\n\n客户端:\n\n使用`KcpTun Tools`作为客户端的转发, 本地端口随意,例如8388, 加速端口选择那个监听端口,填入key, 点击浏览选择`client_windows_amd64.exe` , 保存配置, 勾选开机启动, 启动加速,OK\n\nShadowsocks `127.0.0.1:8388`,加密方式和密码为原ss的配置,OK\n\n安卓客户端:\n版本需为3.0.4 , KCP端口选择上面设置的端口  参数填入 --key \"XXXXXX\"  即可, 启用KCP协议即可\n\n","cover":"","link":"configure-kcptun-process-records.html","preview":"","title":"配置kcptun过程记录"},{"content":"\n\n首先, 类的声明需要做一些手脚\n\n`using System.ComponetModel;`\n\n```c#\npublic class Status : INotifyPropertyChanged\n    {\n        private string _status;\n\n        public string status\n        {\n            get { return _status;}\n\n            set {\n                _status = value;\n                OnPropertyChanged(\"status\");\n            }\n\n        }\n\n\n        public event PropertyChangedEventHandler PropertyChanged;\n        private void OnPropertyChanged(string propertyName)\n        {\n            if (PropertyChanged != null)\n                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));\n        }\n    }\n```\n\n基本上是固定的设置\n只要在\n`setter` 部分执行`OnPropertyChanged(属性名)` 即可正确地讲当次改动通知到对应的binding, 准确的说是通知到`DataContext`\n\n窗口处理 (*.xaml.cs)\n\n```c#\nprivate Status status = new Status();\n```\n\n设置组件的数据\n```c#\nthis.DataContext = status;\n```\n或者\n```c#\nlabel.DataContext = status;\n```\n都可以\n\n界面(*.xaml)\n\n```xaml\n\u003cLabel x:Name=\"label\" Content=\"{Binding Path=status}\" HorizontalAlignment=\"Left\" FontSize=\"50\"  Height=\"75\" Margin=\"90,93,0,0\" VerticalAlignment=\"Top\" Width=\"317\"/\u003e\n```\n\n\n\n\n\n","cover":"","link":"wpf-data-binding-to-class.html","preview":"","title":"WPF 数据绑定到类"},{"content":"\n\n把烟熄灭了吧\n对身体会 好一点\n虽然这样很难度过 想你的夜\n舍不得 我们拥抱的照片\n却又不想让自己看见\n把它藏在像框的后面\n把窗户打开吧\n对心情会 好一点\n这样我还能微笑着 和你分别\n\n这是 我最喜欢的唱片\n你说这只是一段音乐\n却会让我在以后想念\n说着付出生命的誓言\n回头看看繁华的世界\n爱你的每个瞬间象飞驰而过的地铁\n\n说过不会掉下的泪水\n现在沸腾着我的双眼\n爱你的虎口\n我脱离了危险\n把烟熄灭了吧\n对身体会 好一点\n虽然这样很难度过 想你的夜\n舍不得 我们拥抱的照片\n却又不想让自己看见\n把它藏在像框的后面\n把窗户打开吧\n\n对心情会 好一点\n这样我还能微笑着 和你分别\n这是 我最喜欢的唱片\n你说这只是一段音乐\n却会让我在以后想念\n说着付出生命的誓言\n回头看看繁华的世界\n爱你的每个瞬间象飞驰而过的地铁\n说过不会掉下的泪水\n现在沸腾着我的双眼\n爱你的虎口\n我脱离了危险\n\n说着付出生命的誓言\n回头看看繁华的世界\n爱你的每个瞬间象飞驰而过的地铁\n说过不会掉下的泪水\n现在沸腾着我的双眼\n爱你的虎口\n我脱离了危险\n说着付出生命的誓言\n回头看看繁华的世界\n爱你的每个瞬间象飞驰而过的地铁\n","cover":"","link":"a-tiger.html","preview":"","title":"虎口脱险"},{"content":"\n\n这是标题\n====\n这也是标题\n----\n# 一级标题\n## 二级标题\n### 三级标题\n...\n###### 六级标题 \n\n\n下面是分割线啦\n\n-----\n\n\n`短的代码块`\n\n`Ctrl` + `A`\n\n\n*斜体字*\n\n**粗体**\n\n***粗斜体***\n\n\n~~删除线~~\n\n\n下面是列表\n\n- 列表1\n- 列表2\n- 列表3\n- ...\n- \n\n\n* 你好这里也是列表\n* 呵呵\n* \n* \n\n\n\u003e 引用一下别人的话\n\u003e 可以引用多句\n\n下面是一段python语言的代码\n```python\ndef hello():\n    s = \"hello world\"\n    return s\n\n```\n\n有序列表\n\n1. 沙僧\n2. 多岁的 \n3. 收到\n\n\n插入一个超链接\n\n[这是一个链接](http://www.baidu.com)\n\n\n[图片链接](http://ww4.sinaimg.cn/mw690/61268557gw1f4q73j8n2nj23342b4e84.jpg)\n\n直接插入图片\n\n\n![白日梦想家 The Secret Life of Walter Mitty][1]\n\n\n [1]: http://ww4.sinaimg.cn/mw690/61268557gw1f4q73j8n2nj23342b4e84.jpg\n\n\n\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\n\n\ndog | bird | cat\n----|------|----\nfoo | foo  | foo\nbar | bar  | bar\nbaz | baz  | baz\n\n\n\n\n\n\n","cover":"","link":"markdown-syntax.html","preview":"","title":"markdown 语法"},{"content":"\n\n右键菜单中的 以管理员身份运行 消失\n\nrefer to \n\u003e http://www.sevenforums.com/tutorials/200558-run-administrator-add-remove-context-menu-windows-7-a.html\n\nhere is the registry file content\n\n```reg\nWindows Registry Editor Version 5.00\n\n; Created by: Shawn Brink\n; http://www.sevenforums.com\n; Tutorial:  http://www.sevenforums.com/tutorials/200558-run-administrator-add-remove-context-menu-windows-7-a.html\n\n\n; For .bat file extention\n[-HKEY_CLASSES_ROOT\\batfile\\shell\\runas]\n\n[HKEY_CLASSES_ROOT\\batfile\\shell\\runas]\n\"HasLUAShield\"=\"\"\n\n[HKEY_CLASSES_ROOT\\batfile\\shell\\runas\\command]\n@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\\\n  00,5c,00,53,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,63,00,6d,00,\\\n  64,00,2e,00,65,00,78,00,65,00,20,00,2f,00,43,00,20,00,22,00,25,00,31,00,22,\\\n  00,20,00,25,00,2a,00,00,00\n\n\n\n; For .cmd file extention\n[-HKEY_CLASSES_ROOT\\cmdfile\\shell\\runas]\n\n[HKEY_CLASSES_ROOT\\cmdfile\\shell\\runas]\n\"HasLUAShield\"=\"\"\n\n[HKEY_CLASSES_ROOT\\cmdfile\\shell\\runas\\command]\n@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\\\n  00,5c,00,53,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,63,00,6d,00,\\\n  64,00,2e,00,65,00,78,00,65,00,20,00,2f,00,43,00,20,00,22,00,25,00,31,00,22,\\\n  00,20,00,25,00,2a,00,00,00\n\n\n\n; For .cpl file extention\n[-HKEY_CLASSES_ROOT\\cplfile\\shell\\runas]\n\n[HKEY_CLASSES_ROOT\\cplfile\\shell\\runas]\n\"HasLUAShield\"=\"\"\n\n[HKEY_CLASSES_ROOT\\cplfile\\shell\\runas\\command]\n@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\\\n  00,5c,00,53,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,72,00,75,00,\\\n  6e,00,64,00,6c,00,6c,00,33,00,32,00,2e,00,65,00,78,00,65,00,20,00,73,00,68,\\\n  00,65,00,6c,00,6c,00,33,00,32,00,2e,00,64,00,6c,00,6c,00,2c,00,43,00,6f,00,\\\n  6e,00,74,00,72,00,6f,00,6c,00,5f,00,52,00,75,00,6e,00,44,00,4c,00,4c,00,41,\\\n  00,73,00,55,00,73,00,65,00,72,00,20,00,22,00,25,00,31,00,22,00,2c,00,25,00,\\\n  2a,00,00,00\n\n\n\n; For .exe file extention\n[-HKEY_CLASSES_ROOT\\exefile\\shell\\runas]\n\n[HKEY_CLASSES_ROOT\\exefile\\shell\\runas]\n\"HasLUAShield\"=\"\"\n\n[HKEY_CLASSES_ROOT\\exefile\\shell\\runas\\command]\n@=\"\\\"%1\\\" %*\"\n\"IsolatedCommand\"=\"\\\"%1\\\" %*\"\n\n\n\n; For .msc file extention\n[-HKEY_CLASSES_ROOT\\mscfile\\shell\\RunAs]\n\n[HKEY_CLASSES_ROOT\\mscfile\\shell\\RunAs]\n\"HasLUAShield\"=\"\"\n\n[HKEY_CLASSES_ROOT\\mscfile\\shell\\RunAs\\command]\n@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\\\n  00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,00,\\\n  63,00,2e,00,65,00,78,00,65,00,20,00,22,00,25,00,31,00,22,00,20,00,25,00,2a,\\\n  00,00,00\n```\n\nCopy it and Save it as a *.reg file, then check the context menu! It's helpful to me\n\n","cover":"","link":"quot-missing-as-administratorquot-on-context-menu-run.html","preview":"","title":"Missing \u0026quot;Run as Administrator\u0026quot; on Context Menu"},{"content":"\n\n```powershell    \nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned\n```\n\n\u003e https://technet.microsoft.com/zh-CN/library/hh847748.aspx\n\n\n首先需要设置下powershell的脚本执行策略\n\n然后执行\n```powershell\niwr https://chocolatey.org/install.ps1 -UseBasicParsing | iex\n```\n进行安装choco\n...\n安装完成\n```bash\nchoco install spf13-vim\n```\n\n\n\n","cover":"","link":"choco-installation-spf13vim.html","preview":"","title":"choco 安装 spf13-vim"},{"content":"\n\n```python\nfrom flask import Flask,request,redirect\nimport os\napp = Flask(__name__)\n\n@app.route('/wget/')\ndef wget():\n    url = request.args.get('url')\n    filename = os.path.basename(url)\n    ext = filename.split('.')[-1]\n    os.system(\"wget -o /var/www/\"+filename +\" \"+url)\n    return redirect(\"http://llinx.me/%s\" % filename )\n\nif __name__ == \"__main__\":\n    app.run(host=\"llinx.me\")\n\n```\n\n调用方法:\n\n    http://llinx.me/wget/?url=\n\n下载完成之后自动跳转到\n    \n    http://llinx.me/文件名\n\n可以方便地使用这种方式下载国外速度很慢的资源, 当然必须是直链\n\n\n由于博客是使用的Typecho并做了伪静态, 因此url对应的目标文件不能是html文件\n\n\n后续将做这样的几件事\n1. php调用本地脚本实现运行这个 wget.py 文件\n2. 运行之后跳转到一个网页填写表单\n3. 表单填写完成之后, 将表单里的URL组合成请求链接,经过多次跳转实现,可视化的文件中转\n4. 文件下载完成之后, 关闭脚本, 这样可以不用长时间运行这个服务 \n\n\n","cover":"","link":"flask-download-server.html","preview":"","title":"Flask 之 中转下载服务器"},{"content":"\n\n```python   \nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/wget/\u003curl\u003e')\ndef wget(url):\n    # show the user profile for that user\n    return \"The Url is %s\" % url\n\nif __name__ == \"__main__\":\n    app.run()\n```\n","cover":"","link":"hello-world-flask.html","preview":"","title":"Flask 之 Hello World"},{"content":"\n\n首先，第三方提供DEMO在使用动态库时，都是静态引用而不是动态加载。\n如果想要自己在其库的基础上封装一层，应该有以下几个方面要注意下，对后续的开发和使用会有好处：\n\n\u003e 1. 不要使用string类型，如果仅仅是用于Delphi程序调用，那么需要添加引用共享内存单元\n\u003e 2. 建议在主程序加载这个自定义库之前先检查其依赖的其他文件是否齐全,某些情况下, 在正式环境下缺少文件, 会无法得知缺少了什么文件\n\u003e 3. 在dll中使用线程进行开发的时候,首先要注意线程的释放, 另外一个重要的方面是, 线程中可能出现的异常都应该谨慎对待, 如果不对这些异常进行妥善的处理, 将会出现致命的问题. 例如,异常可能导致线程锁死, 同理也适用于其他使用线程的场景\n\u003e 4. 变量的使用应考虑同一个EXE多次调用(多开)\n\u003e 5. 记录详细的日志, 毕竟Dll的调试相当的不容易\n\n类型对应关系:\n\n1. `Char*` \u003c==\u003e `PAnsiChar` 很多情况下不会是 PWideChar\n2. `BOOL` \u003c==\u003e `Boolean` 可以直接使用, Delphi已经对这种类型进行了兼容\n3. 指针 \u003c==\u003e `Pointer` 如果有特别说明是什么类型的指针, 那么使用对应的指针,例如 `int*` 对应 `PInteger`\n4. struct指针 \u003c==\u003e record的指针,如下声明\n\n\n```pascal\n    TRECORD = record\n     {成员声明}\n    end;\n    PRECORD = ^TRECORD;\n```\n\n调用的时候, 先声明 `RECORD:TRECORD` 类型的局部变量, 对成员赋值后, 传入 `@RECORD` 即可, 同样的 C的库调用时会要求传入结构体的Size 那么 `SizeOf(RECORD)`\n\n5. 对于返回或者参数为整数的. 应该声明常量进行调用, 防止后续开发中第三方库的接口变化的情况\n6. 返回的`ErrorCode`最好自己写一个方法进行处理\n7. C库的参数传入传出无需考虑, 因为核心的传递都是指针,不需要表明某个指针是out的\n8. 一个结构体如果没有用, 那么可以传入nil\n\n \n","cover":"","link":"delphi-to-do-two-development-based-on-the-c-dynamic-library.html","preview":"","title":"Delphi 做二次开发(基于C的动态库)"},{"content":"\n\nSkylake 的巨坑，U盘安装的时候，会提示没有驱动。 \n那么是什么驱动呢，其实是USB3.0的驱动，因为出现这种提示的时候，U盘处于未识别状态。 解决方案如下\n\nwindowsimagetool \n\n首先使用Ultraiso刻录一个Win7 的U盘安装盘，然后用这个工具处理这个U盘，大概需要10分钟左右，如果10几分钟了还没完成，那么重新来吧\n","cover":"","link":"skylake-installed-win7-prompted-not-to-drive.html","preview":"","title":"Skylake 安装 Win7时提示没有驱动"},{"content":"\n\n我可以玩一天，哈哈\n","cover":"","link":"i-found-that-the-mac-system-of-the-mouse-fast-moving-will-become-large-1.html","preview":"","title":"我发现：MAC系统的鼠标快速移动会变大"},{"content":"\n\n![白日梦想家 The Secret Life of Walter Mitty][1]\n\n\n  [1]: http://ww4.sinaimg.cn/mw690/61268557gw1f4q73j8n2nj23342b4e84.jpg\n","cover":"","link":"the-secret-life-of-walter-day-dreamer-mitty.html","preview":"","title":"白日梦想家 The Secret Life of Walter Mitty"},{"content":"\n\n最近在将程序的异常信息进行统一处理，认为这样的方式还不错\n\n首先需要一个ApplicationEvents改控件将捕获Application的异常并统一到一个地方，只要设置其OnException事件即可\n\n之前提到过Omni的异常捕获，目前以这样的方式来简化处理\n\n首先需要一个BaseForm，所有需要使用异步线程的窗体的父类。该窗体上放置OmniEventMonitor，设置其OnTaskMessage。\n在这个祖先类里做如下处理\n声明FTASK和procedure TASK\n在构造和析构的时候处理FTASK的生存，这样可以实现窗体销毁时自动结束线程，当然记得要WaitFor，线程需要等待其结束，就是这么任性，否则就等着遭殃吧\n\nOnTaskMessage里首先处理\nIF msg.msgID=MSG_ERROR then\n\n这里可以将传出的Exception直接raise出来给ApplicationEvents来处理，也可以自定义进行处理\n\n我使用这样的方式\n\n在自定义的异常处理类里声明拦截一个自定义消息，同时这个异常类对外提供一个无界面的窗体句柄用于接受消息，那么OnTaskMessage里将消息发送到这个句柄即可，理论上可以使用PostMessage来实现延迟处理异常\n\n如果在报异常的位置加入一些特殊的信息，例如单元名，那么可以做到很方便地定位一个异常\n","cover":"","link":"unified-treatment-of-delphi-anomalies.html","preview":"","title":"Delphi 异常的统一处理"},{"content":"\n\n线程里的异常会被系统吞噬掉，即使raise出来，在运行的时候也不会出现，而是悄无声息地消失了。而如果线程异常不处理，那么这个线程就会锁死，从而导致严重的后果，例如推出程序时，死在进程里，线程的恐怖啊\n\n现在有两种方式进行捕获其异常并转移到主线程来统一处理\n\n1. 通过其task.FATALException属性，可以在Omni的线程结束时获得其线程中的异常，当然普通的TThread也有一样的方法实现。这种方法是当异常发生时将终止后台异步线程的运行，直接结束，如果有使用try finally接口将一个FINISH的消息发出来的话，那么可以在TaskMessage里处理FINISH消息，从而获得异常信息。\n这个方法的缺点很明显，发生异常后，异常后面的代码都不会执行，除了finaly里的代码\n\n2. 在Task内部使用try except结构捕获异常，然后task.comm.send(MSG_ERROR,Exception)将异常发送到TaskMessage里进行处理即可\n这种方法的话可以保证即使线程里的一部分代码发生异常，其他剩余的代码仍然可以执行完成，不至于导致很不正常的结构\n\n因此选择第二种方法\n","cover":"","link":"omnithread-asynchronous-framework-to-achieve-the-exception-of-the-thread-capture.html","preview":"","title":"OmniThread 异步框架实现线程的异常捕获"},{"content":"\n\n地址是 [https://github.com/fabriciocolombo/DelphiLogger][1]\n\n代码很简单，已经把它放到了项目里使用了，总的来说还是很不错的，但是仍然需要很多的完善，吐槽如下吧\n\n首先两个核心单元\n`DLogger.Log.pas`\n`DLogger.Log.Logger.pas`\n\n第一个单元, 是基本单元，声明了ILogger和ILoggerFactory两个接口，并且实现了ILoggerFactory这个工厂接口，而前者相当于工厂里的工人\n\n工厂接口中主要做的就是 GetLogger 和 AddAppender\n通俗地讲就是 找到工人，添加设备\n\n前者用于在工厂实例中取得可以使用的Logger，工厂实例是自己管理生存周期的\n以这种形式 \n```pascal\nfunction LoggerFactory: ILoggerFactory;\nbegin\n  Result := TLoggerFactory.GetInstance;\nend;\n```\n很类似于TClipbrd这个类，用到的时候才会去创建，第二次就不需要创建了，即单实例\n然后GetLogger，可以根据提供的Logger名称取得唯一的实例，同时也可以传入一个类，当然最终都是一个字符串来对应一个Logger，如果对应名称的Logger未存在，则创建一个，可以存在多个Logger，也就是说，可以为程序里的每个类都创建一个Logger，这样就可以在输出日志的时候进行区分。Logger在进行写日志的时候，使用FLoggerNotifyAppenders通知实现它的对象，最终将调用Appender的Append方法进行实际的内容写入。\nappender可以由自己来进行自定义，那么可以实现，输出不同颜色的日志内容（根据不同的日志等级）\n\n以下不足需要进行二次修改\n\n1. 一旦将Appender注册到工厂中就不能将其移除，这样当某个时间想要将某一种日志输出形式关闭则无法做到，那么就会引起不必要的麻烦，比如Console输出，如果用函数FreeConsole关掉终端，则继续写入会报错\n\n2. 所有注册到工厂的Appender都是同步输出日志的，而工厂是单实例的，如此一来，无法实现一个程序中有多个地方要输出日志，但是不同位置输出的日志并不相同，所以这个日志框架有一定的局限性，比较适合用于输出异常日志\n\n针对以上的缺陷，我认为可以改造成下面这个样子\n\nLoggerFactory保留，但是Appender将其不归属于工厂，而是归属于Logger，即工厂不拥有设备，而是工人去管理设备，这样只要在程序初始化时将工人和设备进行绑定，应该可以实现工人之间相互独立，各干各的事儿，那么就可以实现输出多种类型的日志  \n\n\n\n\n\n\n\n\n\n  [1]: https://github.com/fabriciocolombo/DelphiLogger\n","cover":"","link":"dlogger.html","preview":"","title":"Dlogger"},{"content":"\n\n多次， 而且是很多次啊，最早的一个kirile.ml 申请的是一年的域名， 然而一年还没到，突然之间无法解析，被解析到一个奇怪的ip，然后过了一段时间，这个域名就变成了出售了，在Freenom的网站上查询，需要收费了。\n\n诡异的是，域名是突然从域名列表消失的，而且一年还没到。\n\n而这次也是一样， 干脆是三个域名全都莫名地消失了，干干净净， 没有痕迹\n\n这次看了下邮件，总算是有个原因了，说是无法访问主页，还有什么条例之类的，这不是扯淡么，我在大GFW都可以访问，你一个外国的还不能访问了，丫不会屏蔽了国内的dns服务器导致无法解析了吧，总之莫名其妙的\n\n算了免费的就是这样的了，想干嘛就干嘛\n\n唉，先用IP用着得了，准备过段时间看看能不能迁移到别的地方去，这服务器就拿来当梯子用好了，看看能不能稳定地跑finalspeed，不过超售严重的搬瓦工估计也没什么希望吧。也许也不打算再续费了\n","cover":"","link":"the-free-domain-name-for-freenom-is-completely-disappointed.html","preview":"","title":"对freenom的免费域名完全失望了"},{"content":"\n\n首先环境是OpenWrt的Shadowsocks，用的是明月永在的固件，里面包含了两种模式，白名单和黑名单\n\n最近Chrome看youku都卡成幻灯片，CPU直逼50啊，我都开始怀疑电脑性能是不是已经不行了，该死的Flash。 另外Chrome的滚动更是越来越卡。\n\n鉴于一直用固件自带的pdnsd和shadowsocks配合的方案，也有怀疑过网络问题。\n\n经过一番测试，发现youku在白名单模式下，打开的速度明显慢一半（隐私模式）。\n测试方式很简单，先无线连接到Openwrt的上级路由器（直接拨号），打开网站，目测其加载速度，发现输入网址后按回车，页面内容立马出来了，虽然其中一些图片要等一会才出来（PS：youku一定是穷死了吧，以前可不是这样的，当然也不排除我网络问题，但我可是20M，而且还是白天啊）。 然后在Openwrt下，不断切换shadowsocks的模式，发现黑名单模式下，加载速度和直接连上级路由器的速度基本一致，而白名单模式在回车后，标签页的圈圈要先转几圈才会出现主体页面。\n终于得出了结论，看来youku的某些地址应该在Openwrt的转发过程中，被使用VPS进行解析了\n\n然后就出事了，皇室战争开始掉线，那么必须要把其地址加入到黑名单中。刚开始还想用个数据包嗅探软件，然后笔记本发射个无线出来，后来发现复杂了。Fiddler有代理模式，于是下载安装Fiddler\n`Tools-\u003eFiddler Options-\u003eConnections`\n\nCHECK `Allow remote computers to connect`\n\n`Tools-\u003eFiddler Options-\u003eHTTPS `\nCHECK `Decrpty HTTPS traffic` \nCHECK `Ignore Server certificate errors(unsafe)`\n\n之后重启Fiddler，取得电脑的IP地址\n\n然后手机设置代理，端口为IP地址:8888，浏览器直接访问这个代理地址，在出来的成功页面里可以安装证书。不过我不需要抓浏览器，所以暂时不需要装证书。\n\n折腾了半天，抓出来的地址为 `service.supercell.net`\n\n然后我不禁开始猜想，部落冲突不会也是这个地址吧\n\n填入到Pdnsd中，正常，不会掉线了\n\n\n","cover":"","link":"fiddler4-capture-the-royal-war.html","preview":"","title":"Fiddler4抓包皇室战争"},{"content":"\n\n~~~之前一直都是挺正常的~~~ **不正常**！！！！之前还因为温度到了80度而重新涂了硅脂，今天突然发现，温度居高不下，开AIDA一看，不对劲，风扇满速在狂转，诡异的是CPU频率居然直接是最大频率。\n然后搜索了一下， 各种说是软件问题，病毒问题，驱动问题的。一群脑残。。。。。都说了CPU占用几乎没有了，瞎子吗\n\n后来尝试着打开电源计划的高级选项，发现处理器电源的最小状态是100％，我不想说话了。什么鬼，这个看起来很像我自己设置的选项是什么情况，于是果断调成5％,终于正常了\n","cover":"","link":"cpu-occupancy-rate-is-low-but-the-core-frequency-of-100.html","preview":"","title":"CPU占用率低，但是核心频率100"},{"content":"\n\n- Dash\n- Reeder\n- Shadowsocks\n","cover":"","link":"quality-app-os-x-mac.html","preview":"","title":"精品APP(MAC OS X)"},{"content":"\n\n注册信息\n邮箱地址：\n\nSoar360@live.com\n\n授权秘钥：\n```\n\nGBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==\n```\n","cover":"","link":"pro-markdownpad2-1.html","preview":"","title":"markdownpad2 pro"},{"content":"\n\n没了小键盘输入数字的速度直线下降，直接坠地而亡\n","cover":"","link":"into-the-v500-1.html","preview":"","title":"入了把V500"},{"content":"\n\n正在安装着爽呢，突然之间提示我，空间不够了，我一想不对，难道自带的那张卡是扩容的不成，拆下一看，**32G**， 于是我一脸懵逼了。 \n\n然后去搜索了一下，发现需要扩展\n\n```\nsudo raspi-config\n``` \n\n进入后第一个选项就是， 执行完后需要重启一次\n","cover":"","link":"pi-expansion-space.html","preview":"","title":"「Pi」扩展空间"},{"content":"\n\n    mysql -V\n    default-storage-engine = MyISAM\n    loose-skip-innodb\n    loose-innodb-trx=0\n    loose-innodb-locks=0\n    loose-innodb-lock-waits=0\n    loose-innodb-cmp=0\n    loose-innodb-cmp-per-index=0\n    loose-innodb-cmp-per-index-reset=0\n    loose-innodb-cmp-reset=0\n    loose-innodb-cmpmem=0\n    loose-innodb-cmpmem-reset=0\n    loose-innodb-buffer-page=0\n    loose-innodb-buffer-page-lru=0\n    loose-innodb-buffer-pool-stats=0\n\n待测试,看看跑一段时间后的情况如何\n","cover":"","link":"mysql-55-save-memory-configuration.html","preview":"","title":"MySQL 5.5 节省内存配置"},{"content":"\n\n注意不是PPI\n\n```\nsu\nwm size 1260x2240  # 乘号是英文字母x\nwm density 420\n```\n`/system/build.prop`\n`ro.sf.lcd_density=420` 这里要和上面的一致，否则会出现，微信图片错位，放大的情况\n\n\n然后重启，这样主界面就可以显示六个图标了，各种爽，图标虽然小了，但是完全正常。\n续航方面还不知道会怎么样，字体小可以调大字体。但是需要吐槽的是，设置里调大字体，主界面的字体居然不会受影响，啃爹啊\n","cover":"","link":"nexus6p-modified-resolution-and-dpi.html","preview":"","title":"nexus6p修改分辨率和DPI"},{"content":"\n\n四太子也算用了有两年多了，终于在换了n次电池 n次屏幕总成后，出现了异常情况\n\n首先是换了没多久的电池，说着说着就不行了，然后在某一次回家的路上，电量开始跳， 而且是40起跳，跟坠崖似的....... 总之最后就是完全开不了机，充电宝插上也没反应了，充电器插上也是一样，充个一天也依然闪红灯，后来试着插一天充电宝，马蛋回来看的时候，充电宝居然还是满的。\n于是放弃\n\n6p到手的时候不是特别兴奋，因为同住一哥们有个白色版的，由于apple死贵死贵的，略心疼。而安卓阵营的那些定制过的ROM实在让人没啥感觉，最后还是选了亲儿子\n\n用起来之后，感觉是相当的不错，首先就是电池，3400的电池，本来以为对于2K屏来说只能勉强支撑一天。 但相对于我的使用来说，完全出乎预料。\n\n目前的使用线是这样的。 早上起来，电量大概85左右，插上充电，快速充电，在洗漱的这段时间，完全可以在我出门的时候充到90+，不需要充到满。 然后白天如果偶尔拿起来刷网页什么的，晚上回来的时候基本有50的电。 然后睡觉前充满电拔下，床上玩一会睡觉。\n这样的线真的是相当愉快啊。 \n不过还是有担忧的，不知道会不会用一段时间后电池寿命下降，呵呵\n\n然后是指纹，都说很快，不过最近我的使用来说，感觉这个还是有一定的限制的，首先就是手指不能有很多油，我手指是有点手汗的，偶尔会出现没按实就需要再按一次的情况。要说快，其实我想说，我以前开发过的指纹识别模块也差不多是这个速度啊，重要的还是解锁那一块的程序优化了\n\n总之对于我这样一个轻度使用的人来说，完全无压力\n","cover":"","link":"nexus-4-retired-nexus6p-open-hi.html","preview":"","title":"Nexus 4的退役 Nexus6p开嗨"},{"content":"\n\n**引用**\n\u003e https://www.zabbix.com/documentation/3.0/manual/installation/install_from_packages\n\u003e http://www.zabbix.net.cn/viewtopic.php?f=13\u0026t=1096\u0026sid=c7083137d85cde63fad7c2430cfdee08\n\n```bash\nsudo su\napt-get install gettext\napt-get install unzip\napt-get install rar\n```\n\n## Zabbix 3.0 for Ubuntu 14.04 LTS:\n\n```bash\nwget http://repo.zabbix.com/zabbix/3.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_3.0-1+trusty_all.deb\ndpkg -i zabbix-release_3.0-1+trusty_all.deb\napt-get update\n```\n**Installing Zabbix packages**\n安装zabbix包\n\n**Example for Zabbix server and web frontend with mysql database.**\n安装zabbix的php前端和mysql服务器，中间会提示配置mysql的用户信息，本文以  `root:root` 为例\n```bash\napt-get install zabbix-server-mysql zabbix-frontend-php\n```\n**Example for installing Zabbix agent only.**\n安装zabbix客户端（本地也作为一个客户端）\n```bash\napt-get install zabbix-agent\n```\n**Creating initial database**\n\n**Create zabbix database and user on MySQL. For instructions on doing that, see database creation scripts for MySQL.**\n在mysql里创建一个zabbix的数据库 \n```bash\nmysql -uroot -proot\n```\n\n**Then import initial schema and data.**\n创建表结构\n```bash\ncd /usr/share/doc/zabbix-server-mysql\nzcat create.sql.gz | mysql -uroot -proot zabbix\n```\n\n**Edit database configuration in `zabbix_server.conf`**\n配置数据库信息\n```bash\nvi /etc/zabbix/zabbix_server.conf\n```\n```ini\nDBHost=localhost\nDBName=zabbix\nDBUser=root\nDBPassword=root\n```\n\n启动服务器\n```bash\nservice zabbix-server start\n```\n**Editing PHP configuration for Zabbix frontend**\n\nApache configuration file for Zabbix frontend is located in `/etc/apache2/conf.d/zabbix` or `/etc/apache2/conf-enabled/zabbix.conf`. Some PHP settings are already configured.\n配置zabbix专用的配置文件里php部分，修改时区\n```nginx\nphp_value max_execution_time 300\nphp_value memory_limit 128M\nphp_value post_max_size 16M\nphp_value upload_max_filesize 2M\nphp_value max_input_time 300\nphp_value always_populate_raw_post_data -1\n# php_value date.timezone Europe/Riga\n```\n最后一行，去掉＃号，时区改成 Asia/Shanghai\n```bash\nservice apache2 restart\n```\n\n然后浏览器登录：\n```\nhttp://YOURIP/zabbix\n```\n数据库帐号是root，密码是你设置的密码：root\n一路安装。。。web登录帐号是Admin／zabbix，基本ok！\n\n汉化\n```bash\nvi cd/usr/share/zabbix/include/locales.inc.php\n```\n把zh_CN后面参数写true\n```bash\napt-get install language-pack-zh-hant language-pack-zh-hans\nsudo vim /etc/environment\n```\n\n在文件中增加语言和编码的设置：\n```ini\nLANG=\"zh_CN.UTF-8\"\nLANGUAGE=\"zh_CN:zh:en_US:en\"\n```\n重新设置本地配置：\n```bash\nsudo dpkg-reconfigure localessudo dpkg-reconfigure locales\n```\n```bash\ncd /usr/share/zabbix/locale/zh_CN/LC_MESSAGES\nwget https://github.com/echohn/zabbix-zh_CN/archive/master.zip\nunzip master.zip\n```\n\n用包里的文件替换里面的文件\n安装字体\n```bash\nwget http://dx.sc.chinaz.com/Files/DownLoad/font2/dd.rar\nrar x dd.rar\n```\n把解压缩出来的msyh.ttf放到/usr/share/zabbix/fonts目录下面\n然后修改/usr/share/zabbix/include/defines.inc.php \n找到\n```php\ndefine('ZBX_GRAPH_FONT_NAME', 'graphfont'); // font file name\n```\n修改成：\n```php\ndefine('ZBX_GRAPH_FONT_NAME', 'msyh'); // font file name\n```\n```bash\nservice zabbix-server restart\n```\n\n一些提示 tips\n\n重新启动zabbix－server服务进程\n```bash\nservice zabbix-server restart\nservice zabbix-server restart\n```\n重启apache进程\n```bash\nservice apache2 restart\n```\n\n\n\n\n","cover":"","link":"zabbix-3-installation.html","preview":"","title":"Zabbix 3 安装"},{"content":"\n\n因为对win10做了清理, 并关闭了审核模式,所以Metro App都不能用,于是新版的图片浏览器也不能用\n\n下面是修改注册表方式\n\n    Windows Registry Editor Version 5.00 \n    \n    ; Change Extension's File Type \n    [HKEY_CURRENT_USER\\Software\\Classes\\.jpg] \n    @=\"PhotoViewer.FileAssoc.Tiff\" \n    \n    ; Change Extension's File Type \n    [HKEY_CURRENT_USER\\Software\\Classes\\.jpeg] \n    @=\"PhotoViewer.FileAssoc.Tiff\" \n    \n    ; Change Extension's File Type \n    [HKEY_CURRENT_USER\\Software\\Classes\\.gif] \n    @=\"PhotoViewer.FileAssoc.Tiff\" \n    \n    ; Change Extension's File Type \n    [HKEY_CURRENT_USER\\Software\\Classes\\.png] \n    @=\"PhotoViewer.FileAssoc.Tiff\" \n    \n    ; Change Extension's File Type \n    [HKEY_CURRENT_USER\\Software\\Classes\\.bmp] \n    @=\"PhotoViewer.FileAssoc.Tiff\" \n    \n    ; Change Extension's File Type \n    [HKEY_CURRENT_USER\\Software\\Classes\\.tiff] \n    @=\"PhotoViewer.FileAssoc.Tiff\" \n    \n    ; Change Extension's File Type \n    [HKEY_CURRENT_USER\\Software\\Classes\\.ico] \n    \n    @=\"PhotoViewer.FileAssoc.Tiff\" \n","cover":"","link":"enable-win10-traditional-image-viewer.html","preview":"","title":"启用Win10传统的图片浏览器"},{"content":"\n\n转自:[win10下EXCEL直接双击打开文档很慢的解决方案](http://bbs.pcbeta.com/viewthread-1653054-1-1.html)\n\n\u003e 1. 打开注册表\n\u003e 2. 打开HKEY_CLASSES_ROOT\n\u003e 3. 找到`Excel.Sheet.12/shell/Open/command` (这是xlsx的)\n\u003e 4. 修改右边默认项值：去掉末尾`/dde`，改成`/n \"%1\" /o \"%\"`（2013以前的版本只用加\"%1\"）\n\u003e 5. 修改command项值：也是去掉末尾`/dde`，改成`/n \"%1\" /o \"%u\"`（2013以前的版本只用加\"%1\"）\n\u003e 6. 删除open下的`ddeex` 网上很多教程都是漏掉了5、6两步\n\u003e 7. 对`Excel.Sheet.8`做一样的操作(这是xls的)，其他类型也同理\n","cover":"","link":"excel-under-thewin10-direct-doubleclick-to-open-the-document-is-very-slow-solution.html","preview":"","title":"[转]win10下EXCEL直接双击打开文档很慢的解决方案"},{"content":"\n\n右键babun左上角-\u003eOptions-\u003eText\n```ini\nLocale=zh_CN\nCharacter set=GBK\n```\n","cover":"","link":"babun-cygwin-chinese-garbled.html","preview":"","title":"babun cygwin 中文乱码"},{"content":"\n\n最近遇到个奇怪的问题, 搬瓦工的VPS不是最近有个新节点么,叫什么费洛蒙,正好在重新装了系统后就准备迁移一下看看速度怎么样。\n\n结果就是，过年期间，电信光纤情况下，延迟一直在300ms+，到后来干脆就是400ms+，于是准备迁移回去，然后问题出现了，迁移回洛杉矶数据中心后，出现了其他一切正常，但唯独无法爬梯子，郁闷了好久。后来ssh上去看了下，惊呆了，`VPS本身居然无法ping通任何地址`。但一时又找不到原因，于是只好换回费洛蒙凑活着，憋屈了n久了\n\n今天闲来无事，准备折腾下看看到底啥原因。 一番折腾后，发现是iptables也就是防火墙的原因，关闭了防火墙就正常连通了。  于是就各种查询iptables的用法，但是 `iptables -L`根本看不出什么异常，也就基本的 web ssh 服务的端口，还有个mysql服务的端口是 DROP，我差点就想找这货的茬儿了。\n\n漫长的搜寻总算是到头了，因为发现在`NAT`表里有奇怪，`POSTROUTING`链里有一条，虽然是`ACCEPT`，但是其目标地址不对，和当前ip不吻合\n\n于是\n\n```\niptables -t nat POSTROUTING -D 1\n/sbin/service iptables save\n/sbin/service iptables restart\n```\n\n搞定，至于原因可能是之前装openvpn的残留品\n","cover":"","link":"iptables-caused-by-vps-itself-can-not-access-the-internet-problem.html","preview":"","title":"iptables 导致的VPS本身无法访问外网问题"},{"content":"\n\n环境:\n\n\u003e - phpStudy 2016\n\u003e - phpstorm\n\u003e - Chrome\n\n流程:\n\n**phpstudy**\n\n`其他选项菜单`-\u003e`PHP扩展及设置`-\u003e`PHP扩展`-\u003e`Xdebug`\n\n`其他选项菜单`-\u003e`打开配置文件`-\u003e`php-ini`\n\n修改自动生成的内容如下\n\n```ini\n[XDebug]\nxdebug.profiler_append = 0\nxdebug.profiler_enable = 1\nxdebug.profiler_enable_trigger = 0\nxdebug.profiler_output_dir =\"D:\\phpstudy\\tmp\\xdebug\"\nxdebug.trace_output_dir =\"D:\\phpstudy\\tmp\\xdebug\"\nxdebug.profiler_output_name = \"cache.out.%t-%s\"\nxdebug.remote_enable = 1\nxdebug.remote_handler = \"dbgp\"\nxdebug.remote_host = \"127.0.0.1\"\nxdebug.remote_port = 9001\nxdebug.idekey = PHPSTORM\nzend_extension=\"D:\\phpstudy\\php53\\ext\\xdebug.dll\"\n```\nOK重启Apache\n\n**phpstorm**\n\n`File`-\u003e`Setting`-\u003e`Language \u0026 Framworks`-\u003e`PHP`\n\n`Servers`\n添加一个服务器\n```yaml\nName:localhost\nHost:localhost\nPort:80\nDebugger:Xdebug\n```\n`Debug`-\u003e`Xdebug`\n```yaml\nDebug port:9001 \n```\n`Debug`-\u003e`DBGp Proxy`\n```yaml\nIDE Key:PHPSTORM\nHost:127.0.0.1\nPort:80\n```\n\n\n\n两种方法进行调试:\n1. `Shift`+`F9`\n2. \n- Chrome安装`xdebug helper`,并配置好\n- 点击界面右上角 `Start Listening for PHP Debug Connections`\n- 访问`localhost`\n\n\nPS:\n\n- 如果发现基于MySQL的PHP程序异常慢, 请把代码中或程序配置中的`localhost`改为`127.0.0.1`\n","cover":"","link":"xdebug-php-debugging-phpstorm.html","preview":"","title":"phpstorm XDebug调试PHP"},{"content":"\n\n[这里是地址http://mirrors.ustc.edu.cn/](http://mirrors.ustc.edu.cn/)\n中科大的镜像, 包括一堆实用的源\n\nOpenwrt换了这个源简直爽翻了,刚瞄到Homebrew的镜像, 改天果断找个教程换之\n","cover":"","link":"source-mirror-ustc.html","preview":"","title":"源镜像 USTC"},{"content":"\n\n方法：\n\n\u003e 1. Root Explorer在手机存储的 `/data/data/` 目录下搜索`launcher.db`, 因为有时候不一定是`com.android.launcher`,特别是山寨机\n\u003e 2. win下随便下一个SqlLite数据库可视化工具,然后打开`launcher.db`,定位到`favorites`表, 删除不需要的条目\n\u003e 3. 把文件传回去覆盖\n\u003e PS: 当然需要ROOT权限,没ROOT也不至于会出现残留啥的\n","cover":"","link":"android-desktop-residue-icon-cleanup-green-robot.html","preview":"","title":"安卓桌面残留图标清理（绿色机器人）"},{"content":"\n\n本来是在VPS换系统的同时, 想顺便把VPS的IPv6地址给用起来, 然后各种折腾Openvpn配置, 搞最后连连接上也就那么一次, 经常性地处于重连状态, 然后偶然就看到了原来我这个刚办的光纤宽带(2016光改线路,8M带宽,实际是1.1M/s),居然还有IPv6地址. \n\n大致设置了一下DNS和IPv6优先级, 就可以看IPv6的IPTV了, 而且很高清, 突然发现我已经好久没有看这么高清的视频了, 那时候还是在学校里.....(省略5000字感慨)\n\n但是我的OpenWrt居然拨号后没有IPv6地址分配, 预计近期就又到了刷固件时期了, 大致准备上 [https://github.com/gygy/gygy.github.io](https://github.com/gygy/gygy.github.io) 这个,看起来还不错, 尝试一下, 如果不行就回到Openwrt BB版本 CC版本感觉不是特别好\n\n\n \n","cover":"","link":"optical-fiber-actually-supports-ipv6.html","preview":"","title":"电信光纤居然支持IPv6了"},{"content":"\n\n```    \nlsattr -a\nchattr -i\n\n```\n\n第一个命令查看文件是否带有 i 属性\n第二个命令去除文件的 i 属性\n    \n","cover":"","link":"linux-in-the-root-user-to-delete-the-file-prompt-not-permitted-operation.html","preview":"","title":"Linux在root用户下删除文件提示,Operation not permitted "},{"content":"\n\n \u003e 原系统: Ubuntu 12.04\n \u003e 目标系统: CentOS 6\n\n###准备\n- Snapshots 建立快照\n- 备份数据库\n- 备份主题和插件\n- 备份nginx配置和php配置\n\n###流程\n\n- 更换系统Install New OS\n- 使用lnmp安装环境,虽然这个比较慢,但总归少了很多弯路\n- `/usr/local/nginx/conf/nginx.conf` 的 `server` 段的 `include` 修改为\n    \n```\n    include enable-php-pathinfo.conf;  ##开启pathinfo功能\n    include typecho.conf;              ##typecho的伪静态    \n```\n- 创建mysql数据库\n- 安装Typecho,还原数据库\n- 恢复插件和主题\n \n\n","cover":"","link":"vps-exchange-system-ubuntucentos.html","preview":"","title":"VPS换系统 Ubuntu-\u0026gt;CentOS"},{"content":"\n\n```bash\n rm -r /tmp/luci-indexcache\n```\n\n\n\u003e https://forum.openwrt.org/viewtopic.php?id=54417\n","cover":"","link":"bad_argument_-1_to_-pairs-_-table_expected_got_nil-1.html","preview":"","title":"bad argument #1 to 'pairs' (table expected got nil)"},{"content":"\n\n![](http://ww4.sinaimg.cn/large/61268557gw1ezm3ga71hsj20sw03jdg4.jpg)\n\n![](http://ww2.sinaimg.cn/large/61268557gw1ezm3jbj3s8j20hs089wf0.jpg)\n\n![](http://ww3.sinaimg.cn/large/61268557gw1ezm3o6gj9xj20hq09ddgj.jpg)\n\n","cover":"","link":"openwrt_lankou-gai-wankou.html","preview":"","title":"Openwrt Lan口改WAN口"},{"content":"\n\n首先是DevExpress的合并\n\n1. 必须要经历的过程，手动编译安装DevExpress的所有包，需要保证直接`右键` -\u003e `工程组` -\u003e `build all`-\u003e多选`dcl`开头的包-\u003e'Install',这个过程可以一气呵成地完成，否则进行调整包的顺序，当然`安装`这个不是硬性要求，因为合并bpl并不是合并设计期包而是运行期包。总之，最终得到的就是DevExpress的包顺序了。\n\n2. 提取所有`dpk`的`contains`部分的单元按照顺序放入新的dpk中，如果编译后提示需要add什么东西，那么是因为`那个包的单元没有放全`，保持成dxpack.dpk之类的名字，工程配置如下\n\n\u003e RELEASE \n\u003e Description: `Runtime Only` \u0026\u0026 `Explicit rebuild`\n\u003e Unit Scope: ADD `vcl` `vcl.imaging` `Bde` `vcl.shell` etc. if some unit not found\n\n3. 实际使用工程一个大的工程进行测试，因为我发现虽然可以编译但不是随便一个工程带上上面出来的包就可以正常运行的，会报各种恶心的内存错误，于是需要进行下一步\n\n4. 尝试注释一部分单元，然后再慢慢加回来，如果发现无法继续加入，那么，重新建一个dpk讲剩下的单元放到新的包里，requires里写上dxpack，这样这两个包就是一体的了，然后会发现居然正常不报错了\n\n\nDelphi XE8 rtl vcl包的合并\n\n待更新\n","cover":"","link":"delphi_he-bing-bpl_shuai-de-keng.html","preview":"","title":"Delphi 合并BPL 摔的坑"},{"content":"\n\n最近由于没有关注，之前使用的域名`kirile.ml`过期了，还差点就怀疑是不是被回收了，然后现在也不能注册回来，想了想还是算了吧，也不是特别有意义的域名，以后有可能还是自己去买一个比较好，目前就先玩着好了\n\n于是起因大概就是这个了，由于typecho内部有个绑定域名的功能，然后我在使用IP或者现在这个name访问的时候会出现无法load CSS的情况，一想也差不多了，之前一直有想把typecho换成hexo的想法，于是一下午就在折腾hexo\n\n那么，吐槽开始：\n\n1. 并不轻量级啊，至少安装的过程就很慢,瞅瞅\n![200多个](http://ww3.sinaimg.cn/mw690/61268557gw1ezj5fgtrk9j20a10bot91.jpg)\n\n够不够大\n\n2. 代码高亮没有（很明显，配置里已经开启了highlight了），本来以为是主题的问题，用默认的也一样，难道是3.0的问题吗，总之一片黑色，醉了\n\n3. tags目录下没有index.html categories目录也一样，而 archives 目录下是有的，这搞个什么鬼啊，于是就各种403了，真的怀疑是不是版本问题\n\n\n\n","cover":"","link":"tu-cao-xia-gai-si-de-hexo.html","preview":"","title":"吐槽下该死的hexo"},{"content":"\n\n\n`InputBox('请输入管理密码', #13+'管理密码', '')`\n\n只需要在第二个参数前加入一个小于`#32`的ASCII的字符即可\n","cover":"","link":"delphi_inputbox_shu-ru-kuang-li-shu-ru-mi-ma-1.html","preview":"","title":"Delphi InputBox 输入框里输入密码"},{"content":"\n\n\n\n打开Firewall 和 Update服务,然后添加信任位置\n","cover":"","link":"nei-cun-huo-ci-pan-kong-jian-bu-zu-_excel.html","preview":"","title":"内存或磁盘空间不足 excel"},{"content":"\n\n 1. 等待初始化\n 2. 导出下载，设置\n 3. `ADD RPC`添加一个RPC地址\n 4. ### 删除下载路径 ###\n 5. aria2的配置文件中设置dir参数\n\nPS：本来还想拿github上的源码改改看能不能将RPC地址和下载路径结合在一起的，无奈不知道怎么下手\n\nPS2：Aria2的RPC模式，逻辑应该是这样\n\n1. 用命令行带参数或者加 `--conf-path`带配置文件启动的作用是一样的，\n  就是指定在`本次`运行期间，不会变的参数，例如下载路径、线程数\n2. 而其他参数则通过往 `http://localhost:6800/jsonrpc`发送POST数据包来指定\n3. 如果POST过去的数据包中包含某个参数，则使用数据包中的参数，否则使用命令行参数和配置文件中的参数\n","cover":"","link":"baiduexporter_duo-rpcdi-zhi-she-zhi.html","preview":"","title":"BaiduExporter 多RPC地址设置"},{"content":"\n\n## 二级路由（OPENWRT）配置 \n状态-\u003e概览-\u003eIPv4 WAN状态的IP地址 记录下来\n`网络`-\u003e`防火墙`-\u003e`通信规则`-\u003e`打开路由器端口` 6800-\u003e点`添加`\n## 一级路由配置\n\n转发规则-\u003e虚拟服务器 添加6800端口,ip填 IPv4 WAN状态的IP地址 设置并登陆动态DNS，如果一级路由器长期运行，直接记住ip更省事儿\n","cover":"","link":"二级路由 openwrt aria2远程下载.html","preview":"","title":"二级路由 openwrt Aria2远程下载"},{"content":"\n\n```    \nfrxpreview.PreviewPages.Engine.Running\n```\n","cover":"","link":"frxpreview 预览中的状态判断.html","preview":"","title":"frxpreview 预览中的状态判断"},{"content":"\n\n```pascal\n    FAnonTask := CreateTask(\n        procedure (const task: IOmniTask) begin\n          task.Comm.Send(0, Format('Hello, world! Reporting from thread %d',\n            [GetCurrentThreadID]));\n        end,\n        'HelloWorld')\n      .OnMessage(\n        procedure(const task: IOmniTaskControl; const msg: TOmniMessage) begin\n          lbLog.ItemIndex := lbLog.Items.Add(Format('%d:[%d/%s] %d|%s',\n            [GetCurrentThreadID, task.UniqueID, task.Name, msg.msgID,\n             msg.msgData.AsString]));\n        end)\n      .OnTerminated(\n        procedure(const task: IOmniTaskControl) begin\n          lbLog.ItemIndex := lbLog.Items.Add(Format('[%d/%s] Terminated',\n            [task.UniqueID, task.Name]));\n          btnHello.Enabled := true;\n          FAnonTask := nil;\n        end)\n      .Run;\n```\n\n","cover":"","link":"omnithreadlibrary 匿名事件监视.html","preview":"","title":"OmniThreadLibrary 匿名事件监视"},{"content":"\n\n```pascal\n       case msg.MsgID of\n         1:\n         begin\n            ClientDataSet2.Data := msg.MsgData.AsVariant;\n            ClientDataSet2.Open;\n         end;\n         2:Label1.Caption := 'start';\n         3:Label1.Caption :='end';\n         4:Label1.Caption := 'sleep';\n       end;\n```\n```pascal\n    procedure GetAll( const task:IOmniTask);\n    var\n      aa:TClientRuleClient;\n      f:OleVariant;\n      msgData: TOmniValue;\n      msgID  : word;\n    begin\n      task.Comm.Send(2,'start');\n      Form1.ClientDataSet2.Close;\n      aa:=TClientRuleClient.Create(Form1.SQLConnection1.DBXConnection);\n      f:= aa.GetAll;\n      FreeAndNil(aa);\n     // Form1.ClientDataSet2.Data := f;\n      if task.Comm.Receive(msgID,msgData) then begin\n         if msgID = 0 then Exit;\n      end;\n      task.Comm.Send(4,'sleep');\n      Sleep(3000);\n    \n      task.Comm.Send(3,'end');\n      task.Comm.Send(1, tomnivalue.CastFrom(f));\n    end;\n```\n","cover":"","link":"omnithreadlibrary 传递数据.html","preview":"","title":"OmniThreadLibrary 传递数据"},{"content":"\n\n    TTask.Run(\n        procedure\n        var\n          aa: TClientRuleClient;\n        begin\n          aa := TClientRuleClient.Create(SQLConnection1.DBXConnection);\n          ClientDataSet1.Data := aa.GetAll;\n          ClientDataSet1.Open;\n          FreeAndNil(aa);\n        end\n    );\n","cover":"","link":"delphi itask 异步.html","preview":"","title":"Delphi ITASK 异步"},{"content":"\n\n   ```pascal \n    uses OtlCommon,OtlParallel,OtlEventMonitor,OtlTask,OtlTaskControl,OtlComm;\n    //主线程中的消息处理\n    procedure TForm1.OmniEventMonitor1TaskMessage(const task: IOmniTaskControl;\n      const msg: TOmniMessage);\n    begin\n       case msg.MsgID of\n         1:ClientDataSet2.Open;\n         2:Label1.Caption := 'start';\n         3:Label1.Caption :='end';\n         4:Label1.Caption := 'sleep';\n       end;\n    end;\n    //任务创建\n    procedure TForm1.Button5Click(Sender: TObject);\n    begin\n      FTASK:=OmniEventMonitor1.Monitor(CreateTask(GetAll,'GetAll')).Run ;\n    end;\n    //任务体\n    procedure GetAll(const task:IOmniTask); //参数必须是这样子\n    var\n      aa:TClientRuleClient;\n      f:OleVariant;\n    begin\n      task.Comm.Send(2,'start');\n      Form1.ClientDataSet2.Close;\n      aa:=TClientRuleClient.Create(Form1.SQLConnection1.DBXConnection);\n      f:= aa.GetAll;\n      FreeAndNil(aa);\n      Form1.ClientDataSet2.Data := f;\n    \n      task.Comm.Send(4,'sleep');\n      Sleep(3000);\n      task.Comm.Send(3,'end');\n      task.Comm.Send(1,'task terminated');\n    end;\n```\n","cover":"","link":"omnithreadlibrary  task任务和消息监听.html","preview":"","title":"OmniThreadLibrary  TASK任务和消息监听"},{"content":"\n\n```pascal\n    uses OtlParallel;\n    Label1.Caption :='waiting...';\n    Async(\n        procedure\n        var\n          aa: TClientRuleClient;\n        begin\n          aa := TClientRuleClient.Create(SQLConnection1.DBXConnection);\n          ClientDataSet2.Data := aa.GetAll;\n          FreeAndNil(aa);\n        end)\n    .Await(\n        procedure\n        begin\n           ClientDataSet2.Open;\n           Label1.Caption :='end'\n        end\n    );\n```\n将和UI操作无关的部分代码和操作UI相关的代码进行分离\n","cover":"","link":"omnithreadlibrary async await异步编程.html","preview":"","title":"OmniThreadLibrary Async \u0026Await异步编程"},{"content":"\n\nVarIsEmpty  \n一个Olevariant的变量,已声明,但是未赋值,则为Empty\nVarIsNull\n可以手动给OleVariant赋值为null\n","cover":"","link":"delphi  olevariant 类型的判断.html","preview":"","title":"Delphi  OleVariant 类型的判断"},{"content":"\n\n之前用 `pdnsd` 突然之间就觉得不好用了，那时候还完全不熟悉这个家伙，前几天买了个带USB的wr841n，\n再次折腾的时候，由于折腾半天没搞定 `dnsmasq+ipset` 的配置，搞到最后还上不了网了，然后偶然就发现 `pdnsd` 比`ipset`要方便\n\n配置过程：\n先PS一下：我需要的自动穿越应该是这样的，可以手动添加域名（而不是ip，因此排除ChinaDNS），我自己发现相应的域名之后，自己添加，不需要那么智能，因为我看的网站也不多么\n\n1. 惯例先给 openwrt 上网，使用桥接，`搜索网络`，然后 `加入网络` , 然后关键的一步 `重置无线配置` 把这个勾去掉，不去掉的话，确认完原来的无线就没有了，要重新添加。我刷的明月的固件，因此开始就已经有无线（基于lan接口），没必要再添加一次，特别是如果无线连接到路由器那就绝对不能勾选了（因为桥接的时候肯定要把路由放在`奇怪`的位置）。如果无线不能上网，有线可以上网\n请检查，无线对应的接口配置的网络那里是不是勾选了lan\n\n2. Shadowsocks \n  \n   * 启动前等待改为1或0，因为我不多拨\n   * 代理方式为忽略列表，这样启动完成后就可以看是不是成功了\n   * UDP转发关掉\n   * 点一次 `保存\u0026应用`就可以了，点一次 `保存\u0026应用`就可以了，点一次 `保存\u0026应用`就可以了重要的事说三遍，然而我点了好多次....\n3. pdnsd \n   * 排除国内DNS解析 这个行最前面加#\n   * 上级 dns 的 ip 地址自己选，支持自定义端口，本来想用我自己的，后来发现 208.67.220.220 ，速度其实还行，我之前一直觉得opendns挺慢的\n   * gfw配置文件里 server=/域名/127.0.0.1#1053这样的格式添加即可，不需要配置iptables，方便多了\n  * 保存应用\n4. DNS转发设置为 127.0.0.1#1053，OK搞定\n","cover":"","link":"[openwrt] ss+pdnsd 代替ipset, 透明.html","preview":"","title":"[Openwrt] ss+pdnsd 代替ipset, 透明"},{"content":"\n\n现有几个无线两个是20M，一个5M，但其实不是时时能满速的，不过一个是移动宽带，估计会出现困难\n\n至于带USB的么，之前买openwrt的时候看带USB要100，想想也没啥实际用处于是就选了60多的那种不带USB的\n现在一看带USB的价格也低了，反正闲来无事，折腾走起，等我买了再说\n","cover":"","link":"｢预告｣ 带usb的openwrt+多个wifi网速叠加.html","preview":"","title":"｢预告｣ 带USB的openwrt+多个WiFi网速叠加"},{"content":"\n\n- SSH连接到服务器\n- 查看-隧道窗格-转移规则\n- 右键-\u003e添加...  \n\u003e 类型:Dynamic(SOCKS4/5)\n\u003e 侦听端口: 1080\n- 一路确定即可\n- 设定浏览器代理\n\nPS：\n# IE的SOCKS5代理设置\nInternet选项-连接-局域网设置-代理服务器-高级-设置“套接字” `127.0.0.1` `1080`\n","cover":"","link":"xshell sock5代理.html","preview":"","title":"XShell Sock5代理"},{"content":"\n\n问题\nMSBuildToolsPath is not specified for the ToolsVersion \"14.0\"defined at \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\ToolsVersions\\14.0\", or the value specified evaluated to the empty string \n\n\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\MSBuild\\ToolsVersions\\14.0\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\MSBuild\\ToolsVersions\\14.0\n\n两个地方都删除\n","cover":"","link":"delphi xe5 msbuildtoolspath 14.0 问题.html","preview":"","title":"Delphi XE5 MSBuildToolsPath 14.0 问题"},{"content":"\n\n1. 在UniConnection和UniQuery在的DataModule上创建新的FDConnection和FDQuery，重命名UniConnection\n为uniConnection1，FDConnection重命名为UniConnection，FDQuery同理\n2. 替换代码中TUniConnection为TFDConnection，这一步比较麻烦，可以使用Gexpert的F2功能进行，会比较快\n，以及各种引用的时候，CommandText替换为Command.CommandText.Text\n3. 替换字段类型\n- TBCDField -\u003eTFMTBCDField\n- TCurrency -\u003eTFMTBCDField\n- TSQLTimeStampField -\u003eTDateTimeField\n4. FDConnection 中 Options添加Data Mapping Rules\n","cover":"","link":"delphi xe5 uni控件替换为firedac控件的具体方法.html","preview":"","title":"Delphi XE5 Uni控件替换为FireDAC控件的具体方法"},{"content":"\n\n已经是删除了除了dpr文件之外的文件，让ide重新生成了，依然\n据说在dproj中加这么一行就可以打开了\n\n`\u003cProjectVersion\u003e15.1\u003c/ProjectVersion\u003e`\n\n具体版本号找个已有可打开的文件看一下\n","cover":"","link":"delphi xe5 打开老版本工程access violation delphicoreide190.bpl.html","preview":"","title":"Delphi XE5 打开老版本工程Access violation delphicoreide190.bpl"},{"content":"\n\nHTTP的扩展\n\nGET获得资源\nhttp://www.example.com 这是网站地址\n 如果在后面加上 api/demands 这样表示资源的地址,意思是一些需求的集合\n 那么 http://www.example.com/api/demands/GetDemandsAll 可以获取到所有资源的一个列表,以json 数组的形式返回给客户端\n \n http://www.example.com/api/demands/GUID 这样可以将GUID作为参数传入,从数据库中查询到 符合条件的数据返回\n \n POST\n 这个不一样了,参数不是在URL里传递,而是以HTTP包的形式\n  http://www.example.com/api/demands\n  \n  构造一个JSON数据包,里面定义Method为POST 然后将需要新增的数据放在包里，发送给服务器即可完成添加数据的任务\n  \n  PUT也是一样，只不过会对已有的数据进行修改\n  \n  DELETE\n   http://www.example.com/api/demands/GUID 在这样的地址之下发送DELETE METHOD 则会删除对应的数据\n   \n   其实不同的Method只是引导服务器去调用不同的服务器方法而已，具体要在方法里要干什么都是随意的，比如可以实现DELETE发过去只是返回一条数据，而不进行删除操作\n  \n  # 验证\n  添加CustomHeader\nRESTClient.HTTPClient.Request.CustomHeaders.Add(FAuthCode);\n  \n  \n  \n  \n \n \n\n","cover":"","link":"restful.html","preview":"","title":"RESTful"},{"content":"\n\n![](http://ww1.sinaimg.cn/large/61268557gw1eu6zt935y1j20g40anjsk.jpg)\n","cover":"","link":"谷歌怀疑我是机器人.html","preview":"","title":"谷歌怀疑我是机器人"},{"content":"\n\n```bash\n##自带flash\nmkdir -p ~/Library/Application\\ Support/Google/Chrome/Default/Pepper\\ Data/Shockwave\\ Flash/System\ntouch ~/Library/Application\\ Support/Google/Chrome/Default/Pepper\\ Data/Shockwave\\ Flash/System/mms.cfg\necho \"RTMFPP2PDisable=1\" \u003e\u003e ~/Library/Application\\ Support/Google/Chrome/Default/Pepper\\ Data/Shockwave\\ Flash/System/mms.cfg\n##MAC Chrome Pepper Flash\n/Users/用户名/Library/Application Support/Google/Chrome/Profile 2/Pepper Data/Shockwave Flash/System\n## /Users/用户名/Library/Application Support/Google/Chrome/Profile 2 这一部分在 `chrome://version/` 页面获取\n```\nSystem文件夹需要新建一个\n","cover":"","link":"flash p2p mac.html","preview":"","title":"flash P2P MAC"},{"content":"\n\n猫的型号为：ZXDSL 831 网上查了下，管理IP为192.168.1.1\n\nOpenwrt WAN口对应的网卡为eth1 \n\nifconfig eth1 192.168.1.2 netmask 255.255.255.0\niptables -t nat -A POSTROUTING -d 192.168.1.1 -j MASQUERADE\n","cover":"","link":"openwrt 方法猫管理界面.html","preview":"","title":"Openwrt 方法猫管理界面"},{"content":"\n\n主帐户下下载✅，然后切换到客人帐户下安装\n","cover":"","link":"mac-os-x-10-10-4-update-to-14e46-not-verified.html","preview":"","title":"Mac OS X 10.10.4 更新（14E46）安装时提示 验证失败"},{"content":"\n\n\n\n```bash\nmvim .zshrc\n```\n\n```\n\t\t# Fix numeric keypad  \n\t\t# 0 . Enter  \n\t\tbindkey -s \"^[Op\" \"0\"  \n\t\tbindkey -s \"^[On\" \".\"  \n\t\tbindkey -s \"^[OM\" \"^M\"  \n\t\t# 1 2 3  \n\t\tbindkey -s \"^[Oq\" \"1\"  \n\t\tbindkey -s \"^[Or\" \"2\"  \n\t\tbindkey -s \"^[Os\" \"3\"  \n\t\t# 4 5 6  \n\t\tbindkey -s \"^[Ot\" \"4\"  \n\t\tbindkey -s \"^[Ou\" \"5\"  \n\t\tbindkey -s \"^[Ov\" \"6\"  \n\t\t# 7 8 9  \n\t\tbindkey -s \"^[Ow\" \"7\"  \n\t\tbindkey -s \"^[Ox\" \"8\"  \n\t\tbindkey -s \"^[Oy\" \"9\"  \n\t\t# + - * /  \n\t\tbindkey -s \"^[Ol\" \"+\"  \n\t\tbindkey -s \"^[Om\" \"-\"  \n\t\tbindkey -s \"^[Oj\" \"*\"  \n\t\tbindkey -s \"^[Oo\" \"/\"  \n```\n\nFrom:[Link](http://blog.csdn.net/qibaoyuan/article/details/42963499)\n","cover":"","link":"zsh 使用小键盘.html","preview":"","title":"zsh 使用小键盘"},{"content":"\n\n### 安装\n\n    brew install proxychains-ng\n### 配置    \n    \n    cd /usr/local/etc\n    vi proxychains.conf\n`[ProxyList]`段修改为`socks5  192.168.10.1 1081`\n\n### 个性化\n\n    cd /usr/local/Cellar/proxychains-ng/4.8.1/bin/\n    //重命名原二进制文件名\n    mv proxychains4 pc\n    //建立新的链接\n    ln -s pc /usr/local/bin/pc\n    //移除原链接\n    rm proxychains\n    \n### 使用\n\n    pc curl twitter.com\n","cover":"","link":"proxychain 配置.html","preview":"","title":"proxychain 配置"},{"content":"\n\n### 安装\n\n    brew install aria2\n    mkdir .aria2\n    cd .aria2\n    vi aria2.conf\n\n### 配置\n\n    #允许rpc\n    enable-rpc=true\n    #允许所有来源, web界面跨域权限需要\n    rpc-allow-origin-all=true\n    #允许外部访问，false的话只监听本地端口\n    rpc-listen-all=true\n    #最大同时下载数(任务数), 路由建议值: 3\n    max-concurrent-downloads=5\n    #断点续传\n    continue=true\n    #同服务器连接数\n    max-connection-per-server=5\n    #最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要\n    min-split-size=10M\n    #单文件最大线程数, 路由建议值: 5\n    split=10\n    #下载速度限制\n    max-overall-download-limit=0\n    #单文件速度限制\n    max-download-limit=0\n    #上传速度限制\n    max-overall-upload-limit=0\n    #单文件速度限制\n    max-upload-limit=0\n    #文件保存路径, 默认为当前启动位置\n    dir=/Volumes/DATA/thunder\n            ⬆️文件保存路径\n    #文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长\n    #所需时间 none \u003c falloc ? trunc \u003c\u003c prealloc, falloc和trunc需要文件系统和内核支持\n    file-allocation=prealloc\n\n\u003e :wq\n\n### 运行\n- 终端执行\n\n\n\n    aria2c -D\n\n- VPS上执行\n\n\n    cd /var/www\n    git clone https://github.com/binux/yaaw\n\n- 访问 [链接](http://kirile.ml/yaaw/index.html)\n\n- 右上角的`Setting` ，改 `JSON-RPC Path` 为 `http://127.0.0.1:6800/jsonrpc`\n- [Chrome 插件 包括 迅雷离线/QQ旋风/百度网盘/360云盘等导出下载到 aria2](https://chrome.google.com/webstore/detail/mblmc%E8%BF%85%E9%9B%B7%E7%A6%BB%E7%BA%BFqq%E6%97%8B%E9%A3%8E%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98360%E4%BA%91%E7%9B%98%E7%AD%89ar/iamaphkapjbdhhpdapkalhanifedeged) \n- [115网盘chrome插件](https://chrome.google.com/webstore/detail/115exporter/ojafklbojgenkohhdgdjeaepnbjffdjf)\n- [添加到Aria2 接管普通下载](https://chrome.google.com/webstore/detail/%E6%B7%BB%E5%8A%A0%E5%88%B0aria2/nimeojfecmndgolmlmjghjmbpdkhhogl)\n- [BaiduExporter 据说可以破百度的限速](https://chrome.google.com/webstore/detail/baiduexporter/mjaenbjdjmgolhoafkohbhhbaiedbkno)\n\n\n","cover":"","link":"aria2c 的配置.html","preview":"","title":"Aria2c 的配置"},{"content":"\n\n - cocoapods是XCODE开发时使用的第三方库管理工具\n\n\n----------\n\n## 安装\n\n    brew cask install cocoapods\n    或\n    sudo gem install cocoapods\n    //前者的版本会比后者低一点\n\n    pod repo remove master\n    pod repo add master http://git.oschina.net/akuandev/Specs.git\n    pod repo update\n    //这是官方自己的specs库，如果网络连github的速度还可以的化可以用这个 https://github.com/CocoaPods/Specs.git\n\n## 使用\n\n  1.  `pod setup`  第一次使用执行一次，看网络速度\n  2.  终端，`cd`到项目目录下，`vi Podfile`\n\u003e Podfile 格式\n\u003e 第一行 `platform :ios, '8.2'`\n\u003e 第二行 `inhibit_all_warnings!`\n\u003e pdo ‘库名’,库信息\n\u003e \u003e `pod 'AFNetworking','~\u003e 2.2.0'` 版本号\n\u003e \u003e `pod 'AFNetworking',:path =\u003e '库的目录'` 本地库\n\u003e \u003e `pod 'AFNetworking',:git =\u003e 'https://github.com/gowalla/AFNetworking.git'` github上的库\n\u003e 详情看这里 [Podfile][1]\n 3. `pod install --no-repo-update` 不加`--no-repo-update`参数则会检查repo的更新，如果网卡了，那么就是找死，没事不用更新，除非你要的库更新的版本当前repo里没有\n 4. 最后载入生成的 `.xcworkspace` 文件即可\n\n  [1]: https://guides.cocoapods.org/using/the-podfile.html\n","cover":"","link":"cocoapods相关.html","preview":"","title":"cocoapods相关"},{"content":"\n\n\u003e 今天，由于一个视频，然后知道了电信的光纤也有个跟移动的差不多的提速活动，然后我也去官网看了下，失望地发现我的渣渣宽带没办法使用。但是一不小心发现了4M以下的宽带，可以提速到4M，我还特意去客服那里问了下，得到的回答是，没有有效期，可以一直用，也不知道是不是真的\n\n提速过程很简单，只要知道宽带账号，然后随便输个手机号码，获取验证码即可，虽然我的办理结果是失败的，但实际上是成功了的。\n\n\n提完速，测速了下，效果翻倍！！！原先只有250左右的下载速度，现在500左右。我习惯性地ping了下VPS的ip，发现没什么变化。然后想着是不是该换个服务器看看了，因为目前的数据中心是 `凤凰城` 的，每天都是早上的时候ping值比较低，但是到了傍晚的时候，基本都是300ms+。然后去搜索了下，发现个提供测试ip的，ping一下发现，居然只有177ms的ping值（时间为下午6点多），于是果断迁移服务器到洛杉矶，结果也非常好，目前ping值为172ms,翻墙效果好了很多\n","cover":"","link":"搬瓦工服务器迁移.html","preview":"","title":"搬瓦工服务器迁移"},{"content":"\n\n# 之前(10.10.3)\n\n## 卡,卡粗翔,就是卡\n\n    1. 系统卡，我是覆盖安装，从10.9.5升级到了10.10.2然后直接app store升级至10.10.3。具体表现为Finder、系统偏好设置等一些界面的切换和显示明显比10.9.5要迟钝。\n    2. 软件卡，XCODE、MACVIM、CHROME,XCODE用起来感觉是HDD一样，都想骂娘了，从来没有什么系统，换了SSD了之后，还这么卡的，Yosemite是第一个。CHROME上的FLASH完全屎一样，随便开个视频，马上90+的CPU占用，大部分时间是100。打开一个本来应该秒开的网页，居然跟开了迅雷下载的时候一样，10几秒才有反应。MACVIM则打开文件很慢，滚动很慢。\n    3. 本来以为是什么透明度啊之类的东西的问题，最近几天的测试，发现跟透明度没有半毛钱关系，甚至我开了透明度特性，跟关了一模一样的感觉，因为windowserver这个进程在我这还是比较正常，没有什么占内存的情况。之前还一度怀疑是不是我的显卡已经无法服役了。\n\n# 之后（10.10.4）\n\n## 一切正常\n\n    虽然响应速度没有windows下那么给力，但是跟之前比起来一个天上一个地下18层。现在MACVIM滚动正常，载入文件也正常。XCODE的启动时间也缩短了N多，CHROME放了几个视频试了试，CPU占用基本在60上下，还需进一步测试啊。另外Chrome如果把flash所在的标签页切到后台，尼玛，( *￣▽￣)o ─═≡※:☆▆▅▄▃▂＿ ，duang一下，CPU占用就下来了，神奇的一B\n","cover":"","link":"更新至yosemite 10.10.4 后的不同.html","preview":"","title":"更新至Yosemite 10.10.4 后的不同"},{"content":"\n\n1. 设置语言为英语(美国)\n2. Shadowsocks 设置为开机启动\n3. Google Play Services、google app、google services framework 清除数据,Manage Space\u003eclear all data\n4. 开启飞行模式并连接Wi-Fi, 进入设置并移除Google帐号\n5. 重新启动手机, 并确保Shadowsocks自动启动了, 如果没有则手动启动下\n6. 从屏幕下方往上滑, 重新登录Google帐号,OK,开启成功\n","cover":"","link":"android 5.0 开启google now.html","preview":"","title":"Android 5.0 开启Google Now"},{"content":"\n\n目前正在恢复数据中，对着一串串以数字命名的文件，我郁闷啊，总之坑爹到不行\n而起因是PD10 无法挂载第二块硬盘，说我分区有错误，然后我把EFI分区给删了，准备调整分区大小，然后前一个分区就消失了。\n\n话说最近怎么老是养成不备份干事的习惯了\n","cover":"","link":"又在一次瞎搞中把硬盘分区给搞崩了.html","preview":"","title":"又在一次瞎搞中把硬盘分区给搞崩了"},{"content":"\n\n## 安装必要的包\n\n\n    opkg update\n    opkg install kmod-ipt-ipset ipset ipset-dns iptables-mod-nat-extra\n    opkg remove dnsmasq\n    opkg install dnsmasq-full\n\n## /etc/dnsmasq.conf\n\n\n    server=112.124.47.27\n    no-resolv\n    cache-size=1000\n    dhcp-range=192.168.1.50,192.168.1.200,48h\n    dhcp-option=3,192.168.1.1\n\n## gfw.conf\n\n\n    #Google and Youtube\n    server=/.google.com/208.67.222.222#443\n    server=/.google.com.hk/208.67.222.222#443\n    server=/.gstatic.com/208.67.222.222#443\n    server=/.ggpht.com/208.67.222.222#443\n    server=/.googleusercontent.com/208.67.222.222#443\n    server=/.appspot.com/208.67.222.222#443\n    server=/.googlecode.com/208.67.222.222#443\n    server=/.googleapis.com/208.67.222.222#443\n    server=/.gmail.com/208.67.222.222#443\n    server=/.google-analytics.com/208.67.222.222#443\n    server=/.youtube.com/208.67.222.222#443\n    server=/.googlevideo.com/208.67.222.222#443\n    server=/.youtube-nocookie.com/208.67.222.222#443\n    server=/.ytimg.com/208.67.222.222#443\n    server=/.blogspot.com/208.67.222.222#443\n    server=/.blogger.com/208.67.222.222#443\n    \n    #FaceBook\n    server=/.facebook.com/208.67.222.222#443\n    server=/.thefacebook.com/208.67.222.222#443\n    server=/.facebook.net/208.67.222.222#443\n    server=/.fbcdn.net/208.67.222.222#443\n    server=/.akamaihd.net/208.67.222.222#443\n    \n    #Twitter\n    server=/.twitter.com/208.67.222.222#443\n    server=/.t.co/208.67.222.222#443\n    server=/.bitly.com/208.67.222.222#443\n    server=/.twimg.com/208.67.222.222#443\n    server=/.tinypic.com/208.67.222.222#443\n    server=/.yfrog.com/208.67.222.222#443\n    \n    #Dropbox\n    server=/.dropbox.com/208.67.222.222#443\n    \n    #1024\n    server=/.t66y.com/208.67.222.222#443\n    \n    #shadowsocks.org\n    server=/.shadowsocks.org/208.67.222.222#443\n    \n    #btdigg\n    server=/.btdigg.org/208.67.222.222#443\n    \n    #sf.net\n    server=/.sourceforge.net/208.67.222.222#443\n    \n    #feedly\n    server=/.feedly.com/208.67.222.222#443\n    \n    # Here Comes The ipset\n    \n    #Google and Youtube\n    ipset=/.google.com/gfw\n    ipset=/.google.com.hk/gfw\n    ipset=/.gstatic.com/gfw\n    ipset=/.ggpht.com/gfw\n    ipset=/.googleusercontent.com/gfw\n    ipset=/.appspot.com/gfw\n    ipset=/.googlecode.com/gfw\n    ipset=/.googleapis.com/gfw\n    ipset=/.gmail.com/gfw\n    ipset=/.google-analytics.com/gfw\n    ipset=/.youtube.com/gfw\n    ipset=/.googlevideo.com/gfw\n    ipset=/.youtube-nocookie.com/gfw\n    ipset=/.ytimg.com/gfw\n    ipset=/.blogspot.com/gfw\n    ipset=/.blogger.com/gfw\n    \n    #FaceBook\n    ipset=/.facebook.com/gfw\n    ipset=/.thefacebook.com/gfw\n    ipset=/.facebook.net/gfw\n    ipset=/.fbcdn.net/gfw\n    ipset=/.akamaihd.net/gfw\n    \n    #Twitter\n    ipset=/.twitter.com/gfw\n    ipset=/.t.co/gfw\n    ipset=/.bitly.com/gfw\n    ipset=/.twimg.com/gfw\n    ipset=/.tinypic.com/gfw\n    ipset=/.yfrog.com/gfw\n    \n    #Dropbox\n    ipset=/.dropbox.com/gfw\n    \n    #1024\n    ipset=/.t66y.com/gfw\n    \n    #shadowsocks.org\n    ipset=/.shadowsocks.org/gfw\n    \n    #btdigg\n    ipset=/.btdigg.org/gfw\n    \n    #sf.net\n    ipset=/.sourceforge.net/gfw\n    \n    #feedly\n    ipset=/.feedly.com/gfw\n    #custom\n    server=/instagram.com/208.67.222.222#443\n    ipset=/instagram.com/gfw\n    server=/cdninstagram.com/208.67.222.222#443\n    ipset=/cdninstagram.com/gfw\n\n#防火墙自定义规则\n\n\n    ipset -N gfw iphash\n    iptables -t nat -A PREROUTING -p tcp -m set --match-set gfw dst -j REDIRECT --to-port 1080\n\n## shadowsocks开启1080为透明代理端口，1081为socks5端口\n\nPS：ChinaDNS或者pdnsd之类的都是不靠谱的，经常失效，而且是全部国外ip都走代理，不合理。ipset的方法，有两个关键的位置一个是208.67.222.222#443这里也可以换成自己架设的DNS，dnsmasq开启非标准端口监听即可然后绑定到外网ip上。dhcp的选项必须要填上去，我之前没填，反正就只能分配一次ip后面再次连接DHCP就不行了。上游DNS尽量选择响应快的，阿里的不靠谱\n","cover":"","link":"openwrt翻墙配置集合.html","preview":"","title":"openwrt翻墙配置集合"},{"content":"\n\nwr941v5 原先是wr741nd的固件，出现无故重启的问题\n1. 插着网线开机，直接重启\n2. 不插网线开机，插上网线之后几秒钟自动重启\n3. 无线连接上重启\n4. 访问192.168.1.1的瞬间重启\n5. ssh的瞬间重启\n6. 总结一下就是只要访问了192.168.1.1这个地址立马就重启了，而访问其他网站则不会出现\n\n本来以为是固件问题\n今天试了试，成功刷入了wr941v2的固件，但是重启现象依旧。\n\n今天晚上总是知道是什么原因了，电源的原因，目前用的电源是9v 800mA 而额定的是9v 600mA。\n另一个wr842nd的适配器换上之后，居然一切正常，用我自己的就连插着WAN口，也直接重启了，真是见鬼了\n\n但是可以确定的是，不同的额定电流输出电流肯定不一样，我也试了一个8.8v 0.35A的电源，重启得更加干脆了\n","cover":"","link":"关于无线路由器无故自动重启.html","preview":"","title":"关于无线路由器无故自动重启"},{"content":"\n\n直接APPSTORE升级至10.10.3\n问题：\n1. 卡顿，windowserver这个进程很恶心，关掉了透明效果，仅仅好转一点，app启动过程感觉变慢了（各种）\n2. CLOVER的问题，我明明设置了timeout，但是开机的时候会停在选择界面（即 wait for response），不知道见什么鬼\n3. 变色龙引导时会卡在 CPU 信息那一行，莫名其妙的问题，另外，新版本系统的mach_kernel改名成了kernel，估计要手动处理\n4. Genymotion启动明显变慢了，半天都没进入\n5. PD10无法运行，新安装了10.2的版本后恢复，但是虚拟机启动也很慢\n6. ExpressCard的驱动无法加载，总感觉CLOVER有问题，但又找不到\n7. 开机启动也很慢啊，进度条要走半天，之前一进桌面就可以打开程序干事的，现在等状态栏加载就要10来秒\n-----------UPDATE--------------\n\n关于昨天遇到的问题\n\n引导U盘进入Yosemite安装界面的过程中出现五国：\n\n最后几行出现类似\n1. backtrace\n2. IOHIDFamily\n3. VoodooPS2Controller\n4. PS2TrackPad\n\n搜索无果。 解决办法为\n\u003e 设置Clover的Boot_arg为 dart=0  或者  关闭BIOS的Intel VT-D（即CPU虚拟化）\n\n然后一个问题是Clover不加载EFI/Clover/kext中的驱动，即使我使用WithKexts也不行，另外每次使用-f或者NoCache或者选择Withou Cache仍然使用老的的kexts，手动删除缓存还是一样，总之就是我想要加载的驱动没加载上。最后使用Kext Utility,总算是搞定了电池的显示，但是ExpressCard的驱动仍然无法加载，不知道是不是驱动本身的问题。Kext Wizard不行，总之它的修复权限功能和重建缓存跟没有一样。以前我好像就出过这类问题，因此差不多可以卸载一个了。\n\n# 正文\n\n## 需要的组件\n\n1. 8G或以上的U盘一个（移动硬盘或者高速的U盘更佳，可以更快地加载）\n2. 懒人版Yosemite cdr镜像（dmg更佳）\n3. Carbon Copy Cloner（CCC）\n4. 可用的MAC系统\n5. Clover最新版本\u0026Clover Configurator\n\n## 制作系统安装U盘\n\n1. 插入U盘，使用系统自带的磁盘工具，分一个区为MAC 日志式，命名为OSX\n2. 将cdr镜像修改名称\u0026后缀为Yosemite.dmg，并装载\n3. 打开CCC，源磁盘选择装载的Yosemite，目标磁盘选择装载的U盘，等待恢复\n4. 安装Clover到U盘，勾上\n    \u003e BootLoader boot0af\n    \u003e CloverEFI 64位 SATA\n    \u003e 勾上 Driver是64\n    \u003e `安装 RC scripts到目标磁区`\n    \u003e `选择安装 RC Scripts`  勾上\n5. Clover Configurator配置`Boot`页\n    \u003e Verbose(-v)\n    \u003e dart=0\n    \u003e kext-dev-mode=1\n其他选项都使用默认\n6. OSX/EFI/Clover/kext/Other放入需要的驱动，我放入了Natit（驱动9300mgs），ACPIBatteryManager，FakeSMC，VOODOOPS2Controller，这么几个就差不多了，主要是FakeSMC，然后电源的，然PS2的，显卡如果有解决方案了就直接加入，否则的话删除 NV开头的驱动，然后慢慢折腾吧\n7. 重启选择U盘启动，我的机子使用了dart=0之后就可以进入安装了。直接选择安装到当前的系统盘，无需抹盘，然后大概需要30分钟，再次重启进入配置界面\n8. 全部搞定后将需要的kext使用kext Utility安装并重建缓存\n\n\n9. 修改 /Library/Preferences/SystemConfiguration/NetworkInterfaces.plist 使得Apple账号可以登录\n\n10. 原先Mavericks的驱动有一部分保留了下来，并不是完全覆盖了\n\n\n","cover":"","link":"[强迫症结果]mavericks10.9.5无损升级至yosemite10.10.2.html","preview":"","title":"[强迫症结果]Mavericks10.9.5无损升级至Yosemite10.10.2"},{"content":"\n\n\n起因:最近想学Objective-C，于是安装好了 XCODE，版本是 XCODE-beta3。然后本来也没什么的，用着呗。突然灵光一闪，我是不是应该升级一下版本呢，毕竟总归是要学的，那么直接学最新的不是更好，我算盘打得我自己都相信了。然后打开了Appstore，然后结果是，最新版，Xcode 6.3 正式版只支持10.10。Mother fuck！！！前几天想用一个软件，下好了才提示只支持10.10。为毛啊，为毛不支持低版本的啊日日日\n\n于是想要把黑苹果升级一下，尝试用U盘+Clover进行安装，不过连安装界面都没进去，卡在IOHIDFamily 和 ApplePS2Trackpad，dependence之类的语句，论坛搜索无果，貌似都没出过这问题，明天继续试，再试试用变色龙看看。\n\n其实根本不用升级啊，10.10又能怎么样，因为一个小小的理由（beta和正式版）而去花大量时间不值得，虽然时间是很多没错啦。\n\n就好像以前用windows的时候，也有一段时间，各种追求最新，当时win8出来的时候也是第一时间去装了玩。各种软件也是一直在试，想用上最效率最好的同类软件（当时就是这样的兴趣）。不过去年（2014年）觉悟了，对windows的新版本不报任何期待，因为\n\n1. 界面没有变好看（反正我觉得Aero肯定比大色块好看）\n2. 应用商店就是个渣，我也就刚开始用了个新鲜，后来基本就在Administrator用户下，根本就不开它\n3. 越来越臃肿\n\n当然，由此衍生出来的想法，改变了我之前的思维。之前的思维是生活就是折腾，折腾就是生活。现在的想法是，我不应该折腾，那个都是以前有大把时间的时候干的事（大学）。\n能把电脑用来折腾，说明你没有用电脑干别的事。比如说，如果你用电脑处理文档，很多很多，几十个G的文档存在电脑里。然后做设计，也有几十个G的工程。也做编程，源代码一堆，工程一堆，配置个环境就可能要一天时间，还是很快的网速的情况下。  那么，还有空去折腾电脑系统吗软件吗，那么你敢去折腾吗？总之，当我真正用电脑来工作的时候，我就失去了折腾它的心了，我只求稳定安逸即可，一两个月重装一次系统的日子已经一去不复返了。比如我现在的系统是去年4月份装的。\n","cover":"","link":"我要来吐槽自个儿的强迫症一下了.html","preview":"","title":"我要来吐槽自个儿的强迫症一下了"},{"content":"\n\n\u003ca href=\"http://www.bilibili.com/video/av2130097/\"\u003e三无《普通DISCO》---三无Marblue\u003c/a\u003e\n","cover":"","link":"三无-普通disco.html","preview":"","title":"三无《普通DISCO》---三无Marblue"},{"content":"\n\n作者 ilem\n\u003ciframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2\u0026id=31140522\u0026auto=0\u0026height=66\"\u003e\u003c/iframe\u003e\n","cover":"","link":"普通 disco.html","preview":"","title":"普通 DISCO"},{"content":"\n\n由于之前路由器一直处于某种状态\n\n开机，看心情自动重启\n插入网线，看心情自动重启\n访问192.168.1.1的时候，回车一敲，看心情自动重启\nLUCI界面配置wifi，看心情自动重启\n随机找个时间，看心情自动重启\n\nPS：看心情的概率\u003e90%\n本来觉得是不是路由器硬件的缺陷，毕竟盖着 wr941nd V5 的壳子，但是又只能刷 wr741nd 的固件，不过经过昨天的试验，证明了其实是固件的问题。\n昨天刷了 openwrt 官方网站提供的\u003ca href=\"http://downloads.openwrt.org/latest/ar71xx/generic/openwrt-ar71xx-generic-tl-wr741nd-v2-squashfs-sysupgrade.bin\"\u003e下载地址\u003c/a\u003e，然后发现，只要不在刚开机的时候连接上去，基本不会重启。\n关键运行过程中不会突然重启了，而且，不使用WEB访问就不会重启，于是ssh上去很爽，因此，就没有去使用各个软件的LUCI界面了\n以下是配置过程：\n\n\n- 替换`dnsmasq`为`dnsmasq-full`，`opkg update`很慢，应该可以把那几个`Package.7z`手动下载覆盖的，如果安装出现kernel不符的情况，加上`--force-depends`即可\n```\nopkg update\nopkg install kmod-ipt-ipset ipset ipset-dns iptables-mod-nat-extra\nopkg remove dnsmasq\nopkg install dnsmasq-full\n```\n\n- `/etc/dnsmasq.conf` 添加\n```\nno-resolv\nserver=114.114.114.114\nconf-dir=/etc/dnsmasq.d\n```\n\n- `/etc/dnsmasq.d/gfw.conf` 规则\n```\nserver=/.example.com/208.67.222.222#443\nipset=/.example.com/gfw\n```\n\n- `/etc/firewall.user` 添加\n```\nipset -N gfw iphash\niptables -t nat -A PREROUTING -p tcp -m set --match-set gfw dst -j REDIRECT --to-port 1080\n```\n\n- `/etc/config/dhcp` 保持默认，主要是关掉 DNS请求转发和忽略解析文件这两个，因为配置文件已经有了\n\n- 安装shadowsocks，我装了个polarssl版本的，什么版本无所谓，反正我是`aes-256-cfb`\n\n- `/etc/shadowsocks.json`,端口为`1081`\n```\n{\n\"server\":\"VPS IP\",\n\n\"server_port\": ,\n\n\"local_port\":1081,\n\n\"password\":\"PASSWORD\",\n\n\"timeout\":60,\n\n\"method\":\"aes-256-cfb\"\n\n}\n```\n\n- /etc/ss-redir.json,端口为1080\n```\n{\n\n\"server\":\"VPS IP\",\n\n\"server_port\": ,\n\n\"local_port\":1080,\n\n\"password\":\"PASSWORD\",\n\n\"timeout\":60,\n\n\"method\":\"aes-256-cfb\"\n\n}\n```\n\n- `/etc/init.d/shadowsocks` 添加\n```\nservice_start /usr/bin/ss-redir -c /etc/ss-redir.json\n\nservice_stop /usr/bin/ss-redir\n```\n\n不要删掉ss-local\n\n- `/etc/init.d/shadowsocks enable`\n\n- 重启路由器\n\n","cover":"","link":"wr741nd-openwrt-配置shadowsocks+ipset+dnsmasq.html","preview":"","title":"wr741nd openwrt 配置shadowsocks+ipset+dnsmasq"},{"content":"\n\n- 首先是买了个 Openwrt 路由器, 卖家写的是 WR941ND V5 但实际上是WR741ND V2, 当时也没认真看, 还固执地尝试去刷 wr941nd 的固件, 但是刷完会无法重启(重启后还是亮一个 LAN 灯, 应该\n是闪齿轮灯的), 然后后来看了图片才发现问题, WR941ND 根本不是圆滚滚的, 而是方正的. \n- 然后是, 路由器开机后插上网线或者连上无线, 过几秒(或者马上,或者是访问 192.168.1.1 输完密码的时候)就重启了, 所有灯全暗了, 然后 齿轮灯 开始闪, 进入开机状态\n- 又然后, 最近一次刷固件, 也是一直重启, 比如我要做桥接和一些配置, 先要搜索被桥接的信号, 然后要添加 AP 网络, 然后开 SS 和 pdnsd, 设置 DNS 转发, 最后还要 adbyby, 但是这过程中就会重启很多次, 就好像路由器突然忙不过来了超负载重启一样, 但实际是内存还一大片空闲, 我还尝试过吹风机给 CPU 降温, 都没用. 奇怪的是, 最近一次设置完后, 居然没有那种现象了, 现在重启路由器后, 连无线也没问题了, 连网线还没敢试, 我怕它一傲娇, 总之相当诡异\n- 然后, 最近语言表达上好像有点奇怪\n- 然后, 最近看的电视剧也那么的奇怪, 风格各种转变, 跟画风变了似的\n- 然后前些天, 找的小说也都是很傻比的情节, 甚至不合常理\n- 总觉得, 这些天和去年相比, 总感觉哪里不对的样子, 周围发生的事情也是很多奇怪的\n","cover":"","link":"strange-things-recently.html","preview":"","title":"最近发生的一些奇怪的事情"},{"content":"\n\n因为固件作者说SS和adbyby冲突，而在新版本中去掉了adbyby\n\n我自己装了下，主要俩命令`./adbyby\u0026`和一个iptables命令用于透明代理\n\n我遇到的问题是在防火墙添加了iptables代码，然后adbyby本来是手动运行的，后来不知怎么的关闭了还是怎么，然后就无法上网了，192.168.1.1都访问不了，各种连接超时之类的，后来想到iptables添加了数据到8118端口的转发，而如果adbyby不正常了，自然整个访问过程都被一个空代理给堵死了（8118），于是下connectbot准备连接ssh，但一开始还连不上，又是莫名其妙的原因\n\n最后这么解决\n\n    vi adbyby.sh\n    #!/bin/sh\n    ./bin/adbyby\u0026\n    iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8118\n    :wq\n    chmod +x adbyby.sh\n    ./adbyby.sh\n\n另外, 我在想防火墙的自定义规则里面是不是可以添加别的终端命令?\n\n\n\n","cover":"","link":"problems-of-adbyby-on-openwrt.html","preview":"","title":"adbyby在openwrt上遇到的问题"},{"content":"\n\nconnectbot 用于ssh连接\n另外需要hacker’s keyboard 黑客键盘\n否则ESC之类的按不出来\n","cover":"","link":"android-ssh-solution.html","preview":"","title":"安卓ssh解决方案"},{"content":"\n\n前些天, 花66买了个二手的 WR941N V5, 自带了 uboot 和 OpenWRT 明月永在圣诞版.\n\n发现的问题:\n- 开机之后，需要等待很长时间(0~+∞)，原因是，每次在开机之后，我插入网线使之与电脑连接，或者通过无线与之连接，路由器就重启了, 表现为全部指示灯亮起并灭掉，然后过一会，图标为齿轮的那个灯闪烁，我推测为又再次进入了 OPENWRT 的开机初始化过程，但是恶心的是，使用安卓手机连接则不会出现重启现象，但是我的 MAC 系统和 Win Server 2012 连接上去都会如此。以至于，每次都需要等很久, 等待无线指示灯稳定后，才敢插上网线。有时候会在连上无线之后几秒钟后重启，简直是莫名其妙的问题，uboot 里就不会出现，因此推测为固件原因\n- 开启了 Shadowsocks 和 ChinaDNS-C，并且设置了 DNS 转发后, 仅仅 Google 的相关网站可以访问，Youtube、Twitter、Facebook、t66y、v2ex等网站无法访问。开始的时候推测为关键词屏蔽的原因，毕竟 ChinaDNS 只能解决 DNS 污染的问题，而且是基于 IP 进行的判断，于是开始寻找基于域名的解决方案（管 TM DNS 污染干啥呢），但是结果让我傻了眼，根本没人出现这个问题，都 TM 正常，唯独我不正常，日。基于域名的解决方案的帖子倒是有找到，但回帖中根本没有我要的答案，比如 PAC 这种就毫无意义啊，本身搞 OpenWRT 不就是为了透明代理么，客户端需要设置的话，那不是白搞了。再吐槽下，妈蛋怎么那些教程都是命令行模式的操作啊，有界面不玩偏偏用命令，只能说明教程都过时了，他们都没见过 Luci。再吐槽下，为什么我总感觉，把 DNS 解析的过程进行加密不如直接使用代理进行访问好呢（不是很懂，我印象中即使我拿到了正确的网站ip，那么也还是会因为关键词而被截杀的）。  \n- 在换了 pdnsd 进行抗污染后，twitter 和 facebook 可以访问了，但是不完美（有些网站不行），那么肯定是 ChinaDNS 的问题，看了下版本，应该就是过于老旧了，新版本肯定进行过处理了\n- 我下了两个固件，都是 sysupgrade 的，一个 WR941N，另一个 WR741N，因为机身上是 WR941N V5, 但是 openwrt 界面上显示的是 wr741N。都试着在 uboot 里刷了下，也在 openwrt 的备份升级处试了下。结果是openwrt 里面不能升级，会报错，uboot 常规固件里也不行，上传几 k/s，比乌龟还慢，花大半个小时传完了，然后报错 `服务当前不可用`，搜索无果。然后今天实在受不了重启，又试了试，发现又正常了，上传有个400k/s 的样子了，结果是 WR941N 的 bin 传上去后就卡在重启那一步，没反应，强制重启也一样，开机只有个 LAN 灯亮着。而 WR741N 则可以正常重启，真™见鬼了啊，莫名其妙的问题。\n\n目前，明月永在春节版，shadowsocks+pdnsd + 中继，正常使用，但愿别再重启了。\n\n- Shadowsocks\n1. 阿里云 haproxy 跳板\n2. 代理方式`忽略列表`\n3. UDP 转发`启用`\n4. 其他默认\n- pdnsd\n1. 默认选项\n- 桥接\n1. Clinet 模式连接主路由, wwan, 表示从主路由接收信号并作为 WAN 口, wwan 意为 WLAN WAN, 其他默认配置\n2. 接入点AP 模式(Master), lan, 表示将本路由器的 NAT 网络共享至 4个LAN口和无线网络(组成局域网的接口), ESSID Openwrt 高大上, 无需重启接口产生一个无线信号\n- adbyby\n1. 更新到春节版后发现 adbyby 没了, 据作者所说是和 Shadowsocks 有冲突, 不过我没发现, 所以还是手动装上用着先.\n2. wget tar -xvf then chmod then ./bin/adbyby\u0026\n3. 懒得搞开机重启\n4. `iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8118`\n  用于实现透明去广告, 这里重启下, 重新./adbyby\u0026 一下即可\n","cover":"","link":"wr941n-v5-flash-bin-openwrt-from-mingyue-then-set-ss.html","preview":"","title":"WR941N V5 刷 OpenWRT 明月永在版, 并配置中继和翻墙"},{"content":"\n\n 安装流程:\n 1. VirtualBox\n 2. Genymotion 虚拟机\n 3. 新建 Genymotion 虚拟机, 我选择Google Nexus 7的镜像, 因为是黑苹果, 所以不选择过高分辨率的 ROM, 等待完成\n 4. [ARM Translation V1.1](http://pan.baidu.com/s/1o68yMGM) 拖入虚拟机中即可,会自动提示安装,重启\n 5. 上面的链接包含一个 gapps for 4.3的, 不建议, 总是 play service 什么停止工作之类的错误, 建议去下谷歌安装器进行安装, 重启一下\n 6. 4和5的顺序不能错, 可能会导致 COC 停止工作\n 7. COC 下载慢, 可以去手机中提取 apk, 或者用 APK downloader 之类的服务进行下载, 百度到的是旧版本, 无意义还是要更新\n 8. 翻 wall 有多种方案,一个是影梭, 或者HOSTS 文件, 或者在 mac 下使用 dnsmasq 进行泛解析, HOSTS 文件不长久\n \u003e [https://cloudmonitor.ca.com/zh_cn/ping.php](https://cloudmonitor.ca.com/zh_cn/ping.php) 用于查询 Google 可用 ip\n \n \n\t  #dnsmasq 解析规则\n\t  address=/google.com/64.233.185.139\n\t  address=/ggpht.com/64.233.185.139\n\t  address=/googleusercontent.com/64.233.185.139\n\t  address=/gstatic.com/64.233.185.139\n\t  address=/googleapis.com/64.233.185.139\n\t  address=/appspot.com/64.233.185.139\n\t  address=/googlecode.com/64.233.185.139\n\t  address=/googlevideo.com/64.233.185.139\n\t  address=/youtube.com/64.233.185.139\n\t  address=/google.com.hk/64.233.185.139\n\t  address=/ytimg.com/64.233.185.139\n\t  address=/googlesource.com/64.233.185.139\n\t  address=/blogspot.com/64.233.185.139\n\t  address=/googlehosted.com/64.233.185.139\n\t  address=/googlelabs.com/64.233.185.139\n\t  address=/googlesource.com/64.233.185.139\n\t  address=/blogger.com/64.233.185.139\n\t  address=/goo.gl/64.233.185.139\n\t  address=/g.co/64.233.185.139\n\t  address=/googlemail.com/64.233.185.139\n\t  address=/gmail.com/64.233.185.139\n\t  address=/googlesource.com/64.233.185.139\n\t  \n \u003e dnsmasq 不一定每次都可以, 可能可以打开 Google 但是又不能关联 COC 设备(登陆 g+ 时然后就没反应了, 无法跳出load village, 这个就看人品了, 也许是上面规则的不完善)\n \u003e 影梭也看人品, 我之前试过几次, 但是经常无效, 不过我先安装 arm 翻译器再安装 Google 服务好像就可以用了,可能是这些原因,也可能和 arm 翻译器的版本有关,老版本可能会提示\"刷入失败\", 此处一定要刷入    成功才行, 如果影梭可用,那么都不是问题了\n","cover":"","link":"run-clash-of-clans-with-genymotion.html","preview":"","title":"Genymotion 虚拟机 Clash of Clans"},{"content":"\n\n无聊到我已经说不出什么了, 除了朋友相聚喝酒就没了, 过年每年都是一个套路, 要是有新奇点的玩意儿就好了. \n\n大过年的, VPS 也给我抽风了, 老外不是早过完年了么, 难道是因为春晚要在 Youtube 直播的原因吗 郁闷! \n\n明年要努力了!\n","cover":"","link":"年味越来越淡了.html","preview":"","title":"年味越来越淡了"},{"content":"\n\n\n`md \"文件夹名 \"`，引号外加空格即可创建成功\n\n删除的话先使用`dir /x`,找到需要删除的文件的短文件名一般是 `XXX~1`\n然后 `rd /S XXX~1`\n","cover":"","link":"make-same-name-dir-with-md-and-rd.html","preview":"","title":"md 和 rd 命令，建立相同文件名的错乱文件夹"},{"content":"\n\n\n经过一晚上的研究，主要看了 Typecho 的 xmlrpc.php 和发布文章相关的函数调用，一点头绪都没有，得到的信息如下，\n1. 对博客文章进行的操作，主要是依靠 xmlrpc 协议中的 mwEditPost 函数\n2. 在 vimpress 中发现的mwEditPost 其实是 Typecho 的 xmlrpc 中声明的\n3. 第二点所说的实现方式为xmlrpclib.ServerProxy(blog_url).metaWeblog，mw 是 metaWeblog 的缩写，ServerProxy 方法用于连接 xmlrpc 以远程调用函数\n\n其实这些都没啥用，今天早上起来，不死心，一个机灵，去查看了下数据库，于是只要在`Content`下的第一行加入一行``，完成，可以解析了\n","cover":"","link":"followed-writting-typecho-posts-with-vim.html","preview":"","title":"「续」vim发 Typecho 博客"},{"content":"\n\n* 首先需要安装 node.js with npm，此命令会先安装 node.js --without-npm，然后再安装 npm，据说原因是 npm 和 Homebrew 之间可能存在着冲突，因此无法直接安装 node.js with npm   \n\n\n\tbrew install node\n\t[sudo] npm -g install instant-markdown-d\n\n实时预览插件需要的，这货默认端口是8090，坑爹的家伙，也找不到源码\n\n* 然后，使用 `Vundle` 安装 必要的插件\n\n\tBundle 'godlygeek/tabular'   #vim-markdown 依赖\n\tPlugin 'plasticboy/vim-markdown'  #语法高亮\u0026文件类型识别之类的\n\tBundle 'vimpress'  # vim 官网的0.9.1版本\n\tBundle 'suan/vim-instant-markdown' #实时预览插件\n\n* 在 `~/.vimrc` 中加入这一句\n\n\n\tau BufRead,bufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn} set filetype=markdown\n\n* 到 [此链接][1] 去复制这个修改过的 `blog.vim`，并保存到本地，然后编辑其中的 `Settings` 段\n\t\n\t\n\tenable_tags = 0`\n\tblog_username = 'Typecho 后台用户名'`\n\tblog_password = 'Typecho 后台密码'`\n\tblog_url = 'http://博客首页地址（未测试二级目录）/action/xmlrpc'  #这是 Typecho 的 xmlrpc 的地址`\n\n* 最后，打开 `macvim`，新建一个 md 文件，`:e strID.md` ,然后输入`:BlogNew`,OK 开始，删除不需要的分类，填上文章题目，并在 `Content` 下书写内容，然后 `:BlogSend`即可，如果报错，绝对是网络问题，再试试看就行\n\n-------\n### 注意\n1. 本过程不完善，还不支持 markdown，因为按照上面的方法 Post 上去的文章是 html 也就是说 markdown 的标记符比如 `\u003e` 最后显示的时候还是 `\u003e`, 其实跟用 windows live writer 写 typecho 博客一样了，不过如果会用 html 标记写文章的人就比较好了，我查看了一下 `blog.vim` 的内容，`handler=xmlrpclib.ServerProxy(blog_url).metaWeblog` 主要是靠这个对象里的方法去进行数据的传送的，可以确定的是，给 Content 加上 html 标签应该也在这里面，只能改天研究一下了\n2. instant-markdown-d 这个东西我没找到源代码，这傻逼监听的端口是`8090`，和 ShadowsocksX 的 pac 服务的端口是一样的，关键这两个家伙都不能配置端口，气死我了，所以如果 ShadowsocksX 开着的话，实时预览就会显示空白了，解决方案是要么换别的实时预览方案，要么 MAC 下可以选择 COW 作为 ss 的客户端\n\n\n\n\n  [1]: http://wiki.yepn.net/vimpress\n\n","cover":"","link":"writing-posts-with-vim.html","preview":"","title":"vim发 Typecho 博客"},{"content":"\r\n\r\n\u003cp\u003e自卸载了 Xcode 之后，发现它附带的一些命令行工具都没有删除，仍然可用，于是 make 当然也可以。它自带的 git 版本是1.9.3\u003c/p\u003e\r\n\r\n\u003cp\u003e而最新版 git 已经是2.3.0。\u003c/p\u003e\r\n\r\n\u003cp\u003e自带的版本安装位置是/usr/bin/git，而 brew 会在 /usr/local/bin/git 这里建立链接\u003c/p\u003e\r\n\r\n\u003cblockquote\u003e\r\n\u003cp\u003ebrew link git\u003c/p\u003e\r\n\u003c/blockquote\u003e\r\n\r\n\u003cblockquote\u003e\r\n\u003cp\u003ecd /usr/bin\u003c/p\u003e\r\n\r\n\u003cp\u003esudo mkdir backup-git-apple\u003c/p\u003e\r\n\r\n\u003cp\u003esudo mv git* backup-git-apple\u003c/p\u003e\r\n\u003c/blockquote\u003e\r\n\r\n\u003cp\u003e删除了自带的版本，然后重新安装一下 git。\u003c/p\u003e\r\n\r\n\u003cp\u003e接着，\u003c/p\u003e\r\n\r\n\u003cblockquote\u003e\r\n\u003cp\u003esudo vi /etc/paths ，\u003c/p\u003e\r\n\u003c/blockquote\u003e\r\n\r\n\u003cp\u003e将 /usr/local/bin 放到/usr/bin 的上面即可\u003c/p\u003e\r\n\r\n\u003cp\u003e最后，检查一下\u003c/p\u003e\r\n\r\n\u003cblockquote\u003e\r\n\u003cp\u003egit --version\u003c/p\u003e\r\n\u003c/blockquote\u003e\r\n\r\n","cover":"","link":"replace-git-of-xcode-with-git-from-homebrew.html","preview":"","title":"用 Homebrew 的 git 替代XCODE 的 git"},{"content":"\n\n狂霸酷拽屌炸天，非常流弊\n\n下个 win 10，用微软官方的地址，妈蛋还是直接用 Chrome 自带下载的，速度20M/s上下，\n直接告诉我 **5 min left！！！！！！**，去测速网站，860Mbps下载，按理说应该到86M/s 那就恐怖了，\n\n不过下国内的文件就慢得慢得比我的破宽带还慢\n\n网速起码要10M 光纤吧，反正我的图像一会能看清字，一会又看不清的，但是 TM 的看 youtube 的时候声音居然不会卡，妈蛋！\n\n\n退出后会还原所有文件，并且如果用默认选项，每次连上去的服务器也是不一样的。本来还想下个文件然后传网盘去的，太慢了\n\n之前也有个公司发了个云游戏吧，但是也是宽带问题，拨号的宽带不用想了，上传50k 能干蛋\n","cover":"","link":"nvidia-grid-trail.html","preview":"","title":"NVIDIA GRID 试用"},{"content":"\n\n为什么会忍不住用这个没人极力推荐（都喜欢别的替代方案）的软件呢，其实是强迫症\n\n总之，我先在边栏上添加了一个位于 NTFS 盘上得文件夹的快捷方式\n\n![](http://ww1.sinaimg.cn/mw690/61268557gw1eozu5px6hxj204006oq36.jpg)\n\n然后一不小心移动了这个文件夹的「原身」，然后中间需要移动文件的时候提示了一下，「文件在废纸篓里」，\n我居然还没在意，然后又一个顺手就倾倒废纸篓，然后文件夹就消失了%\u003e_\u003c%\n\n所以说千万别顺手，我这又给自己找了点事儿干\n\n我就怕万一 `Paragon NTFS` 的写入是和 `Trim` 有些类似的那就没戏了。\n\n只能去试试看了，重启进 win，打开 DiskGenius 就开始扫描，又粗心忽略了两个东西，一个是我装的版本是未注册的\n，只能恢复64k 以下大小的文件，这尼玛能恢复什么，默默地诅咒一下，要么干脆就不能恢复么。还有个就是，因为\n我的硬盘用的时间不是很长，没经过很多次的「大范围文件改动」，顶多几次删除，分区也没变过，并且文件都是\n挤在一起的，这个现象是，文件扫出结果的数量到了60000左右个就不再变化，我没注意，白白花了2个小时去全盘\n扫描了。\n\n换了个破解版的外加注意了下扫出文件的数量，很快就拿到了一些列表。\n\n痛苦的事情来了，结果里出现了各种不知道什么时候的文件（图片），有些图片还存在重复（可能是多次删除的结果），多的有6、7张都一样，于是一个下午都在9000张图片中删减没用的，蛋疼。。。。\n\n\n\n","cover":"","link":"written-after-delete-files-accidently-with-paragon-ntfs-for-mac.html","preview":"","title":"记使用 Paragon NTFS for MAC 在 MAC 下误删除文件之后"},{"content":"\n\n之前成功过的，搬瓦工的适用，至于经常会，比如选择 debian 的系统，然后安装的时候总是会出现 can't locate package 之类的问题，相比起来，搬瓦工的ubuntu\n比较好，话说还有个整合了 php 环境的系统，但是我不知道 mysql 的密码，也不知道到哪里找。已经第二次装了，⊙﹏⊙b汗，我真2\n系统:Ubuntu 12.04 + XShell\n\n1. 准备（从第一次登录开始）\n\napt-get update\napt-get install python-gevent python-pip\napt-get install python-m2crypto\npip install shadowsocks\n\n2. 编辑\nvi /etc/ss.json\na \n{\n  \"server\":\"\",\n  \"server_port\":,\n  \"local_port\":1080,\n  \"password\":\"\",\n  \"timeout\":600,\n  \"method\":\"aes-256-cfb\"\n}\nESC --\u003e :wq\n\n3. 运行\nnohup ssserver -c /etc/ss.json \u003e log \u0026\n4. 开机启动（其实也没啥必要，没事总重启干啥）\nvi /etc/init.d/rc.local\ndo_start() {\n         ssserver -c /etc/shadowsocks.json \u0026\n       ************************\n}\n代码从网上摘的，整理（复制粘贴）了一下，之前有很多命令，明明看起来一点问题，但是就是找不到 package，估计是源的问题，按理说官方源不会有问题才对，服务器在国外也没有速度问题，令人费解啊\n","cover":"","link":"shadowsocks-setting-process.html","preview":"","title":"Shadowsocks 服务端的配置过程"},{"content":"\n\n1. 系统偏好设置-\u003e共享-\u003e互联网共享，勾上\n2.  sudo vi  /etc/apache2/httpd.conf， 修改其中的 php 模块加载， 直接 /php5，回车。DocumentRoot 我设置\n为/Users/kirile/www, 这样方便在 GUI 下操作文件，还是比较喜欢 GUI 的 vim，看着比较亲切 O(∩_∩)O~，\n\u003e Include /private/etc/apache2/extra/httpd-vhosts.conf\n\n这两个参数重合了不知道会咋样，估计前者被覆盖了吧\n3. cp /etc/php.ini.default  /etc/php.ini   设置下 display_errors = On  \n4. sudo apachectl restart #apache需要root 权限才行\n5. 这里涉及的配置文件基本都是 read only，ls 一看只有 r 权限，那么 \n\u003e chmod +w 文件名 \n\n添加之，然后 sudo 即可\n\t\n6.  重启 apache 服务，然后新建 phpinfo，测试得，php版本为5.4.30（Mavericks 10.9.5），curl、iconv、\nmbstring、mysqli、pdo 都有\n\n7. mysql 的话准备用 homebrew 试试看，网速比较慢\n","cover":"","link":"enable-apache-and-php-on-mac-osx.html","preview":"","title":"MAC 下启用 apache 和 php"},{"content":"\n\n\n\u003ciframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2\u0026id=4874088\u0026auto=0\u0026height=66\"\u003e\u003c/iframe\u003e\n\n","cover":"","link":"good-song.html","preview":"","title":"还不错"},{"content":"\n\n之前,曾使用 Typecho 作为博客程序,但是在搭建过程中遇到了蛋疼的问题,各种500 404 405错误,以及 `pdo` `pdomysql` `pathinfo`的问题, 基本都能解决. 总算安装成功之后, 又是各种点下一页就跳到首页,点链接就跳到首页,多方查询,确认应该是伪静态上的问题,无奈网上全是放个规则你自己抄,妈蛋我个菜鸟硬是不知道应该在 `.htaccess`里边还是在 `/nginx/sites-available/default` 里边,郁闷的.在导入数据库的时候,使用 `phpmyadmin` 导入,不行,经常提示 `duplicate primary key \"1\" `, 后来换了个远程管理的工具就正常了. 话说, php 程序不能在 mysql 里建个数据库(⊙ ⊙)？,还要亲自动手也是给跪\n\n嫌烦,我就换成 wordpress, 幸好 Typecho 还有人搞了个插件把数据转回 wp, Typecho 简洁是简洁了, 但是......\n\n记录一下:\n\nUbuntu 12.04.3 LTS \\n \\l 32位 非 minimal (搬瓦工的系统是不是有问题啊,总是缺这个缺那个的,之前搭 ss 的时候经常 apt-get 不能用,经常 can't locate package XXX)\n\n    apt-get update\n\n    apt-get install mysql-server\n\n中间会提示设置 root 的密码\n\n    mysqladmin -u root password db_user_password\n\n如果用其他方式安装 mysql, 默认的密码用这个设置\n\n测试登陆命令\n```bash\n    mysql -uroot -p\n\n    create database 数据库名称;\n\n    \\q\n\n    apt-get install nginx\n\n    vi /etc/nginx/sites-available/default\n```\n```nginx\n    root /var/www;\n\n    index index.html index.php;  // 添加index.php\n\n    #location ~ \\.php$ {\n\n    location ~ .*\\.php(\\/.*)*$ {    /4  nginx \u0026gt; 0.7 开启pathinfo 的方法\n\n    #       fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n\n    #       # NOTE: You should have \"cgi.fix_pathinfo = 0;\" in php.ini\n\n    #\n\n    #       # With php5-cgi alone:\n\n    fastcgi_pass 127.0.0.1:9000;   /1\n\n    #       # With php5-fpm:\n    #       fastcgi_pass unix:/var/run/php5-fpm.sock;\n\n    fastcgi_index index.php;  /2\n\n    include fastcgi_params;  /3\n\n    }\n```\n取消 /1/2/3处的注释,启用 php-fpm 的解析功能\n```bash\n    apt-get install php5\n\n    php5-fpm php5-gd php5-mysql  php5-cli\n\n    vi /var/www/test.php\n```\n```php\n    \u003c?php\n\n    phpinfo();\n\n    ?\u003e\n```\n    :wq\n\n打开 `ip/test.php`\n\n查看是否有\n\n**curl**\n\n**mbstring**\n\n**iconv**\n\n**pdo**\n\n**pdo_mysql**\n\n**mysqli**\n\n这些模块,PDO必须要有,不然 Typecho 不能选择\"数据库适配器\",相当于 php 无法连接数据库\n\n但是我安装了 wordpress\n\n```bash\n    wget https://wordpress.org/latest.tar.gz\n```\n下载最新的「英文版」wp，我勒个去，最后还是想换回中文版的，于是\n```bash\n    tar -zxvf latest.tar.gz\n\n    cd latest\n\n    cp -rf * /var/www\n\n    wget https://cn.wordpress.org/wordpress-4.1-zh_CN.tar.gz\n```    \n然后，\n```bash\n    tar -zxvf wordpress-4.1-zh_CN.tar.gz\n\n    cd wordpress-4.1-zh_CN/wp-content\n\n    cp -rf languages /var/www/wp-content\n```    \n恩，搞定，进仪表盘可以看到新的语言了。官方的那个方法弱\n\n设置全部目录的所有者，可以不用安装 ftp 服务端了，www-data 可以使用 top 命令查看 php5-fpm\n```bash\n    chown -R www-data /var/www\n```\n最后，wordpress 赤裸裸地占了\n```bash\n398 root 20 0 43820 936 232 S 0.0 0.6 0:02.69 php5-fpm\n400 www-data 20 0 73268 32m 3124 S 0.0 21.6 0:11.48 php5-fpm\n402 www-data 20 0 72040 31m 2912 S 0.0 21.5 0:13.78 php5-fpm\n403 www-data 20 0 70488 31m 3048 S 0.0 21.0 0:11.78 php5-fpm\n404 www-data 20 0 70748 31m 3020 S 0.0 21.0 0:11.37 php5-fpm\n```\n而 mysql\n```bash\n331 mysql     20   0  349m  13m 3424 S  0.0  8.9   0:17.28 mysqld\n```\n只能说 wp 真是大户啊\n\n---------------------\n\n接上次，后来用1 2天:-( ， 发现实在受不了那么大得内存占用，于是又想换个别的，但是奇怪的是，wordpress 依然正常运行，除了安装插件之类的要等一会之外，其它都还可以\n\n然后又去找博客程序，找半天觉得还是 Typecho 比较合适\n\n - 简洁，占内存小\n - 我用 github 之类的比较少，不想把博客放在 github 上，虽然说放在那边挺好，还能顺便版本控制，听说图片也可以，不过我的访问速度并不快，git clone 的速度以10k 附近在跑，VPS 上瞬间就 clone 完了。\n - Hexo之前听说过还不错的样子,主要安装挺方便,但是写个博客要输代码(⊙_⊙)？,那真是见鬼,管它是不是逼格很高呢.万一需要 ssh 到 vps 上写的话就恶心了,我VPS丢包率大得很,ssh 输命令都顿卡的\n\n主要原因是找到了那个点击文章链接返回首页的方法, 还真的是伪静态(固定链接)的原因,只要保证, \n\u003e typecho 后台可以直接开启 Rewrite 功能,而不提示任何有关「强制开启 rewrite」的信息。\n\nnginx不管是 typecho还是 wordpress 都需要手动修改配置文件启用伪静态\n位置为`/etc/nginx/sites-available/default`\n\n```nginx  \n    location / {\n        # First attempt to serve request as file, then\n        # as directory, then fall back to index.html\n        # 原规则\n        # try_files $uri $uri/ /index.html;\n        # Uncomment to enable naxsi on this location\n        # Wordpress  伪静态\n        # try_files $uri $uri/ /index.php?q=$uri\u0026$args;\n        # Typecho 伪静态\n        if (-f $request_filename/index.html){\n            rewrite (.*) $1/index.html break;\n        }\n        if (-f $request_filename/index.php){\n            rewrite (.*) $1/index.php;\n        }\n        if (!-f $request_filename){\n            rewrite (.*) /index.php;\n        }\n        # include /etc/nginx/naxsi.rules\n    }\n```    \n即可\n","cover":"","link":"搬瓦工-vps-上搭建博客.html","preview":"","title":"搬瓦工 VPS 上搭建博客"},{"content":"\n\n\u003cmeta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\" /\u003e\u003cstyle type=\"text/css\"\u003e\n\n/* GitHub stylesheet for MarkdownPad (http://markdownpad.com) */\n/* Author: Nicolas Hery - http://nicolashery.com */\n/* Version: b13fe65ca28d2e568c6ed5d7f06581183df8f2ff */\n/* Source: https://github.com/nicolahery/markdownpad-github */\n\n/* RESET\n=============================================================================*/\n\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n\n/* BODY\n=============================================================================*/\n\nbody {\n  font-family: helvetica, arial, freesans, clean, sans-serif;\n  font-size: 14px;\n  line-height: 1.6;\n  color: #333;\n  background-color: #fff;\n  padding: 20px;\n  max-width: 960px;\n  margin: 0 auto;\n}\n\nbody\u003e*:first-child {\n  margin-top: 0 !important;\n}\n\nbody\u003e*:last-child {\n  margin-bottom: 0 !important;\n}\n\n/* BLOCKS\n=============================================================================*/\n\np, blockquote, ul, ol, dl, table, pre {\n  margin: 15px 0;\n}\n\n/* HEADERS\n=============================================================================*/\n\nh1, h2, h3, h4, h5, h6 {\n  margin: 20px 0 10px;\n  padding: 0;\n  font-weight: bold;\n  -webkit-font-smoothing: antialiased;\n}\n\nh1 tt, h1 code, h2 tt, h2 code, h3 tt, h3 code, h4 tt, h4 code, h5 tt, h5 code, h6 tt, h6 code {\n  font-size: inherit;\n}\n\nh1 {\n  font-size: 28px;\n  color: #000;\n}\n\nh2 {\n  font-size: 24px;\n  border-bottom: 1px solid #ccc;\n  color: #000;\n}\n\nh3 {\n  font-size: 18px;\n}\n\nh4 {\n  font-size: 16px;\n}\n\nh5 {\n  font-size: 14px;\n}\n\nh6 {\n  color: #777;\n  font-size: 14px;\n}\n\nbody\u003eh2:first-child, body\u003eh1:first-child, body\u003eh1:first-child+h2, body\u003eh3:first-child, body\u003eh4:first-child, body\u003eh5:first-child, body\u003eh6:first-child {\n  margin-top: 0;\n  padding-top: 0;\n}\n\na:first-child h1, a:first-child h2, a:first-child h3, a:first-child h4, a:first-child h5, a:first-child h6 {\n  margin-top: 0;\n  padding-top: 0;\n}\n\nh1+p, h2+p, h3+p, h4+p, h5+p, h6+p {\n  margin-top: 10px;\n}\n\n/* LINKS\n=============================================================================*/\n\na {\n  color: #4183c4;\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\n/* LISTS\n=============================================================================*/\n\nul, ol {\n  padding-left: 30px;\n}\n\nul li \u003e :first-child, \nol li \u003e :first-child, \nul li ul:first-of-type, \nol li ol:first-of-type, \nul li ol:first-of-type, \nol li ul:first-of-type {\n  margin-top: 0px;\n}\n\nul ul, ul ol, ol ol, ol ul {\n  margin-bottom: 0;\n}\n\ndl {\n  padding: 0;\n}\n\ndl dt {\n  font-size: 14px;\n  font-weight: bold;\n  font-style: italic;\n  padding: 0;\n  margin: 15px 0 5px;\n}\n\ndl dt:first-child {\n  padding: 0;\n}\n\ndl dt\u003e:first-child {\n  margin-top: 0px;\n}\n\ndl dt\u003e:last-child {\n  margin-bottom: 0px;\n}\n\ndl dd {\n  margin: 0 0 15px;\n  padding: 0 15px;\n}\n\ndl dd\u003e:first-child {\n  margin-top: 0px;\n}\n\ndl dd\u003e:last-child {\n  margin-bottom: 0px;\n}\n\n/* CODE\n=============================================================================*/\n\npre, code, tt {\n  font-size: 12px;\n  font-family: consolas, \"Liberation Mono\", courier, monospace;\n}\n\ncode, tt {\n  margin: 0 0px;\n  padding: 0px 0px;\n  white-space: nowrap;\n  border: 1px solid #eaeaea;\n  background-color: #f8f8f8;\n  border-radius: 3px;\n}\n\npre\u003ecode {\n  margin: 0;\n  padding: 0;\n  white-space: pre;\n  border: none;\n  background: transparent;\n}\n\npre {\n  background-color: #f8f8f8;\n  border: 1px solid #ccc;\n  font-size: 13px;\n  line-height: 19px;\n  overflow: auto;\n  padding: 6px 10px;\n  border-radius: 3px;\n}\n\npre code, pre tt {\n  background-color: transparent;\n  border: none;\n}\n\nkbd {\n    -moz-border-bottom-colors: none;\n    -moz-border-left-colors: none;\n    -moz-border-right-colors: none;\n    -moz-border-top-colors: none;\n    background-color: #dddddd;\n    background-image: linear-gradient(#f1f1f1, #dddddd);\n    background-repeat: repeat-x;\n    border-color: #dddddd #cccccc #cccccc #dddddd;\n    border-image: none;\n    border-radius: 2px 2px 2px 2px;\n    border-style: solid;\n    border-width: 1px;\n    font-family: \"Helvetica Neue\",helvetica,arial,sans-serif;\n    line-height: 10px;\n    padding: 1px 4px;\n}\n\n/* QUOTES\n=============================================================================*/\n\nblockquote {\n  border-left: 4px solid #ddd;\n  padding: 0 15px;\n  color: #777;\n}\n\nblockquote\u003e:first-child {\n  margin-top: 0px;\n}\n\nblockquote\u003e:last-child {\n  margin-bottom: 0px;\n}\n\n/* HORIZONTAL RULES\n=============================================================================*/\n\nhr {\n  clear: both;\n  margin: 15px 0;\n  height: 0px;\n  overflow: hidden;\n  border: none;\n  background: transparent;\n  border-bottom: 4px solid #ddd;\n  padding: 0;\n}\n\n/* TABLES\n=============================================================================*/\n\ntable th {\n  font-weight: bold;\n}\n\ntable th, table td {\n  border: 1px solid #ccc;\n  padding: 6px 13px;\n}\n\ntable tr {\n  border-top: 1px solid #ccc;\n  background-color: #fff;\n}\n\ntable tr:nth-child(2n) {\n  background-color: #f8f8f8;\n}\n\n/* IMAGES\n=============================================================================*/\n\nimg {\n  max-width: 100%\n}\u003c/style\u003e  \u003cp\u003ewordpress,好也真的好,我喜欢经常换个主题看看,无奈一直都一段时间就又换了\u003c/p\u003e  \u003cp\u003e但是这货的性能真的很不怎么样啊,本来我找个免费空间已经不容易,它倒好,就没哪个空间可以流畅运行的,经常会某个地方卡住,然后我就等半天才知道,然后刷新\u003c/p\u003e  \u003cp\u003e也在本地装了个wordpress进行测试,结果就是各种恶心的因素影响了效率,然后装插件,改代码,总算把访问google字体的原因解决了\u003c/p\u003e  \u003cp\u003e访问主题页面载入很慢,安装插件的时候也半天才反应过来,后面又提示访问wordpress.org的XXX问题,看来,没有一台访问各地网页完全畅通的服务器就不行的样子么\u003c/p\u003e  \u003cp\u003e渐渐地心情就不好了于是准备换个速度快的,纠结了一晚上,在v2ex上搜索半天,还是每个结论,最后只能是typecho,虽说主题简单了点,我又不会写,但是\u003c/p\u003e  \u003cblockquote\u003e   \u003cp\u003eToss more than life!\u003c/p\u003e \u003c/blockquote\u003e  \u003cp\u003e如此境界定能让我自己写个主题出来,哈哈\u003c/p\u003e  \u003cp\u003e希望我能找到个速度快,ping不高,还流量充足的空间吧\u003c/p\u003e \u003c!-- This document was created with MarkdownPad, the Markdown editor for Windows (http://markdownpad.com) --\u003e\n","cover":"","link":"更换wordpress至typecho.html","preview":"","title":"更换Wordpress至typecho"},{"content":"\n\n- 【文章标题】: DNF Extractor 2.2.0 去更新提示\n\n- 【文章作者】: kirile\n\n- 【软件名称】: DNF Extractor\n\n【软件大小】: 724 KB\n\n【下载地址】: 自己搜索下载\n\n【加壳方式】: 无\n\n【保护方式】: 无\n\n【编写语言】: VB\n\n【使用工具】: OllyDbg\n\n【操作平台】: Win7 X64\n\n【作者声明】: 只是感兴趣，没有其他目的。失误之处敬请诸位大侠赐教!\n\n\n====\n【详细过程】\n启动时提示更新,关闭后打开官网 minidnf专用,新版没找到运行脚本的功能\n1.\n00404010  $  68 74424000   push DNF_Extr.00404274                   ;  VB5!6\u0026\u0026*  VB入口\n00404015   .  E8 F0FFFFFF   call \u0026amp;lt;jmp.\u0026amp;amp;MSVBVM60.#100\u0026amp;gt;\n0040401A   .  0000          add byte ptr ds:[eax],al\n0040401C   .  0000          add byte ptr ds:[eax],al\n0040401E   .  0000          add byte ptr ds:[eax],al\n00404020   .  3000          xor byte ptr ds:[eax],al\n00404022   .  0000          add byte ptr ds:[eax],al\n00404024   .  50            push eax\n00404025   .  0000          add byte ptr ds:[eax],al\n00404027   .  0040 00       add byte ptr ds:[eax],al\n0040402A   .  0000          add byte ptr ds:[eax],al\n0040402C   .  DA7D A2       fidivr dword ptr ss:[ebp-0x5E]\n0040402F   .  08AE 7817488B or byte ptr ds:[esi+0x8B481778],ch\n00404035   .  8038 4A       cmp byte ptr ds:[eax],0x4A\n00404038   .  AF            scas dword ptr es:[edi]\n00404039   .^ EB F3         jmp XDNF_Extr.0040402E\u003c/pre\u003e\n2.\n插件搜索抓包得到的 GET代码，搜Client，HTTP开头，回车\n3.\n\u003cpre class=\"lang:asm decode:true \"\u003e00455636   .  68 A82D4100   push DNF_Extr.00412DA8                   ;\n0045563B   .  52            push edx                                 ;  接下来程序开始拼装字符串了\n0045563C   .  8985 28FFFFFF mov dword ptr ss:[ebp-0xD8],eax\n00455642   .  8985 24FFFFFF mov dword ptr ss:[ebp-0xDC],eax\n00455648   .  8985 20FFFFFF mov dword ptr ss:[ebp-0xE0],eax\n0045564E   .  FFD3          call ebx                                 ;  \u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaStrI2\u0026amp;gt;\n00455650   .  8B35 AC164000 mov esi,dword ptr ds:[\u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaSt\u0026amp;gt;;  MSVBVM60.__vbaStrMove\n00455656   .  8BD0          mov edx,eax\n00455658   .  8D4D E4       lea ecx,dword ptr ss:[ebp-0x1C]\n0045565B   .  FFD6          call esi                                 ;  \u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaStrMove\u0026amp;gt;\n0045565D   .  8B3D 44144000 mov edi,dword ptr ds:[\u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaSt\u0026amp;gt;;  MSVBVM60.__vbaStrCat\n00455663   .  50            push eax                                 ; /String\n00455664   .  FFD7          call edi                                 ; __vbaStrCat\n.......                                                              ; 中间省略一部分，因为太长了，拼装个语句拼了好久\n004558B8   .  68 242F4100   push DNF_Extr.00412F24                   ;  \u0026amp;amp;LangID=   //这是最后一个字段,判断语言\n004558BD   .  FFD7          call edi\n004558BF   .  8BD0          mov edx,eax\n004558C1   .  8D8D 48FFFFFF lea ecx,dword ptr ss:[ebp-0xB8]\n004558C7   .  FFD6          call esi\n004558C9   .  50            push eax\n004558CA   .  FF15 98114000 call dword ptr ds:[\u0026amp;lt;\u0026amp;amp;KERNEL32.GetUserDef\u0026amp;gt;; [GetUserDefaultLangID\n004558D0   .  50            push eax\n004558D1   .  FF15 D4134000 call dword ptr ds:[\u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaStrI2\u0026amp;gt;;  MSVBVM60.__vbaStrI2\u003c/pre\u003e\n4.\n\u003cpre class=\"lang:asm decode:true \"\u003e004559BE   .  FF15 48164000 call dword ptr ds:[\u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaFreeS\u0026amp;gt;;  MSVBVM60.__vbaFreeStrList\n004559C4   .  8D85 38FFFFFF lea eax,dword ptr ss:[ebp-0xC8]\n004559CA   .  50            push eax\n004559CB   .  8D8D 3CFFFFFF lea ecx,dword ptr ss:[ebp-0xC4]\n004559D1   .  51            push ecx\n004559D2   .  8D95 40FFFFFF lea edx,dword ptr ss:[ebp-0xC0]\n004559D8   .  52            push edx\n004559D9   .  6A 03         push 0x3\n004559DB   .  FF15 28144000 call dword ptr ds:[\u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaFreeO\u0026amp;gt;;  MSVBVM60.__vbaFreeObjList\n004559E1   .  81C4 B8000000 add esp,0xB8\n004559E7   .  68 FE5A4500   push DNF_Extr.00455AFE\n004559EC   .  E9 0C010000   jmp DNF_Extr.00455AFD\n004559F1   .  F645 FC 04    test byte ptr ss:[ebp-0x4],0x4\n004559F5   .  74 09         je XDNF_Extr.00455A00\n004559F7   .  8D4D E8       lea ecx,dword ptr ss:[ebp-0x18]\n004559FA   .  FF15 F0164000 call dword ptr ds:[\u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaFreeS\u0026amp;gt;;  MSVBVM60.__vbaFreeStr\n.............                                                         ;中间又是很长一段,从上面可以看到VB开始释放那个长字符串的内存里\n00455AD0   .  51            push ecx\n00455AD1   .  6A 29         push 0x29\n00455AD3   .  FF15 48164000 call dword ptr ds:[\u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaFreeS\u0026amp;gt;;  MSVBVM60.__vbaFreeStrList\n00455AD9   .  8D95 38FFFFFF lea edx,dword ptr ss:[ebp-0xC8]\n00455ADF   .  52            push edx\n00455AE0   .  8D85 3CFFFFFF lea eax,dword ptr ss:[ebp-0xC4]\n00455AE6   .  50            push eax\n00455AE7   .  8D8D 40FFFFFF lea ecx,dword ptr ss:[ebp-0xC0]\n00455AED   .  51            push ecx\n00455AEE   .  6A 03         push 0x3\n00455AF0   .  FF15 28144000 call dword ptr ds:[\u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaFreeO\u0026amp;gt;;  MSVBVM60.__vbaFreeObjList\n00455AF6   .  81C4 B8000000 add esp,0xB8\n00455AFC   .  C3            retn\n00455AFD   \u0026amp;gt;  C3            retn                                     ;  RET 跳到下一行\n00455AFE   \u0026amp;gt;  8B4D EC       mov ecx,dword ptr ss:[ebp-0x14]\n00455B01   .  8B45 E8       mov eax,dword ptr ss:[ebp-0x18]\n00455B04   .  5F            pop edi\n00455B05   .  5E            pop esi\n00455B06   .  64:890D 00000\u0026amp;gt;mov dword ptr fs:[0],ecx\n00455B0D   .  5B            pop ebx\n00455B0E   .  8BE5          mov esp,ebp\n00455B10   .  5D            pop ebp\n00455B11   .  C2 0800       retn 0x8\u003c/pre\u003e\n5.\n\u003cpre class=\"lang:asm decode:true \"\u003e00453550   .  8B35 AC164000 mov esi,dword ptr ds:[\u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaSt\u0026amp;gt;;  MSVBVM60.__vbaStrMove    ;retn 0x8 后跳到这里\n00453556   .  8BD0          mov edx,eax\n00453558   .  8D4D E4       lea ecx,dword ptr ss:[ebp-0x1C]\n0045355B   .  FFD6          call esi                                 ;  \u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaStrMove\u0026amp;gt;\n0045355D   .  8D55 D8       lea edx,dword ptr ss:[ebp-0x28]\n00453560   .  52            push edx\n00453561   .  8D45 DC       lea eax,dword ptr ss:[ebp-0x24]\n00453564   .  50            push eax\n00453565   .  6A 02         push 0x2\n00453567   .  FF15 48164000 call dword ptr ds:[\u0026amp;lt;\u0026amp;amp;MSVBVM60.__vbaFreeS\u0026amp;gt;;  MSVBVM60.__vbaFreeStrList  ;总算是Free完了\n0045356D   .  8B4D E4       mov ecx,dword ptr ss:[ebp-0x1C]\n00453570   .  83C4 0C       add esp,0xC\n00453573   .  51            push ecx\n;走到这一行的时候   ECX 05095F64 UNICODE \"\u0026lt;a href=\"http://client.......\u0026amp;quot;\"\u0026gt;http://client.......\"\u0026lt;/a\u0026gt;\n;并且后面直接就开始call了,于是推断,下面这个函数 ExtUtility.dll:ID#212是用来访问网页的,右键nop之\n00453574      FF15 A4134000 call dword ptr ds:[\u0026amp;lt;\u0026amp;amp;EXTUTILITY.#212\u0026amp;gt;]   ;  EXTUTILI.#212\n0045357A   .  8B45 0C       mov eax,dword ptr ss:[ebp+0xC]\n0045357D   .  F600 01       test byte ptr ds:[eax],0x1\n00453580   .  74 26         je XDNF_Extr.004535A8\n00453582   .  FF15 A8134000 call dword ptr ds:[\u0026amp;lt;\u0026amp;amp;EXTUTILITY.#214\u0026amp;gt;]   ;  EXTUTILI.#214           ;并且后面有switch case条件语句出现,推测是用于检测 本次 GET操作的结果,并显示是否更新之类的提示\u003c/pre\u003e\n最后,nop掉之后,退出的时候也没有打开网页,检查更新也没反应了,那么结束了\n\n--------------------------------------------------------------------------------\n\n2014年11月01日 20:42:29\n","cover":"","link":"dnf-extractor-2-2-0-去启动更新提示.html","preview":"","title":"DNF Extractor 2.2.0 去启动更新提示"},{"content":"\n\n```ini\n[iplist]\ngoogle_cn = \ngoogle_hk = \ngoogle_talk = \n```\n这三个位置, 后方的地址如果可以解析到可用的google IP 即可消除黄字,红字 `goodaddr=0`\n于是先把后面的全部删除再说, 打开cmd ,\n```cmd\nnslookup www.google.com #OpenerDNS#\nnslookup www.youtube.com #OpenerDNS#\n```\n两个都可以, `#OpenerDNS#` 表示一个可以解析到 正确IP的 DNS 地址, 相当于把人家DNS里的IP拿来自己用. IP复制的上面的位置即可正常.主要是 OpenerDNS 不能看视频,不得不这么干啊\n","cover":"","link":"goagent-黄字-红字.html","preview":"","title":"Goagent 黄字 红字"},{"content":"\n\n使用POWERBUILDER 6 从HIS测试服务器中导出txt数据，然后导入到我自己的数据库里导入时发现有些表无法导入，列分隔符为制表符，行分隔符为CR LF导入时报标题的错，纠结了一天\n找到了解决方案高级里，设置 “有中文的列的数据类型”为 unicode字符串，然后将长度设为……………………数字去吧，一个汉字长度2，粘贴到word里然后瞄一眼左下角，卧槽我直接设了700\n","cover":"","link":"sql-server导入txt数据错误-数据流任务-数据转换失败-文.html","preview":"","title":"SQL SERVER导入txt数据错误: 数据流任务、 数据转换失败、文本截断"},{"content":"\n\n原因：今日购得一只迷你型无线路由器，准备扩张下家里的wifi信号啊，蛮期待的啊然后出事儿了，任何网卡都不可以手动设置IP，包括本地网卡和无线网卡，只要一双击`Internet 协议版本 4`，或者选中然后点属性，一个样，windows 资源管理器已停止工作，下面详细内容为`comctl32.dll`模块的问题。因为前面几次，出这个事儿之后直接就死机了，于是强制关机了几次。然后最近几次居然不死机了。解决：网上搜得一帖子，也是`comctl32.dll`的问题，然后他的方法是卸载一个叫什么的上网助手，于是，我就想到，肯定有软件对我的网卡进行了处理。右下角45度，猎豹WIFI，这货映入我的眼帘啊。\n\n不管三七二十一啊，直接卸载了之，果然正常了 \n\nPS：没玩过中继模式，我说怎么信号不见了呢\n","cover":"","link":"卸载了该死的猎豹wifi.html","preview":"","title":"卸载了该死的猎豹WIFI"},{"content":"\n\n错误一、展开数据库列表时出现值不能为空。参数名`viewinfo(microsoft.sqlserver.management.sqlstudio.explorer)`\n这个错误一出，管理工具立马就跪了啊\n\n错误二、鉴于上面的问题很严重，于是重装SQL SERVER 2008 R2，安装时选择管理工具，但是报错：`Failed to open xml file XXXXXXmachine.config`错误一的俩解决方案在`C:\\Users\\你的用户名\\AppData\\LocalTemp` 建立1，2，3文件夹的，无效。\n坑爹的方法，哪个软件会在临时文件夹放个必须文件的啊打开管理工具`CTRL`+`ALT`+`G` 在“己注册的服务器”重新注册您的服务器，这个更坑了，我的已注册服务器里啥也没有错误二的解决方法报错时会出现一个目录，到这个目录下。我这是这个`C:\\Windows\\Microsoft\\.NETFramework\\v2.0.50727\\CONFIG` 嘎嘣，我的心啊，这是`.NET2.0`搞的鬼了？ 于是想重新安装`.NET 2.0`，无果，一个是已安装，一个是已有`.NET3.5` 继续搜索，最终解决, 在这个目录下 找 `machine.config.default` 文件，然后获取管理员权限或者更改所有者，把`.default` 去掉，后缀改为 `config` ，然后成功安装了`SQL SERVER 2008 R2`插张图出现了，`d2007litebackup`，看来是这个`machine.config`文件被修改了，但是应该不是`DELPHI 2007 lite`干的，因为之前是正常的，OK搞定了！！\n","cover":"","link":"sql-server-2008-r2-管理工具-ssms-值不能为空错误重新安装sql-server-无法安.html","preview":"","title":"SQL SERVER 2008 R2 管理工具 SSMS 值不能为空错误+重新安装SQL SERVER 无法安装 SSMS"},{"content":"\n\n无线网卡从Intel 5100升级为BCM4322，后悔没换三天线的苹果原装无线网卡 AR什么的，那个三天线换上一定很爽，哈哈\n\n\n有一个EDUP的USB无线网卡，装上官方驱动，连接无线\n\n网络共享中设置为 EDUP的网络通过WIFI共享。\n\n然后效果就是，不插EDUP，内置的网卡照常联网，信号不错。当我插上EDUP时，安装的无线管理程序自动启动，自动联网。\n\nWIFI自动转为共享（AP）模式，然后手机刷新下就行了（手机wifi信号不行，网速烂，这样扩大一下就爽了）\n\n然后EDUP拔掉，变成原先的状态。哈哈，什么随身wifi都弱爆了\n","cover":"","link":"黑苹果-mac-10-8-5-ml-共享无线.html","preview":"","title":"黑苹果 MAC 10.8.5 ML 共享无线"},{"content":"\n\n原先的Intel 5100 无解，所以黑苹果就一直用USB无线网卡，EDUP的，它需要安装MAC版驱动程序才能连接\n\n昨天购入BCM4322半高版，据说免驱。\n\nM50的主板上有两个PCI-E接口，一个是全高的，被Intel5100占去了，另一个空着，以前网上看到说是给迅盘用得，我™的都不知道这是什么东西，好吧，后来查了貌似跟ReadyBoost类似，相当于用迅盘存储缓存然后加速系统什么的（无耻地猜了，估计跟RamDisk差不多）\n\n不死心，我也尝试，讲BCM4322插到那个半高的接口，然后开机，黑苹果下果然一点反应都没，二另一个全高的就正常，这真是坑爹啊\n\n更坑爹的是，为毛等我买了双天线的无线网卡，才让我发现，原来M50Vc居然自带了三根天线啊，我™怎么不直接买苹果原装的那个叫什么的，还是450Mbps啥的啊。\n\n我只能说，这机器神了，激发了我继续折腾的渴望。\n\n----------------------------------------------------------------------------------------------------------------------------\n\n显卡9300M GS，MXM架构，PCI-E插槽，可更换，但备选不多，并且货源少。\n\nCPU：T6400 2.00 GHz--T9600 2.80 GHz\n\n硬盘：2500r/s 破硬盘（这货寿命还长着呢，尚健在）光驱位+ ADATA SP900 原硬盘位\n\n无线：Intel 5100--BCM4322  哪天有钱了，整个三天线的爽一把\n\n蓝牙：据说这货不是很好装\n\n内存：加了一条2G 三星的内存，DDR2 800 MHz\n\nBIOS：SLIC 2.1？远景上一个修改版，说是加速启动，我是没看到，开机自检还是屎一样慢，起码10秒，现在是第二次刷了，都是一次成功\n\n硅脂：这货对我来说是个大坑，我还是用固态硅脂片吧\n\n电池：损耗差不多了，等有钱........\n\n键盘：有几个键在windows下经常按不出来，ESC  数字键3 数字键7 横排的数字键0 横排的=号，字母键倒是一个都没问题\n\n系统：MAC Mountain Lion 10.8.5 懒人版 装在SSD\n\n状态：可睡眠，不能唤醒，显卡可驱动，尚不能调节亮度，网卡有驱动，触摸板只能移动，按键可用，滚动不能。Mac版变色龙引导，USE Kernel Cache 开机飞快。\n\nwindows Server 2012 R2 with update 1  目前进不去，开机蓝屏\n\n继续折腾..\n\n\n","cover":"","link":"m50vc-更换无线网卡intel-5100-bcm4322-黑苹果测试.html","preview":"","title":"M50Vc 更换无线网卡Intel 5100--BCM4322 黑苹果测试"},{"content":"\n\n```pascal\ntype\nTMyRect = record\n    Top: Integer;\n    Left: Integer;\n    Width: Integer;\n    Height: Integer;\n    frame: TFrameCard;\n  end;   //定义类\nvar\nmyre: array of TMyRect;  //定义类的数组，此处为动态\n                        //数组，故使用前需要用SetLength设置\n                        //数组元素个数\nprocedure XXXX\nvar\n  Hrgn: THandle;\nbegin\n  myre[i].frame := TFrameCard.Create(nil); //用循环存储创建的对象\n  myre[i].frame.Top := myre[i].Top;\n  myre[i].frame.Left := myre[i].Left;\n  myre[i].frame.Width := myre[i].Width;\n  myre[i].frame.Height := myre[i].Height;\n  myre[i].frame.Parent := Main.ScrollBox1;  //设定归属和位置\n  Hrgn := CreateRoundRectRgn(0, 0, myre[i].frame.Width,     myre[i].frame.height,20, 20);\n  SetWindowRgn(myre[i].frame.Handle, Hrgn, true);\n  DeleteObject(Hrgn);     //设置圆角\nend;\n```\n","cover":"","link":"delphi动态创建多个控件和设置圆角.html","preview":"","title":"Delphi动态创建多个控件和设置圆角"},{"content":"\n\n比如说「 Panel 」 组件，如果有好多个，那么在调整窗口大小的时候，就疯狂地闪烁了\n\n方案：\n\nTForm 和 TPanel 都有一个属性`doublebuffered`，设为`True`即可\n","cover":"","link":"delphi-控件闪烁.html","preview":"","title":"Delphi 控件闪烁"},{"content":"\n\n先看一段代码\n```c\n#define DLL_API __declspec(dllexport)\n#pragma comment(linker,\"/export:file=_file@4\")\nextern \"C\" DLL_API char * __stdcall file(char *FilePath)\n{\n    int len;\n    char *current = NULL;\n    len = strlen(FilePath);\n    for (; len\u003e0; len--)\n        if (FilePath[len] == '134')\n        {\n            current = \u0026FilePath[len + 1];\n            break;\n        }\n    return current;\n}\n```\n\n这是在Visual Studio 2013环境下的C++ DLL的一个函数的代码\n函数作用为取出一段路经的文件名带上后缀\n首先第一行，把`__declspec(dllexport)`这么长的一个家伙缩减一下\n\n第二行重命名函数，\n`extern \"C\"` 表示下面的代码将用C的标准进行编译链接\n`__declspec(dllexport)`表示这个函数为导出函数\n`__stdcall` 是一种调用约定，很多其他的语言或者IDE都支持这种调用方式\n还有一种`__cdecl`，当不加`__stdcall`时，默认，即C的调用约定\n\n然后说说`__stdcall`,当使用这种方式约定函数时，编译器会对函数名进行格式化，比如上面这个，本来的函数名是file，当编译之后，用导出函数查看器一看，成了`_file@4`，被加上了两部分，一个是前面的下划线，另一个是后面的@4 ，这个应该是表示参数的信息的，如果用C++（即不加`extern \"C\"`），那么前面会是一个？号，后面会有一些表示函数参数数据类型之类的“乱码”\n\n所以这句就很有必要了\n```c\n#pragma comment(linker,\"/export:file=_file@4\")\n```\n\n等号前后分别改为“原函数名”和“导出函数名”，当然导出函数函数要先编译一次了，如果函数很多个的话，就用*.def文件进行，我是暂时用不到了。\n\n加上这句之后，会出现两个导出函数`_file@4`和`_file`，也不知道是怎么个情况，下划线还存在，待我后续继续研究\n\n","cover":"","link":"c-dll调用约定.html","preview":"","title":"C++ DLL调用约定"},{"content":"\n\n先放下两个的参数\n\n\n    T6400-------------------------------------------------\n    \n    插槽类型：PGA 478\n    \n    CPU主频：2GHz\n    \n    制作工艺：45纳米\n    \n    二级缓存：2MB\n    \n    核心数量：双核心 双线程\n    \n    核心代号：Penryn\n    \n    热设计功耗(TDP)：35W\n    \n    总线类型：FSB总线 800MHz\n    \n    适用类型：笔记本\n    \n    倍频：10倍\n    \n    外频：200MHz\n    \n    内核电压：1-1.25V\n    \u003e\n    \n    T9600--------------------------------------------------\n    \n    插槽类型：Socket 478\n    \n    CPU主频：2.8GHz\n    \n    制作工艺：45纳米\n    \n    二级缓存：6MB\n    \n    核心数量：双核心 双线程\n    \n    核心代号：Penryn\n    \n    热设计功耗(TDP)：35W\n    \n    总线类型：FSB总线 1066MHz\n    \n    适用类型：笔记本\n    \n    倍频：10.5倍\n    \n    外频：266MHz\n    \n    内核电压：1.05-1.2125V\n    \n    ----------------------------------------------------------\n\n然后说下升级过程\n\n- 拔掉电池\n- 拆开后盖\n- 扣掉风扇插口\n- 拧开北桥和CPU的螺丝，然后直接连带风扇一起取下\n- 拧开CPU旁边的一字螺丝，有锁形图标提示\n- 换上新的CPU，把螺丝拧回去\n- 去除CPU、北桥和导热铜片上的固化的硅脂，北桥上是北桥专用的散热垫，CPU上应该是相变片吧，我猜\n- 重新涂上硅脂\n- 换上CPU相变片和北桥的散热垫\n- 开机，BIOS时间被重置，应该是电脑有点久了，BIOS电池快没了\n- 温度测试，就简单地用鲁大师试了一下。原先用硅脂的时候，果断不顶用，CPU温度时高时低，后来经检查应该是硅脂问题。然后果断去换了固态硅脂（相变片），温度压力测试稳定在52度左右，比原来的一会报警一会温度很低可好的不能再好了\n\n\nPS：这回终于是把风扇整个拆下来清理了一遍，清爽多了，以前只是用棉签捅啊捅的，嘿嘿。以后要是有空，把MXM架构的9300M GS也给升级了。\n\n","cover":"","link":"m50vc-pm45-cpu升级成功t6400-t9600.html","preview":"","title":"M50Vc PM45 CPU升级成功T6400-T9600"},{"content":"\n\nC中希望把一段代码，写成头文件的形式，作为后续调用，总不能每次都去粘贴代码吧\n \n于是我按照规定写了这么两个文件\n\n####getfilename.h\n```c \nchar *GetFileName(char *FilePath);\n\ngetfilename.c\n\n#include \u003cstring.h\u003e\nchar *GetFileName(char *FilePath)\n{\n    int len;\n    char *current = NULL;\n    len = strlen(FilePath);\n    for (; len\u003e0; len--)\n    if (FilePath[len] == '134')\n    {\n        current = \u0026FilePath[len + 1];\n        break;\n    }\n    return current;\n}\n```\n然后又写了个测试的\n```c\n#include \u003cstdio.h\u003e\n#include \"getfilename.h\"\n\nint main ( int argc, char *argv[] )\n{\n    char *y=\"45648511226456564C47.pdf\";\n    printf ( \"%sn\",GetFileName(y));\n    getchar();\n    return 0;\n}    \n```\n然后在gvim中按下了F5（一键编译运行），报错了，说找不到GetFileName\n怎么会呢\n不信又用cl试了一下，还是一样\n\n然后我试着把getfilename.h改成后缀.c\n\n居然可以了，看来是文件包含问题\n\n但是我想不通的是为什么头文件里可以不包含源文件呢，编译器如何找到源文件里的函数的实现部分呢？\n\n终于找到了“容易理解”的说法\n\n[http://www.cnblogs.com/arun/articles/1536803.html](http://www.cnblogs.com/arun/articles/1536803.html)\n\n然后我带着这种说法去visual studio里\n\n这么一放\n\n果然VC会把源文件里所有的.c文件都编译成.obj文件，然后在生成的时候，把他们链接起来，至于.h文件，预编译的时候就已经用掉了。\n\n","cover":"","link":"c语言头文件及其源文件.html","preview":"","title":"C语言头文件及其源文件"},{"content":"\n\n### GCC\n\n- 安装MinGW，并下载相关包, 默认安装在`C:\\MinGW`\n- 设置环境变量\n\n```bat\nC_INCLUDEDE_PATH=C:\\MinGW\\include\nCPLUS_INCLUDE_PATH=C:\\MinGW\\include\nLIBRARY_PATH=C:\\MinGW\\lib\nPath=C:\\MinGW\\bin（添加）\n```\n\n如果是单用户，即这台计算机只有你一个人用，可以把这个放到上面的用户变量表里，如果多用户，则放到下面。\n\n到这里可以在CMD中使用\n\n```cmd\ngcc –o first first.c\n```\n\n来进行编译了。不过这样编译出来的是DEBUG版的，如果要编译出Release版的，则使用 `–s` 参数\n\n### VC\n\n安装Visual Studio 2013\n\n默认的安装路径为`C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\`\n\n设置环境变量\n\n```dos\nINCLUDE=C:\\Program Files (x86)Microsoft Visual Studio 12.0\\VC\\include;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.1A\\Include\n\nLIB=C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\lib;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.1A\\Lib\n\nPath=C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\bin（添加）\n\nVCINSTALLDIR=C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\\n\nVS\\120\\\nCOMNTOOLS=C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\Tools\\\n\nVSINSTALLDIR=C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\\n```\n\n特别是`INCLUDE`和`LIB`一定要同时设置好两个位置，即一个VC目录下的，一个`Microsoft SDKs`目录下的，缺一不可。否则在命令行下输入`cl first.c` 会出现`stdio.h 不包含程序集（含义明显就是说找不到文件）`，就只能在Visual Studio 2013提供的自带的命令行工具中编译了。\n\n同理，在cl命令后加上` /MD /O2`选项即可编译出Release版本了，虽然没有其他参数，但是这样的程序已经够小了。\n\n比如一个只有十来行代码的，并且只有包含`stdio.h`和`stdlib.h`两个头文件的C程序\n\nGCC的Debug版占用92K，Release版占用20K\n\nCL的Debug版占用80K，Release版占用8K\n\n居然都相差12K的大小，到底多了什么呢，看一下区段就知道了。\n\nGCC为什么多了那么多区段，而且查壳还显示UpolyX，坑爹！\n","cover":"","link":"windows下gcc编译环境和vc编译环境的搭建-2.html","preview":"","title":"Windows下GCC编译环境和VC编译环境的搭建"},{"content":"\n\n```c\n/*\n * =====================================================================================\n *\n *       Filename:  install.c\n *    Description:  Install *.apk file to your android phone by draging an apk file to the program\n *        Version:  1.0\n *        Created:  2014/3/4 10:35:12\n *       Revision:  none\n *       Compiler:  gcc\n *         Author:  Sumit.lc, sulinke1133@gmail.com\n *\n * =====================================================================================\n */\n\n#include \u003cstdio.h\u003e\nint main ( int argc, char *argv[] )\n{\n    char total[256]={0};                         \n    sprintf(total, \"%s%s\", \"adb install \", argv[1]);         /* add commands together  */\n    printf ( \"Waiting for device online...n\" );            /* make sure the device is connected */\n    system(\"adb wait-for-device\");\n    system(total);                              /* run the command */\n    return 0;\n}\n```\n```c\n/*\n * =====================================================================================\n *\n *       Filename:  push.c\n *    Description:  Push file to \"/sdcard/\" and the filename not be changed\n *        Version:  1.0\n *        Created:  2014/3/4 10:46:56\n *       Revision:  none\n *       Compiler:  gcc\n *         Author:  Sumit.lc (), sulinke1133@gmail.com\n *\n * =====================================================================================\n */\n\n#include \u003cstdio.h\u003e\n#include \u003clibgen.h\u003e\nint main ( int argc, char *argv[] )\n{\n    char total[256]={0};\n\tsprintf(total, \"%s%s %s%s\", \"adb push \",argv[1],\"/sdcard/\",basename(argv[1]) );\n    printf ( \"Waiting for device online...n\" );\n    system(\"adb wait-for-device\");\n    system(total);\n    return 0;\n}\n```\n","cover":"","link":"two-programs-realize-installing-apk-and-pushing-files.html","preview":"","title":"two programs realize installing *.apk and pushing files"},{"content":"\n\n37wan版本的\n\n直接使用烧饼修改器的加速功能即可加速，保险起见在进副本之后开启加速，加速在3-5之间，暂时没敢调更高\n\n另一种修改内存法\n\n烧饼修改器，选择Deep Search模式**[此模式可以支持float值的搜索]**\n\n直接搜索速度值，然后1和2呼唤，list里出现的非F标识的均可以剔除，可能会剩下一个**1.9**几和**1.6**的两个值（速度为1的时候），选择1.6的那个，按住，然后选择Edit，然后修改到10以下，保险起见，实测可稳定再快就要看硬件和游戏本身了，可以试试看，然后只要不退出修改器即可一直加速。\n\nxunlei版\n\n同上修改内存法，加速对这个版本无效，会出网络问题（断线），然后就要重新启动游戏。\n\n八门神器在4.4.2的ART模式下根本不能用！\n","cover":"","link":"天天爱西游修改速度.html","preview":"","title":"天天爱西游修改速度"},{"content":"\n\n依次按照http://www.i7086.com/jiesuoplaystore所讲的办法进行操作\n\n以下为电脑端操作\n\nA、挂上美国V.P.N\n\nB、打开美版Play找一本需要付费的Book，点击`Buy`按钮，出现`Google Wallet`支付界面，默认勾选的是`Credit or debit card`，现在你将其切换到`Google Play Gift Card or Promo Code`，然后填写信息， `HOME LOCATION`默认是`United States`不要改，在`NAME`栏输入你的姓名英文，不一定是真名，并输入`ZIP code`，就填的`97224`，可以随便填一个美国的合法`ZIP code`，下面重点来了，你要输入`Gift Card code`，乱输的Code是无法过关的，你要输入20位的Code而且不能是纯数字但是纯字母可以，例如我输入的是`ABCDABCDABCDABCDABCD`，然后点`Accept and continue`就进入下一页面了，页面会提示\n\u003e “The Gift Card code you entered is invalid. Please try entering again or contact the support team”\n\n也就是我们输入的`Gift Card code`是无效的，不用管它，可以关掉此页面了\n\nC、用美国V.P.N重新打开一个Play页面，找一本免费的Book，点击Free按钮，这时候你会发现付费页面的默认支付方式变成了`Google Play balance $0.00`，点击`Accept and Buy`可以顺利购买，会弹出页面\n\n\u003e “Congratulations!XXXhas been added to your library”\n\n说明付费成功，接下来把免费的`Magazine、Music、Movie`都买一遍，再买一个Play Store没有的免费App，例如`Pandora® internet radio`。\n\nD、这时候你们把V.P.N关掉，刷新试试看，即使不用任何FQ手段你们也能使用美版Play Store，这时候你也可以打开你的手机和平板看看，你所有的设备都解锁了美版Play Store，只要你帐号登录的设备都是美版Play Store\n\n接下来是手机端了\n\n操作后发现在C步时不会出现`Google Play balance`，因此没有后续\n\n然后开启`fqrouter2`，进入设置，“清理后打开”，找一本免费的图书，选`Add To My Library`，后面选第二个选项，第一个是信用卡，暂时没卡。\n\n然后随意填入20位数字，然后继续操作即，提示`Code Invalid` 这样就成功了，可以测试下把`fqrouter2`关掉试试看能不能直接进完整版\n\n\n\n接下来按照`http://www.inexus.co/article-1376-1.html`的方法\n\n适用于已经正常开机, 而且安装好了各种软件, 不想清空自己的数据的人\n先把\"fqrouter2和Market Unlocker Pro\"下载并安装好,不用打开.\n\na.修改系统语言为`English(US)`, 进入手机的设置-应用程序-所有应用程序, 找到`\"Google Play Services\"`选择`\"Clear cache\"`, 接着依次找到\"Google Play Store\",\"Google Search\"进行同样的\" \"操作[no need to clear data]\u003c/span\u003e\nb.打开`Market Unlocker Pro`,向右边滑动一下,打开市场界面,选择`USA(T-Mobile)`, 切换到美国的Play市场. 软件会提示你是否打开Play商店, 选择不打开\u003c/span\u003e. (注意: 这步很重要,即使你已经解锁市场也需要进行此步骤的操作, 包括通过购买应用解锁的也是同样!)[我的情况并没有提示是否打开Play商店，所以无所谓了]\nc.进入`系统设置`-`Location`, 把开关关掉. 打开`fqrouter2`,加载完成后, 选择 开机自动启动软件 (十分重要!)\nd.关机, 拔出sim卡\ne.开机进入桌面,确认`fqrouter2`是否正常启动, 此步骤中稍微等等无线网络, 不要一进入桌面就着急设置,等十几秒左右吧.[由于在4.4.2下，这个软件开机自启动的过程比较慢，要挺久的。又由于我的无线是要经过网页验证的，所以等这个软件启动完成之后，再连验证无线]\nf.从底端向上滑打开`Google Now`,按照步骤就OK了!\ng.如果没有看到`Google Now`说明步骤有错, 请重试!\n","cover":"","link":"nexus-4-enable-google-play-complete-edition-google-now-in-china.html","preview":"","title":"Nexus 4 Enable Google Play Complete Edition \u0026amp; Google Now in China"},{"content":"\n\n\u003ca href=\"http://bucunzai.net/2010/10/vim/\" _src=\"http://bucunzai.net/2010/10/vim/\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003ehttp://bucunzai.net/2010/10/vim/\u003c/font\u003e\u003c/a\u003e\u003cdiv\u003e\u003cspan style=\"color: inherit; font-size: 10.5pt; line-height: 1.5;\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003ca href=\"http://blog.sina.com.cn/s/blog_5f2e119b0101s37n.html\" _src=\"http://blog.sina.com.cn/s/blog_5f2e119b0101s37n.html\"\u003ehttp://blog.sina.com.cn/s/blog_5f2e119b0101s37n.html\u003c/a\u003e \u003c/font\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e主要参考以上两处的方法\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003ca href=\"http://ftp://ftp.vim.org/pub/vim/patches/7.4/\" _src=\"http://ftp://ftp.vim.org/pub/vim/patches/7.4/\"\u003eftp://ftp.vim.org/pub/vim/patches/7.4/\u003c/a\u003e \u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003eVIM的源码补丁\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003ca href=\"http://ftp://ftp.vim.org/pub/vim/unix/vim-7.4.tar.bz2\" _src=\"http://ftp://ftp.vim.org/pub/vim/unix/vim-7.4.tar.bz2\"\u003eftp://ftp.vim.org/pub/vim/unix/vim-7.4.tar.bz2\u003c/a\u003e \u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e源码\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cb\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 12pt;\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003e源码下载\u003c/font\u003e\u003c/span\u003e\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003ca href=\"http://mercurial.selenic.com/downloads/\" _src=\"http://mercurial.selenic.com/downloads/\"\u003ehttp://mercurial.selenic.com/downloads/\u003c/a\u003e \u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e源码下载工具\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003ccode\u003e\u003cdiv style=\"border: 1px solid black; margin-left: auto; margin-right: auto; padding: 3px; font-size: 12px;\"\u003e\u003ccode\u003e\u003cdiv style=\"background-color: rgb(0, 0, 0); color: rgb(0, 255, 0); border: 1px solid rgb(242, 242, 242); margin-left: auto; margin-right: auto; padding: 3px; font-family: 'Courier New';\"\u003e\u003cdiv\u003ehg clone https\u003cfont color=\"#00ff00\"\u003e:\u003c/font\u003e\u003cfont color=\"#00ff00\"\u003e/\u003c/font\u003e\u003cfont color=\"#00ff00\"\u003e/\u003c/font\u003evim.googlecode.com\u003cfont color=\"#00ff00\"\u003e/\u003c/font\u003ehg\u003cfont color=\"#00ff00\"\u003e/\u003c/font\u003e vim \u0026nbsp;\u003cfont color=\"#00ff00\"\u003e/\u003c/font\u003e\u003cfont color=\"#00ff00\"\u003e*\u003c/font\u003e后面的vim表示保存的当前目录下的vim文件夹\u003cfont color=\"#00ff00\"\u003e*\u003c/font\u003e\u003cfont color=\"#00ff00\"\u003e/\u003c/font\u003e\u003cbr\u003ehg pull \u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u003cfont color=\"#00ff00\"\u003e/\u003c/font\u003e\u003cfont color=\"#00ff00\"\u003e*\u003c/font\u003e由于是第一次下载，所以以下两行没啥用\u003cfont color=\"#00ff00\"\u003e*\u003c/font\u003e\u003cfont color=\"#00ff00\"\u003e/\u003c/font\u003e\u003cbr\u003ehg update\u003c/div\u003e\u003c/div\u003e\u003c/code\u003e\u003c/div\u003e\u003c/code\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 12pt;\"\u003e\u003cb\u003e\u003cfont face=\"文泉驿微米黑\"\u003e打开编辑\u003c/font\u003e\u003c/b\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 12pt;\"\u003e\u003cb\u003e\u003cfont face=\"文泉驿微米黑\"\u003evimsrcgui_w32.c\u003c/font\u003e\u003c/b\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003ccode\u003e\u003cdiv style=\"border: 1px solid black; margin-left: auto; margin-right: auto; padding: 3px; font-size: 12px;\"\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cfont color=\"#008000\"\u003e/* On NT, tell the font renderer not to \"help\" us with Hebrew and Arabic\u003cbr\u003e\u0026nbsp;* text.\u0026nbsp; This doesn't work in 9x, so we have to deal with it manually on\u003cbr\u003e* those systems. */\u003c/font\u003e\u003cbr\u003e\u003cbr\u003e\u003cfont color=\"#0000FF\"\u003e\u003cb\u003eif\u003c/b\u003e\u003c/font\u003e (os_version.dwPlatformId \u003cfont color=\"#333399\"\u003e==\u003c/font\u003e VER_PLATFORM_WIN32_NT)\u003cbr\u003efoptions \u003cfont color=\"#333399\"\u003e|=\u003c/font\u003e ETO_IGNORELANGUAGE;\u003cbr\u003e\u0026nbsp; \u003cfont color=\"#008000\"\u003e/* 这两行注释掉*/\u003c/font\u003e\u003c/font\u003e\u003c/div\u003e\u003c/div\u003e\u003c/code\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cb\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 12pt;\"\u003e打开vimsrcos_mswin.c\u003c/span\u003e\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003ccode\u003e\u003cdiv style=\"border: 1px solid black; margin-left: auto; margin-right: auto; padding: 3px; font-family: 'Courier New'; font-size: 12px;\"\u003e\u003cdiv\u003e#\u003cfont color=\"#0000FF\"\u003e\u003cb\u003eifndef\u003c/b\u003e\u003c/font\u003e FEAT_PROPORTIONAL_FONTS\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cfont color=\"#008000\"\u003e/* Ignore non-monospace fonts without further ado */\u003c/font\u003e\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cbr\u003e\u0026nbsp;\u003cfont color=\"#0000FF\"\u003e\u003cb\u003eif\u003c/b\u003e\u003c/font\u003e ((ntm\u003cfont color=\"#333399\"\u003e-\u003c/font\u003e\u003cfont color=\"#333399\"\u003e\u0026gt;\u003c/font\u003etmPitchAndFamily \u003cfont color=\"#333399\"\u003e\u0026amp;\u003c/font\u003e \u003cfont color=\"#6E00AA\"\u003e1\u003c/font\u003e) \u003cfont color=\"#333399\"\u003e!=\u003c/font\u003e \u003cfont color=\"#6E00AA\"\u003e0\u003c/font\u003e)\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cfont color=\"#0000FF\"\u003e\u003cb\u003ereturn\u003c/b\u003e\u003c/font\u003e \u003cfont color=\"#6E00AA\"\u003e1\u003c/font\u003e;\u003cbr\u003e\u003cfont color=\"#008000\"\u003e/*注释掉这两行（或者return 0，不知道行不，没有尝试）*/\u003c/font\u003e\u003cbr\u003e\u003cbr\u003e#\u003cfont color=\"#0000FF\"\u003e\u003cb\u003eendif\u003c/b\u003e\u003c/font\u003e\u003c/div\u003e\u003c/div\u003e\u003c/code\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e这里参考\u003ca href=\"http://xbeta.info/gvim-powerword-ciba.htm\" _src=\"http://xbeta.info/gvim-powerword-ciba.htm\"\u003ehttp://xbeta.info/gvim-powerword-ciba.htm\u003c/a\u003e \u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cb\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 12pt;\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003e编译过程中出现\u003c/font\u003e\u003c/span\u003e\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003e\u003cb\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 12pt;\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003evimsrcObjGOY***pathdef.c\u003c/font\u003e\u003c/span\u003e\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003e\u003cb\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 12pt;\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003e编辑文件最后面\u003c/font\u003e\u003c/span\u003e\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003e\u003ccode\u003e\u003cdiv style=\"border: 1px solid black; margin-left: auto; margin-right: auto; padding: 3px; font-size: 12px;\"\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003echar_u \u003cfont color=\"#333399\"\u003e*\u003c/font\u003ecompiled_user \u003cfont color=\"#333399\"\u003e=\u003c/font\u003e (char_u \u003cfont color=\"#333399\"\u003e*\u003c/font\u003e)\u003cfont color=\"#FF00BF\"\u003e\"名字\"\u003c/font\u003e;\u003cbr\u003echar_u \u003cfont color=\"#333399\"\u003e*\u003c/font\u003ecompiled_sys \u003cfont color=\"#333399\"\u003e=\u003c/font\u003e (char_u \u003cfont color=\"#333399\"\u003e*\u003c/font\u003e)\u003cfont color=\"#FF00BF\"\u003e\"系统名称\"\u003c/font\u003e;\u003c/font\u003e\u003c/div\u003e\u003c/div\u003e\u003c/code\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cb\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 12pt;\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003e打开\u003c/font\u003e\u003c/span\u003e\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003e\u003cb\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 12pt;\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003evimsrcvim.h\u003c/font\u003e\u003c/span\u003e\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e在开头加上这一行（#include语句之后）：\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003ccode\u003e\u003cdiv style=\"border: 1px solid black; margin-left: auto; margin-right: auto; padding: 3px; font-size: 12px;\"\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e#\u003cfont color=\"#0000FF\"\u003e\u003cb\u003edefine\u003c/b\u003e\u003c/font\u003e MODIFIED_BY \u003cfont color=\"#FF00BF\"\u003e\"修改人名称 \"\u003c/font\u003e\u003c/font\u003e\u003c/div\u003e\u003c/div\u003e\u003c/code\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 11pt;\"\u003e\u003cb\u003e\u003cfont face=\"文泉驿微米黑\"\u003e修改适合vs2013编译器的makefile文件Make_mvc.mak\u003c/font\u003e\u003c/b\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e这个文件在源码的src目录下面，打开它。\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e在# Derive version of VC being used from nmake if not specified 这个区域下面，加入最新的vs2013的vc编译器的定义，否则makefile会拒绝编译，因为版本不匹配。\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e大约是424行，这个地方：\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e!if \"$(_NMAKE_VER)\" == \"11.00.60610.1\"\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003eMSVCVER = 11.0\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e!endif\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e在上面这一段下面加上如下的这一段：\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e!if \"$(_NMAKE_VER)\" == \"12.00.21005.1\"\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003eMSVCVER = 11.0\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e!endif\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e加上的这一段是为了加入vs2013的vc编译器版本定义的支持。\u003c/font\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e611行，把SUBSYSTEM = windows改成 SUBSYSTEM = windows,5.01\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e639行，把SUBSYSTEM = console改成 SUBSYSTEM = console,5.01\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e改这两行是为了让vs2013的编译器编译出来的exe支持在win2000 sp1及以上的版本系统运行，不改的话，生成的exe只支持在vista及以上的系统运行\u003c/font\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color=\"#ff0000\" face=\"文泉驿微米黑\"\u003ePS：7.4版本的源码新版本会直接加入支持，我的是VIsual Studio 2012 即MSVCVER=11.0，不需要修改，此处为附加\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cb\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 12pt;\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003e最后编译64位的gvim.exe。\u003c/font\u003e\u003c/span\u003e\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e以下为vimsrcbigvim64.bat的内容\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003ccode\u003e\u003cdiv style=\"background-color: rgb(0, 0, 0); color: rgb(0, 255, 0); border: 1px solid rgb(242, 242, 242); margin-left: auto; margin-right: auto; padding: 3px; font-size: 12px;\"\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003enmake \u003cfont color=\"#00ff00\"\u003e-\u003c/font\u003ef Make_mvc.mak FEATURES\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eHUGE GUI\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eyes OLE\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eyes CPUNR\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eIntel64 CPU\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eALPHA IME\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eyes GIME\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eyes CSCOPE\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eyes SNIFF\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eyes POSTSCRIPT\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eyes \u003cfont color=\"#00ff00\"\u003e%\u003c/font\u003e\u003cfont color=\"#00ff00\"\u003e1\u003c/font\u003e USERNAME\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eSUMIT USERDOMAIN\u003cfont color=\"#00ff00\"\u003e=\u003c/font\u003eSUMIT\u003cfont color=\"#00ff00\"\u003e-\u003c/font\u003ePC\u003cbr\u003epause\u003c/font\u003e\u003c/div\u003e\u003c/div\u003e\u003c/code\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003eCPU= \u0026nbsp;这一项实在不知道是什么，原先用AMD64，后来提示只有i386和ALPHA，我直接把i386排除了。不过这样后面会提示LINK错误，说ALPHA参数无效，必须为x86 x64之类的，也没在意。CPUNR不知道是干啥的\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cb\u003e\u003cspan data-wiz-span=\"data-wiz-span\" style=\"font-size: 12pt;\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003e打开 VS2013 x64 本机工具命令提示（开始菜单中），执行bigvim64.bat，\u003c/font\u003e\u003c/span\u003e\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e生成gvim.exe之后拷贝到VIM目录运行它，使用:ve看，如果第二行是\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003eMS-Windows 64-bit GUI version with OLE\u0026nbsp; 就说明成功了。\u003c/font\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cimg src=\"fb5aed06-8522-498a-b450-6f140d8c1c62_files/236ad6007bf68d48cbabd6dfa9f1691d.png\" border=\"0\"\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e附上效果图，可以中英文分别定义一种字体了，并且Mactype渲染效果不错\u003cbr\u003e\u003c/font\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cimg src=\"http://sumit.space.lc/wp-content/uploads/2014/02/wpid-828969e4f2309e6fc0d9b9b347f41b1a_ed74c95d163b7af39313f6dc232f1f45.png\" border=\"0\"\u003e\u003c/font\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e补丁已经到183了，比ftp上的还多一个，看来google code上的源码比较新啊\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003cbr\u003e\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont face=\"文泉驿微米黑\"\u003ePS：没有加入其他语言的支持，因为电脑上没装，所以懒得了\u003c/font\u003e\u003c/div\u003e\u003cbr /\u003e\u003cbr /\u003e\u003cdiv\u003e\u003ca title=\"来自为知笔记(Wiz)\" href=\"http://www.wiz.cn/i/13dc3a5d\"\u003e来自为知笔记(Wiz)\u003c/a\u003e\u003c/div\u003e\u003cbr /\u003e\u003cbr /\u003e\n","cover":"","link":"自己学着编译vim-7-4-x64-加入非等宽字体支持-支持渲染.html","preview":"\u003cp\u003e\u003ca href=\"http://bucunzai.net/2010/10/vim/\" _src=\"http://bucunzai.net/2010/10/vim/\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003ca href=\"http://bucunzai.net/2010/10/vim/\"\u003ehttp://bucunzai.net/2010/10/vim/\u003c/a\u003e\u003c/font\u003e\u003c/a\u003e\u003cdiv\u003e\u003cspan style=\"color: inherit; font-size: 10.5pt; line-height: 1.5;\"\u003e\u003cfont face=\"文泉驿微米黑\"\u003e\u003ca href=\"http://blog.sina.com.cn/s/blog_5f2e119b0101s37n.html\" _src=\"http://blog.sina.com.cn/s/blog_5f2e119b0101s37n.html\"\u003e\u003ca href=\"http://blog.sina.com.cn/s/blog_5f2e119b0101s37n.html\"\u003ehttp://blog.sina.com.cn/s/blog_5f2e119b0101s37n.html\u003c/a\u003e\u003c/a\u003e \u003c/font\u003e\u003c/span\u003e\u003c/div\u003e\u003c/p\u003e\n","title":"自己学着编译VIM 7.4 X64 加入非等宽字体支持，支持渲染"},{"content":"\n\n之前有使用Xposed框架，于是不能直接开启成功，解决办法是取消各个模块的激活状态，并在Xposed框架中卸载框架（相当于卸载了“驱动”），然后直接“设置-开发者选项-选择运行环境-使用ART”重启，就可以开启成功\n\n启动后会显示Android正在升级，然后根据应用数决定优化的时间\n\n\n目前支付宝钱包8.0不能兼容这个模式，换到7.7版本即可成功安装，并正常使用\n\n特点：应用开启速度明显上升，各种切换也更流畅了\n\n缺点：安装应用速度很慢，开机时间稍稍变长（反正没感觉，也没见开机快过，能比得上SSD24秒？）\n","cover":"","link":"android-4-4-开启art模式.html","preview":"","title":"Android 4.4 开启ART模式"},{"content":"\n\n呵呵，这个故事非常讽刺\n\n首先，前一段时间不知道怎么的突然挥发出google控来，装了谷歌输入法。一开始挺正常的，不过么。。。\n\n前两天，我发现Chrome浏览器老是无响应（嗯，就是这货），而且任务管理器里也没提示失去响应什么的，就只是主页面不能进行操作，后来经过试验，我发现只要我一点“图片另存为”，就出现这种状况，后来干脆，导出书签的时候出现了。然后我总结了一下，只要调用打开/保存文件对话框就会出现。\n\n归根结底，是因为我在进行操作时，谷歌输入法处于激活状态，然后试了试，发现关了输入法果然就正常了，好神奇。\n\n于是卸载\n","cover":"","link":"我今天卸载了刚没用几天的谷歌输入法.html","preview":"","title":"我今天卸载了刚没用几天的谷歌输入法"},{"content":"\n\n\u003cp\u003e新的一年，人生路上又过去了一个岔路口，希望新一年更加顺利！\u003c/p\u003e\n","cover":"","link":"新年快乐.html","preview":"","title":"新年快乐"},{"content":"\n\n时间：截至今天\n\n我有的好软件：\n\n1. Everything  搜索速度第一，还有个Listary可以使用Everything的引擎\n\n2. Ad muncher 去广告，有人在维护广告规则，虽然不支持IE11，呵呵\n\n3. IDM 下载的，当初第一次使用的时候发现下载速度比迅雷快，于是就爱上了\n\n4. GreatNews 从FeedDemon转过来的，没有经历过Google Reader时代，所以不能算GR粉了\n\n5. Mouse Inc  这个软件一个重要的功能就是实现ubuntu那种鼠标移到任意窗口上方即可使用滚轮对该窗口进行滚动操作，\u003cspan style=\"color: #ff6600;\"\u003e不管这个窗口是否已经激活，\u003cspan style=\"color: #000000;\"\u003e我想我之前的很多个鼠标都因为鼠标按键出问题，其根本理由就是“激活窗口”的次数太多了吧\u003c/span\u003e\u003c/span\u003e\n\n6. Goagent  偶尔可以加快国外网页的打开速度，原理好像是请求转发？\n\n7. Efficient Diary Pro 记日记软件，这类软件不多，这个软件也不一定就好，我对它的皮肤可是耿耿于怀的\n\n8. Connectify 无线分享软件，这个软件的专业版的话可以自动分享，即只要你的网络连接不是加密的就可以用分享出去，当你换个连接的时候自动切换，于是我把这个开机自启动了\n\n9. TotalCMD  资源管理器咯，我用的不多，所以还不是很熟练，这个软件在进行文件操作的时候很好用，特别是大量文件的时候，不然等着换鼠标吧。其他功能很少用。用的是一个定制版\n\n10. VIM 这应该是神器吧，但是我烦的是中文输入问题，本身在天朝输入中文就要切换，VIM里面也要切换，于是这切来切去的烦死人了，有时想输入两个字，我按的就不知道几下了\n\n11. NotePad 2 代替自带的不错，\n\n12. Foobar 无损音乐播放用，有各种美化版，漂亮得很\n\n13. FlashFXP 以前用的不多，加上TotalCMD有FTP功能，但是到了这个博客这里，TC的功能已经不够了\n\n14. FoxMail  我发现腾讯收购的软件做的都不错^v^\n\n15. keepass 记录密码的软件，还能快捷键自动输入\n\n16. Lingoes 翻译用 词库和其他的不能比\n\n17. Chrome 浏览器 用了才知道\n\n18. Potplayer 播放器 不知道怎么说\n\n19. PortMap 映射端口，构建可以代理的无线，即分享goagent代理\n\n20. Radialix  汉化用，偶尔玩玩\n\n21. RegWorkshop 试了几个软件，还是这个软件的注册表跳转最好了\n\n22. QTranslate 双击Ctrl，联网查询，弱点就是要联网\n\n23. WizNote 笔记软件，真心不错，1000积分还能换VIP，不过免费的也够用了\n\n24. TeamViewer  手机控制电脑\n\n25. uTorrent 我说不出哪里好\n\n26. Mirillis Action 录像软件，硬件加速，没有硬件加速，那录像就能卡死人\n\n27. MacType 渲染字体软件，从此不用忍受windows的那难看的“点阵”字体了\n\n28. IrfanView 看图软件，要不是Picasa不能看gif，我才不会选这家伙呢，一堆我平时都用不到的功能，要来干嘛，看惯了picasa的看图模式的界面，这个简直....\n","cover":"","link":"我的那些软件.html","preview":"","title":"我的那些软件"},{"content":"\n\n\u003cdiv\u003e最近用路由器、旧电脑和打印机构建了一套远程打印的设备\u003c/div\u003e1. 无法启用网络发现\u003cdiv\u003e表现为：选中启用网络发现后，点保存更改，然后再次进去查看，发现根本没有改过来。而在这台电脑/网络里，如果没有开启网络发现，在进入的时候会提示，但是点完“提示”里面的‘启用网络发现和共享’之后，还是无法启用，而且坑爹的是，这货开机只提示一次。\u003c/div\u003e\u003cdiv\u003e\u0026nbsp;其实是服务的问题\u003c/div\u003e\u003cdiv\u003e检查\u0026nbsp;\u003c/div\u003e\u003cdiv\u003eComputer Browser \u0026nbsp;\u003c/div\u003e\u003cdiv\u003eFunction Discovery Resource Publication\u003c/div\u003e\u003cdiv\u003eSSDP Discovery\u003c/div\u003e\u003cdiv\u003eUPnP Device Host\u003c/div\u003e\u003cdiv\u003e这四个服务，全部启用即可\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e2.启用网络发现后只能看到自己的电脑和路由器的，看不到打印服务器\u003c/div\u003e\u003cdiv\u003e这时需要检查防火墙的状态，最简单的方法是关闭它。\u003c/div\u003e\u003cdiv\u003e另一个方法是控制面板系统和安全Windows 防火墙高级设置\u003c/div\u003e\u003cdiv\u003e添加入站规则-新建规则-预定义-网络发现，然后选择前四个在右边的远程地址一栏标记为“本地子网”的规则，然后选中允许连接，点完成。\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e远程打印需要注意的地方\u003c/div\u003e\u003cdiv\u003e其实是注意局域网，只要局域网正常，然后打印服务端共享了打印机，并且设置好了驱动，那么都可以\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cbr /\u003e\u003cbr /\u003e\u003cdiv\u003e\u003ca title=\"来自为知笔记(Wiz)\" href=\"http://www.wiz.cn/i/13dc3a5d\"\u003e来自为知笔记(Wiz)\u003c/a\u003e\u003c/div\u003e\u003cbr /\u003e\u003cbr /\u003e\n","cover":"","link":"win-8-1无法进行网络发现.html","preview":"\u003cdiv\u003e最近用路由器、旧电脑和打印机构建了一套远程打印的设备\u003c/div\u003e1. 无法启用网络发现\u003cdiv\u003e表现为：选中启用网络发现后，点保存更改，然后再次进去查看，发现根本没有改过来。而在这台电脑/网络里，如果没有开启网络发现，在进入的时候会提示，但是点完“提示”里面的‘启用网络发现和共享’之后，还是无法启用，而且坑爹的是，这货开机只提示一次。\u003c/div\u003e\u003cdiv\u003e\u0026nbsp;其实是服务的问题\u003c/div\u003e\n","title":"win 8.1无法进行网络发现"},{"content":"\n\n今天用ftp升级wordpress的时候，上传完了之后，打开页面就提示了这么一句。\n\n于是果断打开wp-db.php编辑查看,因为看到了unexpected $end，于是想到是不是缺了个反括号或者啥，然后再错误提示的1063行那里，发现是一堆注释，开始怀疑了，是怎么个回事呢\n\n翻到代码最后\n```php\n/**\n* The database version number.\n*\n* @since 2.7.0\n*\n* @return false|string false on failure, version number on success\n*/\nfunction db_version() {\nreturn preg_replace( '/[^0-9.].*/', '', mysql_get_server_info( $this-\u003edbh ) );\n}\n}\n```\n而我在文件开头看到了`\u003c?php` 字样，于是就想也不想就给它加上了`?\u003e`;\n\n然后重新上传，但一上传我就知道问题出在哪儿了，因为提示我覆盖的两个文件大小相差太大了，一个20k，一个40k。\n\n原来是上传的问题。\n\n然后就查这个php的开头和结尾的写法，发现其实只有`\u003c?php` 也是正确的，相反反而比`\u003c?php ?\u003e`更加严谨。\n","cover":"","link":"wordpress-3-8-parse-error-syntax-error-unexpected-end-wp-db-php-错误.html","preview":"","title":"wordpress 3.8  “Parse Error: syntax error, unexpected $end ”@wp-db.php 错误"},{"content":"\n\n\u003cp\u003e\u003cspan style=\"font-size:12pt\"\u003e原来的时候，喜欢收集软件，因为喜欢折腾系统，就是瞎折腾，然后总是隔一段时间就出点系统问题，要么解决不了的，要么就是解决起来很麻烦的然后又急着有事，于是就重装，刚开始的时候重装的频率的确很高。\n\u003c/span\u003e\u003c/p\u003e\u003cp\u003e然后重装的时候又有一个怪癖，就是喜欢清洁重装，于是软件基本上都是装完系统后重新安装，然后重装之前经常无法考虑要备份的软件或者配置什么的。所以就经常出现，本来系统里很多软件，但是重装完之后，软件就少了几个。然后折腾着折腾着就又多了起来，如此往复。\n\u003c/p\u003e\u003cp\u003e\n \u003c/p\u003e\u003cp\u003e最近的套路是这样的，寻找优秀、高效率的好软件，如果是：\n\u003c/p\u003e\u003col\u003e\u003cli\u003e难以下载的\n\u003c/li\u003e\u003cli\u003e评价特别好的\n\u003c/li\u003e\u003cli\u003e珍藏版\n\u003c/li\u003e\u003cli\u003e高效率的，比如x64\n\u003c/li\u003e\u003cli\u003e……\n\u003c/li\u003e\u003c/ol\u003e\u003cp\u003e就收藏\n\u003c/p\u003e\u003col\u003e\u003cli\u003e软件的压缩包（如果是绿色版或者免安装的或者本身不带安装包的）\n\u003c/li\u003e\u003cli\u003e软件的安装包（这种情况很少，一般安装版的软件都在官网有下载，而且还会继续更新，当然那些几年不更新的除外）\n\u003c/li\u003e\u003cli\u003e破解文件\n\u003c/li\u003e\u003c/ol\u003e\u003cp\u003e然后还顺带收集收集驱动什么的\n\u003c/p\u003e\u003cp\u003e\n \u003c/p\u003e\u003cp\u003e综上所述，只想说一个，软件越来越多，越来越杂，如何管理\n\u003c/p\u003e\u003cp\u003e\n \u003c/p\u003e\u003cp\u003e我现在收集了很多绿色软件，放在固态硬盘里的一个文件夹里，全部都收集在一起，每个软件单独一个文件夹。但是由于这个目录结构比较复杂，所以经常想不起来自己到底有没有这个软件，于是很多收集的最后都沦落为在墙角吃灰了\n\u003c/p\u003e\u003cp\u003e软件管理软件用过Vstart，这应该是xp时代的好软件了，换一个合适的皮肤，看起来还是不错的，但是到win7 win8越来越觉得风格上难以统一了，而且这个软件也很久不更新了\n\u003c/p\u003e\u003cp\u003e原先也玩过objectdock rocketdock rklauncher等等仿制的启动工具，比如我现在就在用rocketdock，但是任务栏不知道放哪儿。任务栏有俩参考地方，一个是底下，一个是左边，右边和顶部总是会影响我关闭程序什么的，左边的话看时间习惯往右下角看，挺难习惯的。算了不废话了，现在暂时任务栏放左边，DOCK放底部。可是么，再接一个屏幕就坑爹了\n\u003c/p\u003e\u003cp\u003e\n \u003c/p\u003e\u003cp\u003e另外还用Launchy，这个软件不错，皮肤不错，Alt+Space的快捷键也不错，不过配置过程还是要花一些时间，配置完了就轻松了，每天就Alt+Space，输几个字母，回车就ok了。以前也用过Win+R来实现，不过现在不用，具体原因我也不知道。\n\u003c/p\u003e\u003cp\u003e\n \u003c/p\u003e\u003cp\u003e然后，自定义右键的菜单，比如现在右键文件会有Edit With VIM的菜单，发送到里有OD、lnk（我自己放快捷方式的文件夹），这也可以管理软件，毕竟只在特定的环境下才用这些软件。\n\u003c/p\u003e\u003cp\u003e所以还是要按需订制自己的程序管理策略。\u003c/p\u003e\n","cover":"","link":"程序的管理.html","preview":"","title":"程序的管理"},{"content":"\n\n\n\t\t\t一直用的是FeedDemon，前段时间因为GR要关闭了，这家伙居然来了此更新，瞬间觉得希望满满啊\n\u003cdiv\u003e最近不知道怎么回事FeedDemon间断性卡，于是下决心换一个软件，在线的暂时不考虑了，于是去找各种推荐\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n最后找到了GreatNews这个软件，外观和FeedDemon真是太像了，居然是国产的，居然原版是英文的，这真逗！也许是为了编程的方便吧\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e但是更逗的是这货的英文版的第一个菜单标题是Feed\n但是到了中文就成了Channel，然后被翻译成频道。再加上选择了中文语言后，菜单仍有部分英文，而这些英文居然没有在那个语言ini文件里出现，明显是原程序里才有的\u003c/div\u003e\n\u003cdiv\u003e果断调出Radialix进行整顿\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e正试用中，看看怎么样\u003c/div\u003e\n\n","cover":"","link":"changed_a_rss_reader.html","preview":"","title":"换了个RSS阅读器"},{"content":"\n\n应该都有一段时间非常喜欢折腾系统，优化了，精简了，删组件了，选好软件了。\n其实都是无聊的时候才会搞这些。以前经常遇到问题喜欢重装，但问题都是自己折腾出来的，\n\n当真正地使用电脑进行工作的时候，根本不会有那门心思去折腾的，每天都是干完事儿就关机睡觉之类的，也不会把折腾当作娱乐。以前对一个软件喜欢升级啦，又是卸载又是重装的，但真的用到了这个软件，根本不会去搞软件了，一个版本用到底就行了，即使有什么问题难以忍受，额忍忍就过去了么。\n\n特别是大软件，再折腾，再升级，没有深入进去使用，那么那些升级的新特性根本就用不上。\n\n就像Office一样，没有拿他写文档，处理文件的时候（也就是折腾的时候），总是有新版本就去装。但其实，我那时候还压根对word什么的不熟悉，只会拿他打开文件看看内容，等真正用office进行工作的时候，说不定office2003就比office2013好很多倍。\n\n再说系统，系统也是一直升级，当初用Xp的时候，win7出来了，看着别人电脑那淡入淡出的特效心痒痒啊，但是自己不会装系统啊，还记得第一次装win7的时候，那心跳的厉害，看着教程一步步做，生怕一步出问题就要重来，虽然后来win7没有让人失望，各种修复bug，刚开始的时候各种不兼容，比如红警什么的，游戏都进不去，还有外挂，那时候开发外挂的还在用xp。但是现在好了，win7成了一个挺好的系统，xp快淘汰了。那时候还有了第一个自己刻的win7旗舰版\nMSDN原版光盘。那段不兼容的时期是真心不好过的，想玩个老游戏么，各种不兼容，于是又开始折腾双系统，但后来发现，另一个系统也根本就没怎么用过，原因是啥，换另一个太麻烦了呗，软件又不能无损迁移过去。但是win7的特效，让我后来就没有回去过xp了。\n\n然后是win8了，又是老毛病，兼容问题，比win7稍微好一点，也玩了一段时间的app，但是我一个手机还是Nokia铁砖机的人，明显还不适应刷微博之类的娱乐活动的，再加上商店速度又慢，还占硬盘空间，原先的250G的硬盘根本挡不住这般侵略，估计很多无聊的时候都被拿来删文件了吧。然后我学乖了，太老的游戏不去接触他，因为win8当时用着是挺爽的，至少感觉上，程序运行的效率高了很多，也不知道是不是心理作用，至少装系统的时候快了一些。然后又开始折腾激活，至少花了一星期，总算电话激活了，但是问题又来了，那些KMS激活的看不上眼了。再到后来，win8的管理员审核模式让人蛋疼，再后来干脆不玩应用了，选服务器系统，定制组件。又后来，一咬牙换了SSD，果然爽了。又琢磨着换win8.1，这家伙，内核变了，老软件又有问题了，激活还失效了，于是又换服务器系统到现在。\n我擦，我废话真多！\n\n现在也有想重装，但是压抑住了，因为懒得搞，一搞又是一晚上，还不如玩点别的。\n\n\n反正最近的想法改了，不跟潮流了，就追求个稳定呗，有啥不好，话说还好多人想要个安定的生活呢。何必给自己找没事干呢!\n\n","cover":"","link":"children_toss_system.html","preview":"","title":"折腾系统的孩子"},{"content":"\n\n本来心痒痒想装一个黑苹果玩玩的，但经过实践发现，太坑我了。\n\n按照教程，能安装系统，也能进桌面，但是。。。。对但是，只能用-x -v -f,主要是-x即安全模式，无驱动\n\n驱动才是最恶心的地方了。不加-x就卡在-v图，也即驱动无法正常运行。\n\n据说9300MGS显卡有解决办法，但是后来又出来个5100无线网卡驱动无解，这，我没办法插网线上网，这不是坑爹呢么。\n\n尝试了下用外置的无线网卡，安装官方的Mac驱动，无用，不知道是不是安全模式的问题，那个驱动的主程序页面压根弹不出来。\n\n以前折腾过ubuntu，深知折腾一个系统，如果没有网络，就像鸟儿没了翅膀一样，怎么飞啊，像ubuntu这种需要连接源工作的系统，没网玩个啥。\n\n\n经过半天折腾，发现不适合我，像这种要对驱动进行代码修改的工作就好像让我往BIOS里加代码一样，很明显还没修炼到家么。\n\n无奈之下，放弃之，删除启动项，删除分区，不玩了。SSD玩玩windows也不错\n\n这win8.1里的lode PE怎么就是看不到调试的进程呢，坑爹的一笔啊\n\n\n后来找到解决办法了，果然是版本问题，去看雪下了个yoda版，正常了\n\n都想换win7去了，一劳永逸\n\n但是win8用久了，就很难回去了，就好像当初用了win7，真的就没回去xp过，因为xp实在太丑了，也许是xp没接触多久吧\n\n","cover":"","link":"my_way_of_black_apple_mac.html","preview":"","title":"我的Mac之路黑苹果"},{"content":"\n\n新版的NVIDIA驱动有可以自定义分辨率的功能，于是当分辨率不高，但是屏幕大小还可以的笔记本上，自带的分辨率就显得有点小了。\n\n比如我的，15寸屏幕，但是却最高支持1280*800，看着其他人的14寸的都是1366*768，也不是什么羡慕什么的，主要是，屏幕显示的东西太少了，如果自定义添加一个1400*900的分辨率，会发现，很模糊。\n\n解决办法：\n\n右键桌面个性化，显示，更改所有项目大小，设置为中等125%，然后再使用1400*900的分辨率，最后将桌面等位置的图标用滚轮设置为最小，，这样就可以实现，图标变小，但是字体还是挺大这样。又不至于因为设置了125%而导致的显示不完全。主要表现为，桌面能放更多东西，但是又不会模糊。OK，搞定！\n\n\n","cover":"","link":"nvidia_graphics_custom_resolution.html","preview":"","title":"NVIDIA显卡自定义分辨率"},{"content":"\n\n这个行动的原因是这样的：\n突然有那么一天，在我开机后我的电脑右下角出现了水印，一查看，未激活，而且是windows is not activite\n\n各种还原备份无果之后,嘿，我还不至于马上换，我居然挣扎着用KMS活了几天，但是越来越觉得那个半年不够用，虽然可以无限激活，但人有时候就是那么贱的，半年太短，得一年才好（一年也一样受不了）。\n\n于是先是去找了个win8 with wmc\npro的镜像，先用VHD方式尝试了一下，各种替换，我原来激活过的wmc密钥不能用了。\n附上原因：因为我换过硬盘，这是罪魁祸首，但是为什么前一段时间让我活着，这不得而知，也有可能是我的key被完全禁止了。\n以下是各项硬件和硬件ID的关系，即cmd下输入SLUI\n4回车出来那个窗口的那串数字。当各个加权值总和到25时，那么判定为第二台电脑了。\n\u003cdiv\u003e\n\u003ctable style=\"WiDTH: 50%\" cellspacing=\"0\"\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e硬件类别\u003c/td\u003e\n\u003ctd\u003e\n\u003cp align=\"center\"\u003e加权值\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eCD-ROM/CD-RW/DVD-ROM\u003c/td\u003e\n\u003ctd\u003e\n\u003cp align=\"center\"\u003e1\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e显卡\u003c/td\u003e\n\u003ctd\u003e\n\u003cp align=\"center\"\u003e1\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e内存\u003c/td\u003e\n\u003ctd\u003e\n\u003cp align=\"center\"\u003e1\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e声卡\u003c/td\u003e\n\u003ctd\u003e\n\u003cp align=\"center\"\u003e2\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMAC地址\u003c/td\u003e\n\u003ctd\u003e\n\u003cp align=\"center\"\u003e2\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSCSI适配器\u003c/td\u003e\n\u003ctd\u003e\n\u003cp align=\"center\"\u003e2\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eIDE接口\u003c/td\u003e\n\u003ctd\u003e\n\u003cp align=\"center\"\u003e3\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eCPU处理器\u003c/td\u003e\n\u003ctd\u003e\n\u003cp align=\"center\"\u003e3\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eBIOS固件\u003c/td\u003e\n\u003ctd\u003e\n\u003cp align=\"center\"\u003e9\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e硬盘\u003c/td\u003e\n\u003ctd\u003e\n\u003cp align=\"center\"\u003e11\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e硬盘高达11，还说没影响，那就换吧，总有一天系统会告诉你，未激活呦。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e既然要重装，还是要考虑SSD的4k对齐。当初我不知道装了多少次win8 才把这货搞定。幸好这次没出什么问题。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\nDiskGenius直接删除分区，然后建立新分区，选上“对齐到XXXXX的整数倍”，选中4096。然后格式化,默认即可。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e然后可以使用硬盘安装工具将Server2012 的 install.wim导入到系统盘中，重启进入安装。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n第一次进入系统后按照http://bbs.pcbeta.com/viewthread-1197254-1-1.html和\u003c/div\u003e\n\u003cdiv\u003ehttp://bbs.pcbeta.com/viewthread-1023353-1-1.html，配置系统。\u003c/div\u003e\n\u003cdiv\u003e激活使用MSDN上的免费key，office还是用以前的备份。\u003c/div\u003e\n\u003cdiv\u003e一些基本的弄完之后，大概9G（没显卡驱动，没office），做了一次一次性备份。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n","cover":"","link":"today_they_changed_the_system_from_win8_professional_edition_to_win_server_2012_r2.html","preview":"","title":"今天又换系统了，从win8专业版到Win server 2012 R2"},{"content":"\n\n\n最近好傻,一直以为,无线ZJUWLAN是一个,有线接口是一个\n\n### 详细：\n\n可以同时使用一个VPN帐号登录ZJUWLAN和连接内网时拨号，两者不冲突\n\n然后因为我只有一个VPN帐号，而且没有闪讯可以连内网，所以在寝室都是用ZJUWLAN无线，即网页登录，于是手机不可以连ZJUWLAN，因为冲突了。\n\n今天明白了，原来如此\n\n首先有几种上网方式，一一列出来吧\n\n首先是连内网\n1. \n最早的201电信上网卡，30元半年，并且可以烧卡上网，烧卡时间用完之后，可以用来在`61.*.*.*（记不清了）@zheda`登录内网。寝室有线不能直接上内网。\n\n2. 闪讯帐号连内网，需要客户端，曾经有一个第三方的软件叫`isuck`，轻量级，用来连闪讯很好，不过到win8，在关闭的时候会报错，win8.1干脆运行就报错。闪讯如果连接`ChinaNetSX`无线，再客户端拨号也可以。\n\n3. 现在可以登录ZJUWLAN这个无线，然后用VPN账户登录，即可内外网同时上。\n4. 伟大的实验室党，可以直接插网线上内网，各校区网速还不一样，特别是绑定ip的那种，速度飞快。以前经常听到10M/s下载速度啊\n\n然后是外网\n1. 第一种不用内网，直接连接ChinaNet，一般一个刚注册的闪讯帐号有几个小时的试用时间，在弹出的网页登录即可。速度飞快，基本外网1M/s无压力，也许更快，用畅无线这个应用玩过一晚上，很爽！\n\n2. 连上内网之后，不管是插网线还是闪讯还是ZJUWLAN的，接着VPN拨号即可上外网。\n3. 据说在内网，用RVPN可以R到外网去。\n4. 内网设置支持ipv6后可以用ipv6代理访问ipv6的外网网站\n5. 暂时想不到了........\n\n于是一个奇葩诞生了\n\nZJUWLAN支持两种连接方式：网页登录和VPN拨号\n\n而一个VPN帐号可以同时用两种形式登录，而不会掉线。\n\n我原来以为ZJUWLAN和有线接口是属于两种不同的路线（或者说有不同的服务器，因为服务器不同所以不会掉线。），后来发现其实不同的方式就可以同时上，也就是说\n\n连接ZJUWLAN（不干别的）和在实验室插上网线，是一样的，不同的是连上ZJUWLAN不能上内网，而插网线可以。\n\n于是总算可以电脑连ZJUWLAN，手机也连这个，电脑VPN拨号，手机iZJU登录。这下舒服了。\n\n","cover":"","link":"zjuwlan_related.html","preview":"","title":"ZJUWLAN相关"},{"content":"\n\n最近刚拿到工资,纠结着要不要换个手机,来着,盯Nexus4盯了好久,最后还是没下手,毕竟资金还是不充裕,不然生活费就没了.然后每天被原来的250G 5400rpm的小硬盘奴役,终于一狠心买了个ADATA的SSD SP900,据说是主打性价比的,500+,也不知道值不值.\n顺带光驱也拆了,反正光驱也不行,读不出东西,可能磁头坏了吧. 顺便弄了个光驱位托盘装上.\n","cover":"","link":"ssd__hdd_dual_hard_drives.html","preview":"","title":"SSD+HDD双硬盘"},{"content":"\n\n\n\t\t\t最近用VHD方式在我的win8上安装了VHD_en_win7_x64。使用的是VHD_OneKey_2012_1001\n一键处理VHD工具，整合了VHD命令，只要点几个按钮即可创建VHD，相当于一个不允许主机的虚拟机，并且该虚拟机占用所有硬件资源。\n\u003cdiv\u003e据说VHD因为没有硬盘缓存，所以硬盘性能略低于真实安装的。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n优点是，安装卸载方便，有时候重装个系统还要考虑用什么方法，VHD不需要，卸载只要像内存硬盘一样卸载即可。而且可以创建多个，对于想要多系统的人，绝对更好。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e安装的是英文版系统，英文的界面有种高端的感觉。下一个系统将会是英文的，语言包什么的太不靠谱了。\u003c/div\u003e\n\n","cover":"","link":"vhd_system.html","preview":"","title":"VHD系统"},{"content":"\n\n\nwin8.1 传说中的windows blue，有点不明白的是预览版竟然搞那么大阵仗。\n\n发布后，我也去下了个玩玩，一方面原来的windows server\n2012开始出现一些小问题，另一方面当然是期待一些改变了。\n\n装完就先激活了。然后就开始一些日常经常发生的操作。\n\n联网感觉比win8快速了不少，C盘占用少了很多，装完才10G左右（x64），另外更新里面出现了显卡驱动，不知道以前有没有，可能out了\n\n开始按钮真心烂啊，没有实际功能的开始按钮能干什么呢，除了右键菜单中多了个关机、更新并重启、更新并关机，没什么变化。\nMETRO界面的变化挺多，但我已经长期处于超级管理员账户下，很久没接触应用商店了，所以没什么好说的。\n\n闪讯联网不能，预览版尚且如此，闪讯的更新速度那叫啥\n\ndnf游戏不能，一登陆就提示驱动问题，这。。。\n\n输入法很好，Microsoft Pinyin果然比微软拼音简捷好多了啊，不光是界面。但是状态图标老是挡视线，坑\n\n\n\n","cover":"","link":"after_the_trial_win81_go_back_win8.html","preview":"","title":"试用win8.1后滚回win8"},{"content":"\n\noffice这货真是让人不开心啊，启动慢么不说了，编辑的时候也没见快过，真心的啊，编辑的时候弹出个右键也会卡一下示威。因为office打开文件后会生成临时文件，在win7里office2010因为有了这么个文件，当我关闭当前文件再打开就飞快了。\n可是office2013不按套路出牌，刚关的文件照样等半天才加载完毕。\n\n没想到随手一搜就有了办法，说实话以前怎么都没去搜搜“office加速”呢，脑抽了么，哈哈。\n\n- 禁用插件，文件\u003e选项\u003e加载项\u003e转到，然后去掉所有勾选，反正我不知道那些稿纸啦，书法啦的插件是干蛋用的，Word一般也不用来写信啦之类的花哨事儿，能写论文什么的已经很高级了\n- 文件\u003e选项\u003e高级,找到个输入法有关的关掉。\n\n- 文件\u003e选项\u003e信任中心\u003e信任中心设置\u003e个人信息选项\u003e右边个人信息选项，勾全部去掉。不过第一个“允许office链接到Internet”去掉会不会影响设置的同步啊。\n- excel和ppt还有outlook都跑一遍流程\n\n三个项最重要的肯定是第一项了，第三项么，断网可以测试下。\n\n关完真的好快，我瞬间觉得我好菜.....没有之一\n\n","cover":"","link":"accelerated_office2013.html","preview":"","title":"加速Office2013"},{"content":"\n\n\n\t\t\t从前的我\u003cbr /\u003e\n虚拟机就是另一台电脑，不用关心安全问题，随便搞，没事测试点小程序玩玩。没事装个UBUNTU玩玩，折腾几下子。可怜的我以前内存不是很多，不知道是不是内存原因，要么虚拟机卡，要么主机卡，而且是卡得拖个窗口都等10几秒的那种，于是我那时有了个坏印象，虚拟机很卡。后来用wubi装过ubuntu，然后在ubuntu上使用虚拟机，哇塞，一点也不卡耶。然后我就想，linux跑虚拟机果然比windows强太多了，于是我对ubuntu有了好印象，性能不错。因为种种蛋疼的原因，很长一段时间，重装完系统后，基本不会想到去装个虚拟机的。\u003cbr /\u003e\n\u003cbr /\u003e\n现在的我\u003cbr /\u003e\n自从有了4G内存，已经很少担心内存缺少了，多任务随便开，咱的CPU怎么也烂不到哪里去。现在虚拟机总算不是拿来测试小程序了。不想装在主机上的软件，全都扔虚拟机里。虚拟机多分几个G，有些东西塞到里面，眼不见心不烦。有些操作也可以在虚拟机上完成了，刚刚就用虚拟机刷了个机，感觉还好，除了安装刷机软件慢了点外。我怎么感觉在我心中的分量越来越重了呢。说不定以后就成个必备的软件了，重装后立马装的那种。谁说虚拟机就可以瞎折腾了，虚拟机系统就那么好装啊，很费时间的好不。\u003cbr /\u003e\n\u003cbr /\u003e\n不过么，虚拟机，我觉得一个首要条件，主机系统一定要坚挺啊，稳定至上，折腾都去虚拟机里面，主机系统别老折腾，容易出事儿。重装还真不是一件好玩的事儿。\u003cbr /\u003e\n\n我现在的软件都是能便携化就便携化，我还要挑剔着选所谓的“绿色软件”，像那些有个“绿化软件.bat”东西的，说真的，还不如安装版的。现在的大部分软件在卸载的时候都是卸载不干净的，Appdata里面那三个文件夹下翻翻看，就能发现一些已经不存在于本机的“字母”，说不定那些文件夹还是空的。\u003cbr /\u003e\n\n","cover":"","link":"i_feel_for_the_virtual_machine.html","preview":"","title":"我对虚拟机的感觉"},{"content":"\n\n\n一个月也不知道干了些什么,没有以前的系统那么脆弱了,想当初win7的时候,重装跟吃饭一样勤快.\n\n服务器系统的稳定性的确好很多.原来在win8时一直用开始菜单当做一个快速启动的工具.现在?哈哈哈,那是啥,偶尔点一下就不错了.并且因为用上超级管理员账号关闭了\"用于内置管理员的审核模式\",应用商店和我彻底无缘了\n\n然后又用软件开了窗口Aero效果,越看越像Win7,不得了啊不得了.\n\n唯一不爽的是开机完总是要读盘读个几分钟,卡的很,不过后面就好了.果然服务器是为了\n长时间运行而特地优化过的吧,可惜没有条件,宿舍老是会断电,以前在家有时电脑好几天不关机(挂下载).\n\n现在学乖了,那些对系统文件直接或间接操作的软件不去尝试,那么就不会面临重装.\n\n","cover":"","link":"windows_server_2012_firm_more_than_a_month.html","preview":"","title":"Windows Server 2012坚挺一个多月了"},{"content":"\n\n\n\t\t\t最近老是在郁闷一件事,为啥我明明已经是内置管理员了,我还是要右键管理员权限运行程序,不然老是保存个配置文件都不行.\u003cbr /\u003e\n\u003cbr /\u003e\n为啥当win8用内置管理员登录时,无法使用应用商店,而\u003cbr /\u003e\n进入到组策略,\u003cstrong\u003e计算机配置-Windows设置-安全设置\u003c/strong\u003e-\u003cspan style=\"color: rgb(255,0,0)\"\u003e用户账户控制:用户内置管理员帐号的管理员批准模式\u003cbr /\u003e\n\u003cfont color=\"#000000\"\u003e这么一搞就可以了.\u003cbr /\u003e\n\u003cbr /\u003e\n\u003cfont color=\"#000000\"\u003e今天在折腾notepad2的时候,想替换自带的notepad,使用的\u003cfont color=\"#000000\"\u003e是映像劫持的方法,可是后来我发现,当右键文本文件然后选编辑的时候,提示我需要权限提升\u003cfont color=\"#000000\"\u003e.在试试的心态下,我用管理员\u003cfont color=\"#000000\"\u003e身份运行了explorer.exe,再次重复操作,果然可以.\u003cbr /\u003e\n\u003cfont color=\"#000000\"\u003e这可以说明一件事,我\u003cfont color=\"#000000\"\u003e不是管理员身份\u003cbr /\u003e\n\u003cbr /\u003e\n\u003cfont color=\"#000000\"\u003e至此,所谓的\"管理员批准模式\",也就是一种变相的削权模式,这个模式下,不管你是什么身份的用户,你的身份永远比右键菜单里的\"管理员\"\u003cfont color=\"#000000\"\u003e低几个等级,估计\u003cfont color=\"#FE4811\"\u003e就比Guest高点\u003cbr /\u003e\n\u003cfont color=\"#000000\"\u003e\u003cbr /\u003e\n\u003cfont color=\"#000000\"\u003e于是果断关了\u003cfont color=\"#000000\"\u003e这个模式,反正应用商店里也没装东西\u003c/font\u003e\u003c/font\u003e\u003cbr /\u003e\u003c/font\u003e\u003c/font\u003e\u003c/font\u003e\u003c/font\u003e\u003c/font\u003e\u003c/font\u003e\u003c/font\u003e\u003c/font\u003e\u003c/font\u003e\u003c/font\u003e\u003c/font\u003e\u003c/span\u003e\n\n","cover":"","link":"let_administrator_has_administrator_privileges_ampquot_ampquot.html","preview":"","title":"让Administrator拥有\u0026quot;管理员权限\u0026quot;"},{"content":"\n\n\n\t\t\t症状:\u003cbr /\u003e\n注册表文件无法关联,在打开方式里找不到\"注册表编辑器\"这一项,手动选择C:Windows下的regedit.exe提示无法将该类型和该程序进行关联,但是先打开regedit.exe再手动用菜单导入则正常.\u003cbr /\u003e\n\u003cbr /\u003e\n原因:\u003cbr /\u003e\n\u003cbr /\u003e\n\u003cfont style=\"font-size: 16px;\" color=\"#ED1C24\"\u003e万恶的权限问题\u003c/font\u003e\u003cbr /\u003e\n\u003cbr /\u003e\n附带会出现以下附带的情况:\u003cbr /\u003e\n在HKEY_CLASSES_ROOT下新建项,会提示没有权限\u003cbr /\u003e\n并且HKEY_CLASSES_ROOT下会无法找到regfile这一项\u003cbr /\u003e\n\u003cbr /\u003e\n\u003cbr /\u003e\n解决办法:\u003cbr /\u003e\n1)更改C:Windowsregedit.exe文件的高级选项,更改所有者为你自己的用户名或者管理员\u003cbr /\u003e\n2)在HKEY_CLASSES_ROOT这个上面右键\u0026gt;权限,同样更改所有者\u003cbr /\u003e\n3)上一步做完就可以新建项了,新建regfile,再新建shell,再新建open,再新建command,然后双击command的默认,输入\u0026nbsp;\u003cwbr\u003e\n\u003cfont color=\"#FF380A\"\u003eregedit.exe \"%1\"\u003c/font\u003e\u003cbr /\u003e\n4)重新设置打开方式\u003cbr /\u003e\n\u003c/wbr\u003e\n","cover":"","link":"when_the_registry_files_can_not_be_associated_with.html","preview":"","title":"当注册表文件不能关联时"},{"content":"\n\n\n激动,太激动了,我又相信Server 2012了.\n详情如下:\n\n小道消息,服务器系统具有很好的定制性和能更好地发挥硬件的性能,于是越发向往.对于我这个从来没装过server的小菜鸟来说,无疑是经过强烈的思想斗争的.终于,在一次系统无法启动和尝试多种修复无果的情况下,果断祭出\"珍藏多年\"的Windows\nServer 2012的原版ISO(早准备好了啊喂!!!).\n安装过程比win8更加简单,因为没有所谓的个性化,也就少了许多设置,而且默认是超级管理员账户登录,爽.\n装完后,用网上的方法,成功添加了桌面功能,实现了桌面化,装完各种软件,可怜的C盘又减小了,很紧张的啊.\n\n最近在折腾Delphi7,因为有Win8系统中的经验,我知道从某个版本起,.hlp已经不被支持了(不能直接打开),于是我熟门熟路去了这里`http://support.microsoft.com/kb/917607`\n传说中的可以提供某个版本起.hlp文件的支持,主体是一个更新包.可是令人蛋疼的是注意 Windows 8 Server Beta 不支持 Windows\n帮助程序，且不提供适用于此 Windows 版本的下载。\n\n啊啊啊啊啊,我不信,明明win8都支持的,我不信啊,于是果断下了win8版本的更新包,可是我发现,我太笨了,这两个系统的版本号本身就不同,于是,直接就安装不上,各种报错.\n\n然后我就开始各方打听,希望有哪位大侠遇到这个问题并解决它了,然后又凑巧地发出来了,那该多好,可惜,我错了.\n\n为了delphi中那么多个的hlp文件,不能放弃啊,于是去搜索第三方打开工具,无果,我甚至还尝试了把所有hlp文件反编译然后转成chm,可是啊,虽然能转,但是delphi又不会去使用chm文件,F1废了,我可不会没事就去看chm文件啊.\n\n后来还尝试过修改MSU更新包里面的一些内容,试图让更新包能够强制装上,可惜啊,我根本不能打包MSU文件啊,坑爹啊.\n\n惯例吧,解决办法.\n\n方法就是去找老版的`winhlp32.exe`单文件.具体是什么时代的不知道了,可以附上版本信息\n`5.1.2600.5512`大小为264kb,而hlp文件是无法修改关联的,估计被锁定为`C:\\windows\\winhlp32.exe`,所以只能替换,替换之前我发现一个问题,就是未替换的情况下,原来的`winhlp32.exe`大小只有10kb,你觉得10kb能干啥,只能起到跳转到windows的联机帮助窗口上,这就是为什么不能打开hlp的原因了.\n\n本来都因为这问题想换回win8去的,这下好了,安逸了.\n\n\n","cover":"","link":"windows_server_2012_on_hlp_files_to_solve.html","preview":"","title":"Windows Server 2012关于.hlp文件的解决"},{"content":"\n\n\n\t\t\twindows8取消了玻璃效果，虽然有些地方仍然可以看出一些“残留物”，比如，鼠标放在右下角可以AEROPEEK预览桌面，但其实窗口边框的效果已经没了，记得有个帖子就是吐槽win8的风格不统一的，METRO和AERO混搭，按钮也是乱七八糟，幸好RTM版本一些很明显的“不合群”，没那么明星了。\u003cbr /\u003e\n\u003cbr /\u003e\nwin7时代各种软件都追求透明玻璃效果，像是一种潮流一样。存在的有两种实现方式，一个是调用系统本身的透明功能，比如QQ，也有一些是使用软件自身的API，比如迅雷7。于是到了win8，调用系统的那些软件，开不了透明了。\u003cbr /\u003e\n\u003cbr /\u003e\n最近找到一个小程序，原理是在载入桌面环境时加载作者写的DWMGlass.dll到桌面进程中，实现AERO效果，使用HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindows\nNTCurrentVersionWindows这个位置的一个系统自动的进程注入模块，在这个AppInit_DLLs键值下填入DLL路径即可加载。\u003cbr /\u003e\n\u003cbr /\u003e\n于是开始研究，无奈基础不扎实，又系统中已经加载了MACTYPE的dll，不知道如何同时加载两个dll，各种纠结。经多次试验，得出方法：\u003cbr /\u003e\n\nAppInit_DLLs下如此填写\"D:DWMDWMGlass.dll\",MacType.dll。\u003cbr /\u003e\n具体方法为先清空键值，然后填入第一个\"D:DWMDWMGlass.dll\"，即DWMGlass.dll的放置的路径（或者使用该程序自带的reg文件导入，需要修改reg文件中相关路径），然后启动MACTYPE的程序，先切换到不加载，再切换为注册表加载，程序会自动在键值中增加一个，如此即可实现双dll加载。\u003cbr /\u003e\n\u003cbr /\u003e\n重启看效果，QQ的透明也可以开了，具体性能相关问题有待测试。\u003cbr /\u003e\n\n","cover":"","link":"win8_achieve_window_glass_effect_win7_era.html","preview":"","title":"win8实现win7时代的窗口玻璃效果"},{"content":"\n\n\n\t\t\tpagefile是虚拟内存的页面文件，默认存放在C根目录，隐藏，系统属性。\u003cbr /\u003e\n\u003cbr /\u003e\n今天突然发现C盘红了，前两天还有10G空余的呢，于是祭出神器SpaceSniffer\u003cbr /\u003e\n\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=61268557010169zc\u0026amp;url=http://s14.sinaimg.cn/orignal/612685574d8ad1ed64dfd\u0026amp;690\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/612685574d8ad1ed64dfd.jpg\" height=\"58\" width=\"279\" alt=\"win8\u0026nbsp;\u0026lt;wbr\u0026gt;pagefile.sys文件过大\" /\u003e\u003cwbr\u003epagefile.sys文件过大\"  TITLE=\"win8\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003epagefile.sys文件过大\" /\u003e\u003c/wbr\u003e\u003c/a\u003e\u003cbr /\u003e\n\u003cbr /\u003e\n\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=61268557010169zc\u0026amp;url=http://s14.sinaimg.cn/orignal/612685574d8ad1f00918d\u0026amp;690\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/612685574d8ad1f00918d.jpg\" name=\"image_operate_7311364138730379\" alt=\"win8\u0026nbsp;\u0026lt;wbr\u0026gt;pagefile.sys文件过大\" /\u003e\u003cwbr\u003epagefile.sys文件过大\"  TITLE=\"win8\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003epagefile.sys文件过大\" /\u003e\u003c/wbr\u003e\u003c/a\u003e\u003cbr /\u003e\n瞬间被吓出翔了，怎么这么大，说好的1.5倍呢\u003cbr /\u003e\n\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=61268557010169zc\u0026amp;url=http://s6.sinaimg.cn/orignal/612685574d8ad1edc0b45\u0026amp;690\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/612685574d8ad1edc0b45.jpg\" name=\"image_operate_43881364139094789\" alt=\"win8\u0026nbsp;\u0026lt;wbr\u0026gt;pagefile.sys文件过大\" /\u003e\u003cwbr\u003epagefile.sys文件过大\"  TITLE=\"win8\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003epagefile.sys文件过大\" /\u003e\u003c/wbr\u003e\u003c/a\u003e\u003cbr /\u003e\n\u003cbr /\u003e\n百般思索查找，终于明白了原因，原来是好久没重启的原因，不重启的话，win8的很多东西都不会改变，比如这个虚拟内存，以前win7\nXP会在关机后自动释放内存，包括虚拟内存的内容。而win8的快速启动，把部分内存内容保存在硬盘中也就是这个pagefile.sys中。我又想起来，昨晚刚好玩了个使命召唤，怪不得突然空间不足了。\u003cbr /\u003e\n\n同时，我觉得一些游戏的资源读取后可能都是保存在这个文件中，所以游戏关闭后再次启动，读取地图的速度也会比较快，估计就是这个原因。\u003cbr /\u003e\n\n有时候，关闭游戏后，会有一段时间非常的卡，这坑爹的设置。\u003cbr /\u003e\n于是我想我知道为什么需要大内存了，2G 4G哪里够啊。以后配电脑果断就如下配置了：\u003cbr /\u003e\n\u003cbr /\u003e\nCPU：这么说来个四核的，以不成为瓶颈为准\u003cbr /\u003e\n显卡：别的不管，N卡，显卡排名怎么说要在50名左右，最好再两张卡SLI\u003cbr /\u003e\n硬盘：固态的，整个系统全搞进去，软件能放的也放进去，然后再装个7200的机械硬盘\u003cbr /\u003e\n内存：果断8G双通道，关了该死的虚拟内存\u003cbr /\u003e\n\u003cbr /\u003e\n\n","cover":"","link":"win8_pagefilesys_file_is_too_large.html","preview":"","title":"win8 pagefile.sys文件过大"},{"content":"\n\n\n最近突然出现chrome里面的某几个扩展的图标丢失，点击后显示“未能显示网页”，我一激动想起前几天还把chrome的`User Data`移到了内存盘里的，心想不会是文件丢失吧，可是一想不对啊，这还会”自定义“缺少文件？\n 然后又一激动，打算换成dev版。\n\n在漫长而又蛋疼的下载失败、下载重试后，还是决定去下离线包，不折腾官网那个了，实在是坑啊。\n\n装完后，马上登陆账号准备同步，幸好卸载的时候检查了一下最后一次同步的时间，否则就疼了。以前经常给我同步到很久以前的扩展。\n\n在几次程序重启后，我发现一个大问题，扩展图标再次消失。郁闷阿\n\n\n尝试了用管理员权限运行，居然可以，于是我想到了一个原因：权限。就好像IE10经常出现的只能用管理员权限才能打开一样，都是一样的。\n\n\n可以说，当你用网络hotmail账户登录win8，然后直接双击一个程序运行，这个程序拥有的权限非常非常非常非常非常的少，特别是对于C盘一些敏感文件夹，有时甚至连读取权限都没有。\n\n\n我记得以前的文章有说过，win8网络账户下，两个权限等级不同的对象进行交互，是很恶心的，比如你无法从普通的桌面，拖放文件到拥有管理员权限的程序窗口中。\n\n废话不多说了，上解决方法。\n\n找到google的相关文件夹，获取管理员权限.主要在`Program Files\\Google` 和\n`AppData\\Local\\Google`两个位置，或者也可以新建一个定义为管理员权限运行的chrome快捷方式。或者在安装离线包的时候就直接双击，不使用”管理员权限运行“安装程序，否则权限会继承的。\n\n","cover":"","link":"windows8_under_chrome_extension_quotmissingquot_phenomenon_solutions_can_not_be_updated.html","preview":"","title":"Windows8 下 Chrome 扩展“丢失“现象、无法更新的解决方法"},{"content":"\n\n\n\u003cp\u003ewin8 x64 下，也许也适用于win7，据说不支持vista以下的系统\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/p\u003e\n\u003cp\u003e来吐个槽好了。\u003c/p\u003e\n\u003cp\u003ewin8已经面目全非了，就来说说不对劲的地方吧。\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/p\u003e\n\u003cp\u003e\n虽然在win8的任务栏可以看到壁纸的样子，我以为是AERO还没消失。其实，AERO已经不在了，因为你可以试试这在高级系统设置里把所有效果全取消，然后你会发现很神奇的一幕，哈哈，窗口的样子一点没变嘛，咋回事啊，win7下不是会变成windows经典界面的么（就那个灰色的窗口）。其实很简单，这两个系统的核心不一样了，win7是在一个窗口框架的基础上加上Aero的特效，而win8么，“纯净”的纸片。另外你可以再测试一点东西。\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/p\u003e\n\u003cp\u003e\n比如QQ，你会发现，最新版也不能开透明效果了，不过迅雷应该还可以，据说不是靠windows的Aero模块实现的，因为迅雷在xp照样能透明。\u003c/p\u003e\n\u003cp\u003e\n然后Fraps，这货不能在桌面显示帧数了，真心不是版本什么的问题，因为它提供的对win7的支持的那个DWM桌面，在win8上压根没有，虽然win8的进程列表里还存在着dwm.exe但已经不是一家的了。于是Fraps不能录制桌面了。\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/p\u003e\n\u003cp\u003e好了进入正题。\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/p\u003e\n\u003cp\u003e\n我尝试过的软件有FSRecorder（FScapture截图软件自带的录像机）、屏幕录像专家、AVSVideoRecorder（AVSVideoEditor自带的）、Bandicam、FreeScreenVideoRecorder、camtasia、Fraps。\u003c/p\u003e\n\u003cp\u003e额，还有用虚拟机也录过，呵呵。\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/p\u003e\n\u003cp\u003e\n最后我得出的一个结论是，上面这些基本原理都一样的，先录制，然后转码，编码器是它们的核心（如果要录成AVI这样的文件的话），然后问题都一样，在win8下，基本都要么CPU占用很高（高的50%以上，低的也要10%，有时dwm.exe也能占用个10%），要么硬盘占用高（典型的生成文件过大，硬盘写不过来了）。归根结底一个原因，转码器问题。\u003c/p\u003e\n\u003cp\u003e\n转码器压缩率高，那么cpu就高，压缩率低，硬盘就要狂写，我估计搞个128G的内存，然后虚拟成硬盘，再整个16核的CPU，估计就绝对不会卡了吧。\u003c/p\u003e\n\u003cp\u003eCPU和硬盘高了，那我在桌面操作还有什么意思呢，我还录像干啥呢，还不如整个DV自己拍得了。\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/p\u003e\n\u003cp\u003e于是就出现了这么哥软件 Mirillis Action!，不说别的特点了吧，就一个特点完爆其他的软件----硬件加速。\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/p\u003e\n\u003cp\u003e于是CPU\n硬盘都安静了，于是显卡虽然工作了，但是我桌面操作又不用占用显卡多少的运算量，这叫啥，物尽其用，呵呵。这里的加速其实和视频播放器硬解是一个道理。\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/p\u003e\n\u003cp\u003e另外推荐Action v 1.8.0的版本，貌似这个版本有对win8下的一些方面进行过改动。附上changloge\u003c/p\u003e\n\u003cp\u003e\u0026gt;1.8.0\u003c/p\u003e\n\u003cp\u003eNEW FEATURE: Pause/resume for video recordings added\u003cbr /\u003e\n--NEW FEATURE: Support for Logitech multimedia keyboards LCD\ndisplays (Logitech G13/G15/G19 etc.)\u003cbr /\u003e\n-Changed default recordings folder on Windows 8 (fixes problems\nwith desktop video recording)\u003cbr /\u003e\n-Translations improvements\u003cbr /\u003e\n-Stability fixes (closing Action! application)\u003cbr /\u003e\n-Small GUI improvements\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/p\u003e\n\u003cp\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/p\u003e\n\n","cover":"","link":"mirillis_action_under_win8_i_think_the_best_video_recording_software.html","preview":"","title":"Mirillis Action! win8下我认为最好的视频录制软件"},{"content":"\n\n\n\t\t\tpotplayer支持配置的导出，在程序主界面，按F5，出来的设置菜单的左下角即可找到，在弹出的界面中可以选择保存为ini配置文件，不推荐保存为reg注册表文件，为啥呢\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e首先potplayer应该没人用安装版的吧，一般都是绿色版的，所以ini文件比较符合绿色（牵强了点哈）\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n我的原因是：当我系统换成64位后，本来是32位的potplayer，一直在观望，在纠结要不要也换成64位的potplayer，听说是民间修改版的。\n\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n总算去找了个版本想换，无奈这货的关于硬解的配置项挺多的，懒得再设置一遍，于是想导出配置。想起上次我导出的是reg文件，因为当时只是升级了32位的版本而已，这次是想把32位\u0026gt;64位，就想着同时运行这俩货，测试下。于是问题来了，我这32位的配置项和64位的配置项在注册表的位置肯定不一样的吧（废话，那样我启动64位的不直接就可以使用原来的配置了么），所以导出注册表文件肯定不可行的，然后我试了下ini文件，试着放到了主程序目录下，启动，居然没用。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n最后，原来是ini文件名的问题，需要改成和主程序同样的名字，如PotPlayerMini64.ini，如此就可以使用这个配置文件了。\u003c/div\u003e\n\n","cover":"","link":"importing_potplayer_configuration_file_to_export.html","preview":"","title":"potplayer配置文件的导入到导出"},{"content":"\n\n\n\t\t\twindows的注册表真是博大精深啊，以下是折腾过程：\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003eHKEY_LOCAL_MACHINESOFTWAREClassesFoldershell\u003c/div\u003e\n\u003cdiv\u003e\nHKEY_LOCAL_MACHINESOFTWAREClassesDirectorybackgroundshell\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e以上两个，第一个是文件夹的右键菜单，后一个是文件夹背景的右键菜单（平时右键刷新的时候看到的那个）\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e只要\u003c/div\u003e\n\u003cdiv\u003e在这两个位置新建一个项，命名为你自己喜欢的，\u003c/div\u003e\n\u003cdiv\u003e选中这个项，再新建一个项，命名为“command”（无引号，在英文输入状态下输入），\u003c/div\u003e\n\u003cdiv\u003e双击右侧的默认，改值为你希望显示的文字。\u003c/div\u003e\n\u003cdiv\u003e选中前面的command项，然后双击右侧的默认，改为，程序绝对路径+空格+“%V”。（英文输入状态）\u003c/div\u003e\n\u003cdiv\u003e如\n\u0026nbsp;\u003cwbr\u003eD:LeanKeyTooltoolTotalCMDTotalcmd64.exe\n\"%V\"\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e这样这个菜单项就会显示了，即时生效。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e然后是按住shift才显示\u003c/div\u003e\n\u003cdiv\u003e\n只要在你选中新建的这个项，在右侧新建两个字符串值，分别命名为Extended和NoWorkingDirectory。完成。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e附带几个位置\u003c/div\u003e\n\u003cdiv\u003eHKEY_CLASSES_ROOT*shell \u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e所有文件的右键菜单\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003eHKEY_CLASSES_ROOTexefileshell \u0026nbsp;\u003cwbr\u003e\n.exe文件的右键菜单\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003eHKEY_CLASSES_ROOTDirectoryshell \u0026nbsp;\u003cwbr\u003e\n目录的右键菜单\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\n","cover":"","link":"win8_-_add_a_context_menu_will_be_displayed_hold_down_the_shift_right-click_menu.html","preview":"","title":"win8 右键菜单---添加一个按住shift才会显示的右键菜单"},{"content":"\n\n\n\t\t\t接上一篇，当你的程序和资源管理器处在不同的权限运行时，从资源管理器拖放到程序时，无法进行拖动文件打开。\n\u003cdiv\u003e解决办法有了，比较完美\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e首先你的程序用管理员权限运行，然后只要能使资源管理器在管理员权限下运行即可\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n定位到HKEY_CLASSES_ROOTAppID{CDCBCFCA-3CDC-436f-A4E2-0E02075250C2}\u003c/div\u003e\n\u003cdiv\u003e\n右键〉权限〉高级〉更改（在最上面，有个拥有者的地方），将原来的TrustedInstaller更改为Administrtor\u003cstrong\u003e\u003cfont color=\"red\"\u003es\u003c/font\u003e\u003c/strong\u003e\u003c/div\u003e\n\u003cdiv\u003e然后将Administrtor\u003cfont color=\"red\" style=\"font-weight: bold;\"\u003es\u003c/font\u003e\u003cfont color=\"#040000\"\u003e这个用户的权限改为\u003cb\u003e完全控制，\u003c/b\u003e\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont color=\"#040000\"\u003e\u003cb\u003e最后，把\u003c/b\u003e\u003c/font\u003e\u003cspan style=\"line-height: 21px;\"\u003e{CDCBCFCA-3CDC-436f-A4E2-0E02075250C2}右边展开的里面的RunAs项删除或者重命名，即时生效。\n\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e\u003cbr /\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\n然后在C：windows下explorer.exe的右键菜单里就可以看到以管理员权限运行了（当是普通的管理员账户时，explorer.exe右键是没有的）\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n以上就解决了任务管理器同时存在普通管理员权限的explorer.exe，和超级管理员权限的explorer.exe(原先未修改注册表时，RunAs的键值是Interactive\nUser，意为不活动的用户，所以原先是不可能同时存在两种权限的explorer.exe的)\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e最后，新建一个快捷方式，定义目标位置为%SystemRoot%explorer.exe\n,::{20D04FE0-3AEA-1069-A2D8-08002B30309D}，重命名之为“高权限explorer”(或者你喜欢的名字),右键属性里，快捷方式选项卡，高级按钮，选择以管理员权限运行。以后当你需要拖拽文件操作时，运行这个快捷方式方式即可，或者把它固定到任务栏替换原来的那个，因为低权限的explorer.exe基本没什么用了，同时开机自动运行的explorer是普通的权限，于是就实现了既可以管理员权限运行资源管理器同时又不影响Metro应用的运行。\u003c/div\u003e\n\n","cover":"","link":"continued_win8_drag_and_drop_files_can_not_be_opened.html","preview":"","title":"续：win8拖拽文件无法打开"},{"content":"\n\n\n\t\t\t问题描述：在用restorator还有Photoshop等软件的时候，因为这软件无法在普通账户权限下运行（无法写C盘的目录，PS直接启动就报错），但是使用了管理员权限运行之后，另一个问题出现了，无法拖拽文件。但是restorator在普通权限的时候是可以拖拽的。\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e处理问题过程：\u003c/div\u003e\n\u003cdiv\u003e\n百般搜索，终于找到了“肇事者”，对，就是win8本身的资源管理器。默认情况下，使用普通账户登录时运行的资源管理器不具备“管理员权限”，而在此时进行拖拽，会直接被忽略！！！\u003c/div\u003e\n\u003cdiv\u003e\n经测试，结束explorer进程之后，以系统权限建立“explorer.exe”任务之后，可以成功拖拽。但是这时一个问题出现了，win8的开始界面是包含在explorer.exe这个进程里的，而metroAPP是无法在管理员权限下运行的，这主要是为了保证应用程序的安全性而设计的。真心懒得吐槽这渣一般的设定了\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e于是尝试在已经存在explorer.exe的情况下建立一个新的具有管理员权限的资源管理器，失败！！！！\u003c/div\u003e\n\u003cdiv\u003eWindows下不存在ubuntu下的那个nautilus模式，即只会同时存在一个资源管理器。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e那么，提出以下解决办法：\u003c/div\u003e\n\u003cdiv\u003e\n1）在administrator账户下进行工作，具体开启方法自己去找。然后寻找在administrator下正常运行metro应用的方法。（此法没什么意思的，觉得还是微软的能自动同步配置的账号比较好，而且权限的更改风险大，除非你做好了重装的准备）\u003c/div\u003e\n\u003cdiv\u003e2）使用一个第三方的资源管理器。如Totalcommander，此类工具可以很容易就在管理员权限下运行。\u003c/div\u003e\n\u003cdiv\u003e\n3）在你需要进行拖拽工作的时候，结束explorer进程，新建一个有权限的，然后暂时放弃metro应用的使用，用完再切换回来。（此法，也许比较好，如果能够使用程序将这两个操作整合为两个按钮事件，进行傻瓜化的操作，那么有值得一试的价值）\u003c/div\u003e\n\n","cover":"","link":"win8_can_not_drag_and_drop_files_to_open.html","preview":"","title":"win8无法拖拽文件打开"},{"content":"\n\n\n无责任推荐 FastStone Capture\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e不废话，直接上理由\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n1)截图模式的多样化。可以截取窗口、对象，可以自己划拉矩形框，还能手绘一个区域。当然，滚动窗口也可以截图，反正这个功能以前只在chrome的一个扩展里看到。\u003c/div\u003e\n\u003cdiv\u003e\n2)自带录像功能，生成的是wmv格式。以前好像听到过说，exe录像比较靠谱，原因不明。生成的文件也不大，清晰度不错。\u003c/div\u003e\n\u003cdiv\u003e3)自带图片编辑器。呵呵，可能有人会说了，QQ的也能编辑呢。哈哈，这个可是比那个功能多多了\u003c/div\u003e\n\u003cdiv\u003e\n4)最后，我想说几句。曾经出现过很多那种“小工具集合”，比如“管家”家族、“卫士”家族，我之所以不喜欢这些软件的原因，有很大一部分是因为：\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n这些软件里面有太多用不到的东西了，说起来好像会用到，但是，那是在安装前的空想罢了，装完之后，你会发现，一堆放着没用的东西，甚至几百年不会理的，我宁愿每个功能都选择一个单独的软件。还有就是，软件的一部分让人难以忍受或者做的太烂，一些小地方都会引起反感的，比如有些软件本可以不自启动，却要自启动。不多说了吧，总之我喜欢的软件，如果有几个以上的功能，那么我希望每个功能都能不让我失望，都能有立足之地，或者能够接受。也许，好软件都是那些真正经历过，并且自己去用程序解决过问题的作者才能写出来的吧！因为那是用心写出来的。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e最后的最后，我想现在基本上没有几个安装版的软件会在卸载的时候完全删除以下几个地方的软件痕迹：\u003c/div\u003e\n\u003cdiv\u003eProgramDate、CommonFiles、AppData、RegKey\u003c/div\u003e\n\u003cdiv\u003e\n应该说很少，我不敢说很绝对，但真的很少，我也举不出例子。像115云备份，恶心的程序，启动后，不生成卸载入口，右键菜单不知道怎么删，最后还要到处找，恶心至极！！！！\u003c/div\u003e\n\u003cdiv\u003e要么不删除那些目录，要么不删完全，留个文件夹做“纪念”，这和撒泡尿，然后写上到此一游有什么区别呢。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n我不知道为什么一些第三方的软件喜欢把注册表当作自己的“配置文件所在地”，注册表是windows自己的地盘啊，就算借用总得完璧归赵吧，哪有进去撒泡尿还不冲水的。和病毒之类性质已经差距不远了吧。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e果然应该学习win8应用的思想，不要给你的程序太多的权限，否则哪天把你卖了都不知道！！\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\n","cover":"","link":"screenshot_software_recommended.html","preview":"","title":"截图软件推荐"},{"content":"\n\n\n\t\t\t嗯，标题是借来的，对，远景上出现的。\n\u003cdiv\u003e\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=6126855701013y58\u0026amp;url=http://s14.sinaimg.cn/orignal/6126855730211218c824d\" target=\"_blank\"\u003e\u003c/a\u003e\u003cbr /\u003e\n\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=6126855701013y58\u0026amp;url=http://s12.sinaimg.cn/orignal/612685574d01b6a54be8b\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/612685574d01b6a54be8b.jpg\" width=\"489\" height=\"152\" name=\"image_operate_78821354716118913\" alt=\"Windows\u0026nbsp;\u0026lt;wbr\u0026gt;8里的mini音乐操作台\" /\u003e\u003cwbr\u003e8里的mini音乐操作台\"  TITLE=\"Windows\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e8里的mini音乐操作台\" /\u003e\u003c/wbr\u003e\u003c/a\u003e\u003cbr /\u003e\n对，就是这个东西，然后我按原帖里那该死的回复可见说的找了半天，失败了，为啥，因为我这笔记本键盘上压根没这么个“东西”（调节音量的按钮），只有Fn+F10和Fn+F11和Fn+F112，但是这三个不会出现上面的图。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e最后我找到了，OK，开始猜吧，在哪儿呢\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e触摸板上。 吓到了吧！多功能触摸板，你值得拥有！\u003c/div\u003e\n\n","cover":"","link":"windows_8_in_the_mini_music_console.html","preview":"","title":"Windows 8里的mini音乐操作台"},{"content":"\n\n\n\t\t\t以前在win7下用这个软件建立wifi的时候造成了系统崩溃，本来都下决心不再用它了的。最近突然一个老问题整的我是辗转反侧，DHCP。对，就是它，虽然win系统自带了DHCPClient服务，但是这个是客户端，并不是服务端。尝试了几个win8下建立wifi的工具，比如虚拟wifi建立工具，甚至是Intel\nMy\nWiFi，无一例外，都跪在了自动获取ip上。还有那什么精灵，因为用过那个wifi建立工具，于是这个软件各种报错，冲突。\u003cbr /\u003e\n顺便说说intel的my\nwifi吧，这个软件挺好的，自带了DHCP服务端，非服务器系统是不带这玩意儿的，试了下果然可以分配，速度也还行，但问题是，这软件是定位于文件共享的，于是当我想共享网络的时候，这货居然自动把DHCP服务器给禁用了。\u003cbr /\u003e\n\n开始在网上搜索相关的解决办法，我只是想找个不手动设置ip的方法来着，然后出来一堆ip如何设置的，我只好呵呵了。\u003cbr /\u003e\nOK进正题吧。\u003cbr /\u003e\n好处：1.自带DHCP服务器，不用再指望windows自带的分配了，不用再看着那个169.254.X.X心乱如麻了。可能有人会说‘设置个静态ip不就好了，这么麻烦’，屁嘞，我想共享给寝室用，难道还一个个告诉他们ip是多少，更何况，这世界上还存在着一种人类生物：他不会设ip或者死也不要试着去设，怎么说都没用。\u003cbr /\u003e\n\n2.自带共享网络功能。对，不通过win自带的网络共享，这也正是intel my wif缺的吧，只要选择相应的连接方式即可。\u003cbr /\u003e\n3.加密方式可选，win8把临时网络功能给去掉了，用命令建立的wifi加密方式是固定的。\u003cbr /\u003e\n吐槽点：\u003cbr /\u003e\n1.这货要安装，安装，装，还要重启，重启，启。\u003cbr /\u003e\n2.这货给俺加了好几个进程啊，老子有强迫症啊。\u003cbr /\u003e\n3.这货免费版只能共享本地连接啊，不过有注册码，还好。\u003cbr /\u003e\n4.这货启动不是很快。\u003cbr /\u003e\n5.这货估计卸载也很麻烦的吧。\u003cbr /\u003e\n\u003cbr /\u003e\n\n","cover":"","link":"win8_build_wifi_hotspot_with_connectify_advantages_and_disadvantages.html","preview":"","title":"win8用connectify建立wifi热点的好处与不足"},{"content":"\n\n\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e收了个北通的手柄，总算有机会好好研究下手柄的按钮了\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n玩了下极品9，发现右边的摇杆不能用，拨动相当于按下右边那四个按键。一个偶然按了一下slow键，然后设置按键的时候就不能设置了（因为一按下就自动设置为BUTTON\n10）\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e想了想，还是去搜搜手柄的按键说明。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e一共以下几个：\u003c/div\u003e\n\u003cdiv\u003e\n1. ANALOG, 模拟功能键，用于支持右边的摇杆，一般左边的摇杆会被标示为X，而右边的会被标识为Z，这个按键就是这么用的，可能可以开启震动支持\u003c/div\u003e\n\u003cdiv\u003e2. TURBO SLOW\nCLEAR键，连发按键。分别是加速，缓慢，取消的意思。CLEAR键在手柄的背后。按住一个按键再按下相应的TURBO或者SLOW即可开启。\u003c/div\u003e\n\n","cover":"","link":"handle_analog_mode.html","preview":"","title":"手柄ANALOG模式"},{"content":"\n\n\n\t\t\t最近一段时间，有很多人都发生了IE10无法运行的问题。\n\u003cdiv\u003e具体表现是：\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n不管是点击快捷方式还是点击任务栏图标，或者点击开始菜单，或者到IE的目录下双击运行，全都无法运行，对，是无法运行！！！！！！检测过，任务管理器里都不会出现IE的进程。然后坑爹的是，当你使用管理员权限，IE又能运行了，擦擦擦擦！！！这是多么的蛋疼啊。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n于是无法忍受了，到处搜索，还是老样子，网上都是一些要么没发生这种现象的，要么是解决了还不知道怎么解决的，要么就是人云亦云的。有以下几种方法：\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e1.迅雷插件引起的，卸载迅雷 \u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e###蛋啊，怎么可能，迅雷是刚装完系统就装着的，那时候IE怎么不出问题，难道还远程操作么。于是。。。。迅雷不在了，懒得装回去了，先这么着吧，用到再说\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e2.新建账户 \u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e###没错的确可以解决，我还顺便把超级管理员账户给开了。可是啊，我不乐意这么干，原因很多，不赘述，总之就是不乐意\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e3.控制面板程序默认程序 的最后一项，然后是“自定义”，默认WEB浏览器。。。。。 \u0026nbsp;\u003cwbr\u003e\n##没用，完全没用！！！我完全无法修改那个WEB浏览器！！！！修改完，点进去还是原来的\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e4.魔方 \u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n##可以，成功了，现在正常了，下文分析\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e分析：\u003c/div\u003e\n\u003cdiv\u003e首先使用魔方的修复大师里面的浏览器修复，一运行，切换，乖乖，怎么才四项啊，嘿为啥前两项会是红的呢\u003c/div\u003e\n\u003cdiv\u003e1.首页修复\u003c/div\u003e\n\u003cdiv\u003e2.搜索引擎修复\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e于是抱着试试的想法，勾上了这两项，然后修复了一下。。。（修复中。。。）\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e成功了，居然成功运行了IE，坑爹啊。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n不放松，果断排查原因，顺手把IE主页改了回来，果断必应的主页给力哈，然后还是正常，嘿不错，那么可以推测是搜索引擎的问题（如果魔方没干别的事的话），有兴趣可以自己去修改那个搜索引擎试试看行不行。另外加载项那边在修复完成后flash插件出现了，不知道咋回事\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont color=\"#ED1C24\"\u003e2013-1-18编辑一个新的方法\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont color=\"#ED1C24\"\u003e打开Regedit，找到HKEY_CURRENT_USERSoftwareMicrosoftInternet\nExplorerMain\n\u0026nbsp;\u003cwbr\u003e对Main右键——权限。然后点击“高级”，再点击“启用继承”。\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u003c/wbr\u003e\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e问题来源：\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n不要听那些人的“最近有没有装优化软件”了，很傻，真的，真心的。你应该排查最近是不是装了什么跟浏览器有直接关系的软件，不一定是工具栏什么的，不管什么软件都有可能，因为有“绑定插件，强制安装”。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e至此，又一次折腾结束\u003c/div\u003e\n\n","cover":"","link":"win8_ie10_run_only_with_administrator_privileges_problem_solutions-2.html","preview":"","title":"Win8 IE10只能用管理员权限运行的问题解决方案"},{"content":"\n\n\n\t\t\t最近一段时间，有很多人都发生了IE10无法运行的问题。\n\u003cdiv\u003e具体表现是：\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n不管是点击快捷方式还是点击任务栏图标，或者点击开始菜单，或者到IE的目录下双击运行，全都无法运行，对，是无法运行！！！！！！检测过，任务管理器里都不会出现IE的进程。然后坑爹的是，当你使用管理员权限，IE又能运行了，擦擦擦擦！！！这是多么的蛋疼啊。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n于是无法忍受了，到处搜索，还是老样子，网上都是一些要么没发生这种现象的，要么是解决了还不知道怎么解决的，要么就是人云亦云的。有以下几种方法：\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e1.迅雷插件引起的，卸载迅雷 \u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e###蛋啊，怎么可能，迅雷是刚装完系统就装着的，那时候IE怎么不出问题，难道还远程操作么。于是。。。。迅雷不在了，懒得装回去了，先这么着吧，用到再说\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e2.新建账户 \u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e###没错的确可以解决，我还顺便把超级管理员账户给开了。可是啊，我不乐意这么干，原因很多，不赘述，总之就是不乐意\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e3.控制面板程序默认程序 的最后一项，然后是“自定义”，默认WEB浏览器。。。。。 \u0026nbsp;\u003cwbr\u003e\n##没用，完全没用！！！我完全无法修改那个WEB浏览器！！！！修改完，点进去还是原来的\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e4.魔方 \u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n##可以，成功了，现在正常了，下文分析\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e分析：\u003c/div\u003e\n\u003cdiv\u003e首先使用魔方的修复大师里面的浏览器修复，一运行，切换，乖乖，怎么才四项啊，嘿为啥前两项会是红的呢\u003c/div\u003e\n\u003cdiv\u003e1.首页修复\u003c/div\u003e\n\u003cdiv\u003e2.搜索引擎修复\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e于是抱着试试的想法，勾上了这两项，然后修复了一下。。。（修复中。。。）\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e成功了，居然成功运行了IE，坑爹啊。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n不放松，果断排查原因，顺手把IE主页改了回来，果断必应的主页给力哈，然后还是正常，嘿不错，那么可以推测是搜索引擎的问题（如果魔方没干别的事的话），有兴趣可以自己去修改那个搜索引擎试试看行不行。另外加载项那边在修复完成后flash插件出现了，不知道咋回事\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e问题来源：\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n不要听那些人的“最近有没有装优化软件”了，很傻，真的，真心的。你应该排查最近是不是装了什么跟浏览器有直接关系的软件，不一定是工具栏什么的，不管什么软件都有可能，因为有“绑定插件，强制安装”。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e至此，又一次折腾结束\u003c/div\u003e\n\n","cover":"","link":"win8_ie10_run_only_with_administrator_privileges_problem_solutions.html","preview":"","title":"Win8 IE10只能用管理员权限运行的问题解决方案"},{"content":"\n\n\n\t\t\twin8的应用有一定的几率会无法更新，显示未安装，是否重试，然后再所有应用里也找不到该应用，只能在应用商店的“你的应用”里看的到，于是。。。。。。蛋疼ing\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e进入正题：\u003c/div\u003e\n\u003cdiv\u003e学习自网上，做个记录。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e首先启动Windows PowerShell，有好多方法\u003c/div\u003e\n\u003cdiv\u003e\n1)鼠标右键左下角\u0026gt;命令提示符（管理员）\u0026gt;在CMD界面输入PowerShell即可进入PowerShell模式，可以看到命令提示符当前行最前面出现了PS字样\u003c/div\u003e\n\u003cdiv\u003e2)\u003cspan style=\"line-height: 21px;\"\u003e鼠标右键左下角\u0026gt;命令提示符（管理员）\u0026gt;在CMD界面输入start\npowershell，就会弹出powershell的命令行界面\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e3)打开开始菜单，右键选所有应用，在里面可以找到Windows\nPowerShell程序，但是记得用管理员权限运行，原因后面说\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e\u003cbr /\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e步骤：\u003c/div\u003e\n\u003cdiv\u003e命令一：Get-AppxPackage \u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e ##获取App列表\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e命令二：Remove-AppxPackage+空格+PackageFullName \u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003ePackageFullName需要在上面的列表中找\n\u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n##其实这个名称是这个应用在C:Program FilesWindowsApps下的目录名\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e命令二需要管理员权限，否则会出现卸载失败的情况\u003c/div\u003e\n\n","cover":"","link":"completely_remove_win8_metro_corrupted_applications.html","preview":"","title":"彻底删除win8 Metro 损坏应用"},{"content":"\n\n\n本文和电脑无关，不过还是想写一下\n\n突然兴起想把前不久下的X-PLORE破解下，也当个“无三秒”，于是各种搜索。搜到了很多旧的，还有新的方法，不过有些已经不适合最新版的了，一般有三个阶段：1.22版，直接注册机即可；1.43版，直接八门神器修改；1.51++，需要制作好的和手机串号绑定的两个激活文件。不断摸索，总算有个比较顺畅的过程了。\n\n准备工作：\nSMARTSIS 智能打包解包软件  1\nX-PLORE 1.52破解专用版  2\n八门神器  3 \n文件动力  4\npython平台  5\n汉化风暴  6\n名片缓存 7\n手机串号 8\n相应的注册码（用1.22版的注册机即可） 9\nX-PLORE最新版（或者其他美化版，只要是未破解的即可） 10\n\n过程开始：\n1. 安装1~7所有软件，运行2、3、6\n\n2. 2中选择注册，输入`52207`，注册成功，按拨号键切换到3中，左键精确搜索`-1129720349`，出来的数据，左键数据控制，保存列表，到E根目录，长按功能表键，强制结束`X-PLORER`进程。\n3. 切换到6，找到`C:\\sysbinx-plore.exe`,打开之，找到\n`liu405216645`,修改为8中的串号，左键保存退出。\n\n4. 运行2，输入9中的注册码，确定。按拨号键，左键数据控制，读取列表，出来一些数据，若尾数为奇数则改为“原数-1”，若为偶数则修改为“原数+1”。\n5）重新启动`X-PLORE`，如果没有网络连接的提示，说明成功了，否则重新开始吧。\n6）进入4，找到`C:\\system\\data\\`下找到`devlist.dat`,`DvViewer.hap`,备份出来即为补丁了\n7）安装10，把上面的两个文件覆盖回去即可。\n\n","cover":"","link":"x-plore_158_crack_process.html","preview":"","title":"X-PLORE 1.58破解过程"},{"content":"\n\n\n\u003cbr /\u003e\n\u003cbr /\u003e\n\u003cbr /\u003e\n\u003cbr /\u003e\n过程还是有惊无险的，正常点亮\n\u003cdiv\u003e\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=6126855701012zis\u0026amp;url=http://s1.sinaimg.cn/orignal/612685574cc92a0baa8e0\" target=\"_blank\"\u003e\u003c/a\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n惊：还是缺少经验，毕竟是第一次嘛，你懂的。本来以为直接装上去就行了，没想到直接就连BIOS都进不去，然后小键盘和大写锁定的灯一直亮着，就那么一直黑屏。于是一开始先怀疑是不是内存条的问题，但根据我现在的情况很明显不是嘛，呵呵。把原来的内存拿下来换上新的，照样可以点亮，这里有个特征，\u003c/div\u003e\n\u003cdiv\u003e一个是BIOS可以检测到新内存，另一个比较直接，就是如果按开机键，然后硬盘灯亮了，就说明正常了，呵呵。\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e然后反复尝试了之后，总算确定是内存没插好的原因，具体是这样的。先上张图\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\n\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=6126855701012zis\u0026amp;url=http://s5.sinaimg.cn/orignal/612685574cc92a2714214\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/612685574cc92a2714214.jpg\" width=\"240\" height=\"180\" name=\"image_operate_31921350830100098\" alt=\"M50Vc折腾之升级内存\" title=\"M50Vc折腾之升级内存\" /\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\n关键在于金手指的缺口的地方。我的机子不知道怎么回事，上下两个插槽有点不一样，怎么不一样呢，“摩擦”不一样，对，上面的插槽比下面的难插，本来以为已经固定好了，其实没有。\u003c/div\u003e\n\u003cdiv\u003e\n这里有个心得，如果直着插不进，就把内存条抬起来一些，一般到45度这样就可以了，最后一定要使缺口那个地方的那个白的塑料片完全嵌入缺口才算真正的安装完成。至此，全部搞定！\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\n另外，想换内存的朋友，如果是冲着双通道去的，一定要考虑一下你的CPU速度。这是个教训，如果你的windows评分里CPU速度本来就和内存的一样，那我告诉你，装完内存，你的评分不会有一点变化，因为内存最终还是要靠CPU读取的，CPU慢的话，内存再快也没用。\u003c/div\u003e\n\u003cdiv\u003e\n所以我觉得，想升级硬件第一个要升级的就是CPU了，否则什么都是浮云。我现在也知道为什么我的硬盘是5400转的了，因为CPU太慢，硬盘快有啥用呢，哈哈。\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e这次还顺便清了一下灰，虽然不是很彻底，但还凑活。温度是这样的\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003eCPU下降了4度，显卡下降4度，硬盘下降1度，不知道是不是测试条件不一样，反正定时清理是没错的。\u003c/div\u003e\n\u003cdiv\u003e下一步准备把多出来的内存做个内存盘了，爽一把！\u003c/div\u003e\n\n","cover":"","link":"m50vc_toss_of_upgrading_memory.html","preview":"","title":"M50Vc折腾之升级内存"},{"content":"\n\n\n\t\t\t这个居然没什么人关心，还好我搜索能力还行。唉，到处都是不折腾的傻瓜派，搜到的帖子基本都是“我也有相同问题啊。。。。”“重启啊。。。。”之类的云云，无语了好久。。\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e我找的方法有四个：\u003c/div\u003e\n\u003cdiv\u003e\n1.BIOS设置。这真的是坑爹的货，应该是针对最古老的系统和电脑的，你说win7下完全正常的东西，到win8下BIOS还能变了？\u003c/div\u003e\n\u003cdiv\u003ePS：台式机可以试试\u003c/div\u003e\n\u003cdiv\u003e\n2.重启。即在登录界面打开NumLock然后直接重启，我的感觉，直接说吧，没用，win8下没用！！！！！！！其他系统再说吧\u003c/div\u003e\n\u003cdiv\u003e3.win+R 〉“sysedit”\n〉回车，启用16位程序支持，切换到Config.sys的页面，在Files=40下面加一行，输入“\u003cspan style=\"color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei', simsun; line-height: 28px; background-color: rgb(255, 255, 255);\"\u003eNumLock=ON”，不带引号，保存并关闭。\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont color=\"#444444\" face=\"Tahoma, Microsoft Yahei, Simsun\"\u003e\u003cspan style=\"line-height: 28px;\"\u003ePS：尚未测试，建议不这么干，除非有经验，sys这种文件还是少操作的好\u003c/span\u003e\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont color=\"#444444\" face=\"Tahoma, Microsoft Yahei, Simsun\"\u003e\u003cspan style=\"line-height: 28px;\"\u003e4.注册表。我搜到的文章基本说注册表没用的，其实是他们找的方法有错误吧。真正的注册表位置应该是\u003c/span\u003e\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cdiv\u003e\u003cfont color=\"#444444\" face=\"Tahoma, Microsoft Yahei, Simsun\"\u003e\u003cspan style=\"line-height: 28px;\"\u003e[HKEY_USERS.DEFAULTControl\nPanelKeyboard]\u003c/span\u003e\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\"InitialKeyboardIndicator\u003cwbr\u003es\"=\"2\"\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n解释一下，HKEY_USERS代表的是本机上所有用户，可能他们找的是HKEY_CURRENT_USERS，这样就是概念的问题了，前者是所有用户，而后者是当前用户，但是在你还在输入密码的时候，你还不是当前用户，于是必须改前面那个位置，找到\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"color: rgb(68, 68, 68); line-height: 21px;\"\u003eInitialKeyboardIndicator\u003cwbr\u003es更改其值为2即可，实测成功。有兴趣的可以修改后，导出注册表，备份起来。\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"color: rgb(68, 68, 68); line-height: 21px;\"\u003e\u003cbr /\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont color=\"#444444\"\u003e吐槽下win8的图片密码，为啥我键盘输入比拿鼠标划快呢，果然是平板设计的么，\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont color=\"#444444\"\u003e为啥要划三次呢\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"color: rgb(68, 68, 68); line-height: 21px;\"\u003e啥要划三次呢\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"color: rgb(68, 68, 68); line-height: 21px;\"\u003e要划三次呢\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"color: rgb(68, 68, 68); line-height: 21px;\"\u003e划三次呢\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"color: rgb(68, 68, 68); line-height: 21px;\"\u003e三次呢\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"color: rgb(68, 68, 68); line-height: 21px;\"\u003e次呢\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont color=\"#444444\"\u003e呢\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n","cover":"","link":"win8_boot_automatically_turn_on_numlock.html","preview":"","title":"win8开机自动打开NumLock"},{"content":"\n\n\n\t\t\t装完win8并激活已经有一段时间了，现在来写点感觉。\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n1.想当初，从xp转到win7，一个很重要的原因就是win7那“特明显”的淡入淡出效果和Aero了，我对窗口效果还是挺有要求的，但是一个有点急性子的人自然也要追求下性能的。为此经常有事没事就把ubuntu装上感觉一下，后来ubuntu改了界面，那个搜索程序然后运行的功能真是“渣”透顶了，怎么说呢，那个明明就是给老外用的，我装一个名字是中文的软件，我搜索的时候还得切个输入法，win7也是一样的，不但要切换，而且还经常搜不到，而且还慢，所以很多人就抛弃了搜索功能。回来看win8，默认的输入法，默认中文输入，很好，虽然可能功能方面还是有点精简，但是要那么多功能干啥呢，一个输入法就该做输入法该做的，不该做的也掺和不是坑爹么。性能的话，win7和8只要把窗口的淡入淡出关掉，感觉还是很明显的，窗口秒开。和ubuntu比一下，算了吧，一个天上一个地下的，比如：窗口不“独立”，ubuntu的一个子窗口打开的时候，主窗口还是能拖来拖去的，windows就只会给你发出警告声，这是让我集中注意力还是怎么的。。。。另外我发现ubuntu跑虚拟机绝对比windows好，windows一开虚拟机，50CPU一占，然后“虚拟机就成了主机，主机就成了废机！”\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n2.win8的混合启动很好，我是单系统的，所以无所谓系统损耗问题，很开心。因为是渣配置，所以win7开机的时候要等那四个徽标闪个半天，去个厕所回来还在那闪。win8的基本回个头就到登陆界面了，效率就是这么出来的，我还用秒表掐过了，确实快很多。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n3.win8取消了Aero，我觉得很好，我那天看了一下午这界面，瞬间对win7一点兴趣都没有了，哈哈！那个根据壁纸改变任务栏的功能也很好。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n4.有人还在折腾着把经典的开始菜单整回来，我觉得没啥必要，在win7的时候就觉得开始菜单很鸡肋，启动个附件程序还要鼠标滚半天，然后点开。特别是搜索，反正在经常提示搜不到文件的时候我就抛弃这货了。而且把开始图标也去掉了，我也不用纠结着换个啥图标好了。当然了萝卜青菜各有所爱。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n5.Ribbon界面也很有爱，经常点好几下才出来的菜单，直接就有了。不过我一般让它隐藏起来，因为。。。。。。真是亲娘的占地方啊，本来笔记本分辨率和屏幕都小\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e6.配置同步。很好的功能，像有些应用的设置，只要设置过，下次重装就不用设置了，比如邮件。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e7.重装快，当然是一种感觉了，时间没算过，我具体比较几个地方好了。\u003c/div\u003e\n\u003cdiv\u003e1）win8安装过程中的准备文件那个地方比win7的快，以前win7还会卡在某一个百分比半天。。\u003c/div\u003e\n\u003cdiv\u003e2）我感觉上win8的整体安装快了许多，以前win7要1个小时，当然这只是感觉了，也许是心理作用吧\u003c/div\u003e\n\u003cdiv\u003e\n3）自从有了应用这东西，我装完系统后就基本不给C盘软件了，能用应用就用应用，应用太烂再装，不能用绿色版再装，现在程序列表里也没几个程序。于是以前重装一次，基本上要1小时安装再加n小时装软件，搞完一个下午就没了\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n8.网络功能好，主要体现在连接速度上，连接无线，VPN都很快，特别是无线，没有了以前在那傻呼呼跑的进度条，断开的时候就更快了，win7有时候还会断不开。。。。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n9.IE10，说实话比IE9快了很多，主要在启动速度上，不知道是浏览器还是系统的原因。但是嘛，我还是不用作主浏览器，为啥，广告啊，安全性啊，独爱Chrome，啦啦啦。。。。所以IE还是备用\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e10.虚拟光驱自带了，虽然只支持ISO，但足够了，真到万不得已，就祭出UltraISO，终于可以不装那货了\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e11.向上按钮，虽然我已经习惯没有向上按钮的日子，还是得拿出来说\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e12.牛X的任务管理器。一目了然，还能管理启动项，话说msconfig里面干嘛不删了“启动”标签页\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e13.用到了再补充。。。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\n","cover":"","link":"win8_in_win7.html","preview":"","title":"win8之于win7"},{"content":"\n\n\n\t\t\t被此程序骚扰已久，难免不舒服，到了win8这种想法更重了。听说win8的应用能拿到的权限是有限的，就连QQ都只做聊天的工作了，我觉得挺好的，于是连UAC也舍不得关了，呵呵\u003cimg type=\"face\" src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/E___6725EN00SIGG.gif\" alt=\"干掉renrenservice.exe\" title=\"干掉renrenservice.exe\" /\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e进入正题：\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont color=\"#454545\" face=\"Microsoft Yahei, 微软雅黑, Tahoma, Arial, Helvetica, STHeiti\"\u003e在C:Users你的用户名AppDataRoamingrenren.com下找到以下几个文件\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"color: rgb(69, 69, 69); font-family: 'Microsoft Yahei', 微软雅黑, Tahoma, Arial, Helvetica, sTHeiti; line-height: 21px; background-color: rgb(255, 255, 255);\"\u003e\ncrashrept.exe\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"color: rgb(69, 69, 69); font-family: 'Microsoft Yahei', 微软雅黑, Tahoma, Arial, Helvetica, sTHeiti; line-height: 21px; background-color: rgb(255, 255, 255);\"\u003e\nRenRenMsg.exe\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"color: rgb(69, 69, 69); font-family: 'Microsoft Yahei', 微软雅黑, Tahoma, Arial, Helvetica, sTHeiti; line-height: 21px; background-color: rgb(255, 255, 255);\"\u003e\nRenRenService.exe\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"color: rgb(69, 69, 69); font-family: 'Microsoft Yahei', 微软雅黑, Tahoma, Arial, Helvetica, sTHeiti; line-height: 21px; background-color: rgb(255, 255, 255);\"\u003e\nRenRenUpdate.exe\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont color=\"#454545\" face=\"Microsoft Yahei, 微软雅黑, Tahoma, Arial, Helvetica, STHeiti\"\u003e直接删了，然后新建文件夹并重命名，得到四个名为\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cdiv style=\"line-height: 21px;\"\u003e\u003cspan style=\"font-family: 'Microsoft Yahei', 微软雅黑, Tahoma, Arial, Helvetica, sTHeiti; line-height: 21px; color: rgb(69, 69, 69); background-color: rgb(255, 255, 255);\"\u003e\ncrashrept.exe\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv style=\"line-height: 21px;\"\u003e\u003cspan style=\"font-family: 'Microsoft Yahei', 微软雅黑, Tahoma, Arial, Helvetica, sTHeiti; line-height: 21px; color: rgb(69, 69, 69); background-color: rgb(255, 255, 255);\"\u003e\nRenRenMsg.exe\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv style=\"line-height: 21px;\"\u003e\u003cspan style=\"font-family: 'Microsoft Yahei', 微软雅黑, Tahoma, Arial, Helvetica, sTHeiti; line-height: 21px; color: rgb(69, 69, 69); background-color: rgb(255, 255, 255);\"\u003e\nRenRenService.exe\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv style=\"line-height: 21px;\"\u003e\u003cspan style=\"font-family: 'Microsoft Yahei', 微软雅黑, Tahoma, Arial, Helvetica, sTHeiti; line-height: 21px; color: rgb(69, 69, 69); background-color: rgb(255, 255, 255);\"\u003e\nRenRenUpdate.exe\u003c/span\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv style=\"line-height: 21px;\"\u003e\n的文件夹，在你没对win8的权限进行操作之前，这几个文件夹是默认为只读的\u003c/div\u003e\n\u003cdiv style=\"line-height: 21px;\"\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv style=\"line-height: 21px;\"\u003e但是这样操作后，发现一个更严重的情况，流氓至极\u003c/div\u003e\n\u003cdiv style=\"line-height: 21px;\"\u003e\n客户端自动去网络上下载RenRenServicePackage.zip.tmp，这个包，即自动恢复\u003c/div\u003e\n\u003cdiv style=\"line-height: 21px;\"\u003e索性删了这个文件，然后新建一个文件夹命名之。\u003c/div\u003e\n\u003cdiv style=\"line-height: 21px;\"\u003e\n不放心，于是用自带的资源监视器，查看网络访问，大致是北京的ip和西安的ip，难以确定。\u003c/div\u003e\n\u003cdiv style=\"line-height: 21px;\"\u003e\n最后，不敢下手，给跪！重新删掉那几个文件夹，卸载好了，折腾不起。。。。\u003c/div\u003e\n\n","cover":"","link":"kill_renrenserviceexe.html","preview":"","title":"干掉renrenservice.exe"},{"content":"\n\n\n\u003cdiv\u003e准备：\u003c/div\u003e\n\u003cdiv\u003eNT6 HDD Installer \u0026nbsp;\u003cwbr\u003eor \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003eWin7\nPE\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003eWindows 8 专业版镜像ISO\u003c/div\u003e\n\u003cdiv\u003e安装密钥[一个即可，用纸记下] 或者用免序列号安装的方法\u003c/div\u003e\n\u003cdiv\u003e激活密钥[若干，找最新的，多准备几个]\u003c/div\u003e\n\u003cdiv\u003e备份各种数据，准备一个LIVE账号\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e步骤：\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e1.解压ISO镜像到非系统盘[可新建一个文件夹，路径尽量不包括中文]\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e2.重启动，设置BIOS。插入U盘，进入PE\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e3.如果PE中有NT6 HDD\nInstaller则直接使用。我没有，所以用更简单的[可以PE下格式化系统盘，系统盘尽量多留点空间，我留了30G，应该够用了]，直接启动那个文件夹下的\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\nSetup.exe，按照操作进行[之中可以再次格式化，并且输入安装密钥]，等待各种准备完成提示重启[个人感觉比win7的快多了，就下楼买包烟的时间就完成了]\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e4.重启后各种等待，直到输入账号，直到进入Metro界面，安装完成\u003c/div\u003e\n\u003cdiv\u003e5.联网，下载skype，注册。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e6.关键了，在你准备的激活密钥里找一个，右键屏幕左下角，运行命令提示符（管理员），输入slmgr.vbs -ipk\nXXXXXXXXXXX\u003c/div\u003e\n\u003cdiv\u003eXXXXX代表你的密钥，包括“-”，提示成功后，再输入SLUI 4，回车，直接跳到电话激活页面。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e7.拨打800免费电话，接下来依次要按的是 1〉#〉9组数字，每一组输完会说“Thank\nyou！”，最后一组输完后会说“Please wait while your confirmation number\nis\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\ngenerated.”[我还差点把fifth听成sixth]。然后等一会，如果你听到了unable那说明密钥失效了，挂断换个密钥。如果成功，会说On\nhow many computers is your product\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003ecurrently installed，即问你在几台电脑上激活，这里按1即可。然后听到now you will hear\nthe confirmation ID readout，下面就是A-H的数字了，仔细听，听一次，记到本\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e子上，然后按*重新听一遍校对一下[如果对英语有信心就一次吧，记到本子上是有用的，推荐这么做]\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e8.最后把你几下的数字填进去就好，激活完成。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e9.以后你重装的时候，只要再次使用激活成功的那个密钥，然后使用SLUI 4\n，输入本子上的那些数字，直接可以激活了，无需再次打电话，即[电脑的各种信息+激活密钥=唯一的9\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e组数字=唯一的8组返回的数字=激活]\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e至此激活完成。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e1.驱动。\u003c/div\u003e\n\u003cdiv\u003e\n其他驱动全部用默认系统自带的，显卡的装NVIDIA官网的最新版，这里注意一下，虽然官网显示是支持win8的但是需要用win7兼容模式安装。具体是：先运行驱动程序，它会释放\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n文件到C盘根目录，释放完之后，直接点取消安装，进到C盘的NVIDIA文件夹里面找到setup.exe，右键属性，选择兼容模式为Windows7，管理员权限运行，然后运行之，接下来就能\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e顺利安装[我把NVIDIA的声卡驱动、3DVision和啥啥更新取消了，感觉没什么用]\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e2.软件。\u003c/div\u003e\n\u003cdiv\u003e1）QQ选QQ2012 beta的，Metro版的确实不怎么样\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n2）解压软件选winrar，原来使用好压的，但：1.win8支持ISO加载了2.好压的查看图片需要安装软件了[恶心]3.好压不支持显示分卷压缩文件的卷号，即如果你下载的分卷压缩文\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e件的文件名都是乱码的话你就蛋疼了，而winRAR会显示是第几个卷\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e3）虚拟光驱，暂时不选择。主要因为平时接触的也就ISO较多，win8好像是不支持ISZ等格式，如果遇到可以装Daemon\nTools，也可以用Ultraiso转换一下格式\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e4）人人感觉Metro版挺好的，桌面版的还有个RenRenservice.exe这个蛋疼的东西\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e5）Office选择OFFICE2010，用office2010\ntoolkit。pdf觉得自带的挺好的，反正我也一般只是浏览一下pdf内容而已，够用了。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e6）下载软件首选IDM，然后是迅雷VIP尊贵版[不是官方版的]\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n7）浏览器选择Chrome，感觉IE10相对来讲比IE8、IE9的速度快，嗯，真的。Chrome的话，去广告和安全方面还是很放心的然后配合插件。。。。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e8）图片浏览器，还是Picasa，自带的实在是慢。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e9）安全。不装，用自带的，注意一定要添加explorer.exe的信任。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e10）媒体，用Potplayer绿色版，加上itunes皮肤，完美。Foobar2000-Metro版，完美\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e11）应用方面正在研究中\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e总体感觉：\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n前段时间把win7的一些窗口特效给取消了，发现真的很快，可能win7的淡入淡出时间有点长吧，win8反应挺快的，比起我前段时间在用的ghost版的win7，很大的问题就是内存占用\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e很大，1G左右，不知道是怎么管理的，不过使用还是很顺畅的。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e左上角的切换很给力，左下角的微型开始菜单也很牛，右下角的显示桌面基本不用了，我宁愿win+d。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e我原来从来没觉得，到了win8我才知道，原来Alt+F4是神快捷键啊\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e现在遇到一个后缀名未知的文件也比以前好了，以前还要半天找，现在直接像右键菜单一样选了，特别是hosts文件\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003ewin8启动的确快了一些[用秒表掐的]\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n输入法挺好的，搜索的时候可以直接输入中文，虽然不习惯一直shift切换，但习惯就好，不用像以前搜索还要切个输入法先\u003c/div\u003e\n\n","cover":"","link":"win8_installation_experience.html","preview":"","title":"win8安装体验"},{"content":"\n\n\n\t\t\t这本子是在09暑假买的，当时对电脑一窍不通，也没找到懂的人，就这么糊里糊涂地买了。算了老事不谈，进正文\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e1.\u003c/div\u003e\n\u003cdiv\u003eM50Vc AHCI模式启动\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e看了相关文章，以前感觉很麻烦地事儿，没想到这么简单就搞定了，不知道咋回事，呵呵。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e因为情况特殊，就简单讲。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e我的情况是\u003c/div\u003e\n\u003cdiv\u003eBIOS里已启动AHCI模式，系统内也提示AHCI 1.0。\n\u0026nbsp;\u003cwbr\u003e于是，把这个设备的驱动更新下就好。手动选择驱动位置，定位到下载的AHCI驱动文件夹，然后重启一次，开始安装设备。再次重启就显示\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003eIntel(R) ICH9M-E/M SATA AHCI Controller\n\u0026nbsp;\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e原本硬盘还在右下角显示的也不见了。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e2.\u003c/div\u003e\n\u003cdiv\u003eBIOS刷新\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e其实本来也早想做了的，一直苦于了解不够，还有那句“有风险”\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e终于下定决心搞定。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e先把软激活卸载了重启查看slic表，提示找不到，系统需要立即激活\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e直接开机F2进入BIOS，Advanced选项卡里，选择Start Easy\nFlash，然后选择事先放在C盘根目录下的BIOS文件（后缀为.212），过程很顺利，刷完就关机了，然后启动，提示要激活，选择稍后询问，选择OEM导入工具导入信息，出现了已激活，和ASUS的商标，至此全部搞定。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e其实很想升级显卡、CPU、硬盘、内存，可惜没有米，可惜了解不足，可惜没有技术支持，等以后有精力有能力再折腾吧\u003c/div\u003e\n\n","cover":"","link":"for_asus_notebook_m50vc_do_two_things.html","preview":"","title":"对ASUS Notebook M50Vc做的两件事"},{"content":"\n\n\n\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e症状：双击盘符，双击文件夹，会在新窗口中打开\u003c/b\u003e\u003c/font\u003e\n\u003cdiv\u003e\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e处理：在文件夹选项中设置在同一个窗口中打开----失效\u003c/b\u003e\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e\u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e 删除注册表\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e或者导入注册表方式-----失效\u003c/wbr\u003e\u003c/b\u003e\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e\u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e 运行以下代码\u003c/wbr\u003e\u003c/b\u003e\u003c/font\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e\u003cspan style=\"background-color: rgb(255, 255, 255); font-family: Tahoma, 微软雅黑; line-height: 18px;\"\u003e\n\u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u003c/wbr\u003e\u003c/span\u003e\u003cspan style=\"background-color: rgb(255, 255, 255); font-family: Tahoma, 微软雅黑; line-height: 18px;\"\u003eregsvr32\n\"%SystemRoot%System32actxprxy.dll\"\u003c/span\u003e\u003c/b\u003e\u003c/font\u003e\u003c/div\u003e\n\u003cp style=\"font-family: Tahoma, 微软雅黑; margin: 5px auto; line-height: 18px; background-color: rgb(255, 255, 255);\"\u003e\n\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e\u0026nbsp;\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\nregsvr32 \"%ProgramFiles%Internet\nExplorerieproxy.dll\"\u003c/wbr\u003e\u003c/b\u003e\u003c/font\u003e\u003c/p\u003e\n\u003cp style=\"font-family: Tahoma, 微软雅黑; margin: 5px auto; line-height: 18px; background-color: rgb(255, 255, 255);\"\u003e\n\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e发现后者无法运行，会报错。\u003c/b\u003e\u003c/font\u003e\u003c/p\u003e\n\u003cp style=\"font-family: Tahoma, 微软雅黑; margin: 5px auto; line-height: 18px; background-color: rgb(255, 255, 255);\"\u003e\n\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e经过询问，妹子说把IE9卸载了，坑爹！\u003c/b\u003e\u003c/font\u003e\u003c/p\u003e\n\u003cp style=\"font-family: Tahoma, 微软雅黑; margin: 5px auto; line-height: 18px; background-color: rgb(255, 255, 255);\"\u003e\n\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e于是重新下载并安装，重启。一看，哇，Internet\nExplorer文件夹里面只有一个signup文件夹，根本没装上啊，再装一次，坑爹，说已经有更新得版本了，日，于是去修改注册表，发现行不通，天啊。\u003c/b\u003e\u003c/font\u003e\u003c/p\u003e\n\u003cp style=\"font-family: Tahoma, 微软雅黑; margin: 5px auto; line-height: 18px; background-color: rgb(255, 255, 255);\"\u003e\n\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e最后，我发明了一个办法，把自己的IE目录下的ieproxy.dll和Internet\nExplorer.exe拷贝过去，再次运行，成功！\u003c/b\u003e\u003c/font\u003e\u003c/p\u003e\n\u003cp style=\"font-family: Tahoma, 微软雅黑; margin: 5px auto; line-height: 18px; background-color: rgb(255, 255, 255);\"\u003e\n\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e\u003cbr /\u003e\u003c/b\u003e\u003c/font\u003e\u003c/p\u003e\n\u003cp style=\"font-family: Tahoma, 微软雅黑; margin: 5px auto; line-height: 18px; background-color: rgb(255, 255, 255);\"\u003e\n\u003cfont style=\"font-size: 16px;\"\u003e\u003cb\u003e这个故事告诉我们，不要试图卸载微软自带的软件，特别是用360这种软件卸载，否则你会哭得很有节奏！\u003c/b\u003e\u003c/font\u003e\u003c/p\u003e\n\n","cover":"","link":"win7_double-click_a_folder_to_open_in_a_new_window.html","preview":"","title":"win7双击文件夹在新窗口打开"},{"content":"\n\n\n\t\t\t以前希望一个程序在登录后运行用的方法是使用计划任务，但是计划任务打开就非常慢，哥瞬间就虚了啊\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e最近乱翻的时候发现了另一个地方---------组策略\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n按WIN+R打开运行，输入“gpedit.msc”，打开本地组策略编辑器，依次展开用户配置，管理模板，系统，登录，找到在用户登录时运行这些程序，双击它，选择已启用，然后根据右下角的帮助的提示操作，输入程序的绝对路径即可。\u003c/div\u003e\n\n","cover":"","link":"program_runs_after_login.html","preview":"","title":"程序登录后运行"},{"content":"\n\n\n\t\t\t单击引起双击甚至多击\u003cimg type=\"face\" src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/E___6702EN00SIGG.gif\" alt=\"鼠标问题解决\" title=\"鼠标问题解决\" /\u003e\n\u003cdiv\u003e原因：使用时间长，鼠标按键的触点铜片生锈或者有异物\u003c/div\u003e\n\u003cdiv\u003e方法：拆开后，打开到触点处，用针弄一丁点棉花蘸点酒精对触点进行清理，然后吹干。没酒精那就直接用针，都差不多的。\u003c/div\u003e\n\u003cdiv\u003e滚轮失灵，滚动时引起反滚，滚半天还在最上面\u003cimg type=\"face\" src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/E___6706EN00SIGG.gif\" alt=\"鼠标问题解决\" title=\"鼠标问题解决\" /\u003e\u003c/div\u003e\n\u003cdiv\u003e原因：可能是受潮的缘故\u003c/div\u003e\n\u003cdiv\u003e\n方法：打开后找到滚轮的那个模块，用吹风机开低风热风档，吹，注意不要吹得太热，重复几次。亲测，比以前好多了，但还是有一点。估计要在鼠标里放个干燥剂了。\u003c/div\u003e\n\u003cdiv\u003e突然间，各个地方的滚动条都无法拖动了，一拖就发病似的乱抖\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e更新：\u003c/div\u003e\n\u003cdiv\u003e原因分析：本质触点接触不良\u003c/div\u003e\n\u003cdiv\u003e所谓接触不良就是......就是接触不良嘛，能是什么原因\u003c/div\u003e\n\u003cdiv\u003e\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=612685570100zsz4\u0026amp;url=http://s7.sinaimg.cn/orignal/61268557gcaa70bd6ef16\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://s7.sinaimg.cn/middle/61268557gcaa70bd6ef16\u0026amp;690\" width=\"690\" height=\"449\" alt=\"鼠标问题解决\" title=\"鼠标问题解决\" /\u003e\u003c/a\u003e\u003cbr /\u003e\n如上图所示（网上转来的），一般都是1那个位置的那个弹性金属片弹性不足或者软化（传说中的超出了弹性界限），导致产生的固定力不足，于是就会发生滚轮的时候“反转”现象（即向下滚的时候会出现向上滚，然后半天也没滚下多少，呵呵，比较难描述...）\u003c/div\u003e\n\u003cdiv\u003e解决办法：高富帅直接买个新的鼠标吧。\u003c/div\u003e\n\u003cdiv\u003e\n其实有个好东西叫做“订书针”，直接空着钉出一个订书针（即直接按下订书机），出来那个东西就能直接用了，方法是把它插入到2的位置的那个缝隙中，调整调整即可。然后你的滚轮就会比较紧了。\u003c/div\u003e\n\u003cdiv\u003e方法：是不是把USB键盘放在笔记本键盘上了啊，拿下来就没事了\u003cimg type=\"face\" src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/E___6724EN00SIGG.gif\" alt=\"鼠标问题解决\" title=\"鼠标问题解决\" /\u003e\u003c/div\u003e\n\n","cover":"","link":"mouse_problem_solving.html","preview":"","title":"鼠标问题解决"},{"content":"\n\n\n \n指针型变量里存储着地址，和一般的变量没有本质区别，而存储的这个地址对应着一个变量（或者其他什么，这里以变量为例），那么 `*p` 可以访问这个地址对应的变量此处的`*`和定义指针型变量时\n `int *p`的`*`是不一样的, `\u0026+变量名`则表示这个变量的地址.\n\n这个例子很容易把人搞晕，特别是当参数名和某个变量名一样的时候。总算不晕了，\n[狸猫换太子  C程序分析](http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif)\n```c\n#include\u003cstdio.h\u003e\n#define CIVET 0\n#define PRINCE 1\nint main(void)\n{\nint baby=PRINCE;      \n     \n//此处baby是一个属于main（）函数的局部变量，被赋予了初值1 \nprintf(\"before change,baby is\");\ndisplay(baby);\nreplace1(baby);   \n//此处等价于replace1（1） \nprintf(\"n\")\nprintf(\"after first action,baby is\");\ndisplay(baby);\nreplace2(\u0026baby);   \n//将局部变量baby的地址传入这个子程序   \n     \nprintf(\"n\");\nprintf(\"after second action,baby is\");\ndisplay(baby);\nreturn 0;\n}\nvoid replace1(int baby)      \n//此处baby为一个参数的名字，仅仅是参数名.如果将此处的baby改为shabi什么的就容易理解了吧 \n{\nbaby=CIVET;      \n  //此处baby仍然是个参数名，在replace1（）被调用时被赋值为1.在此处又被赋值一次，而传入的只是那个局部变量的值而已，因此局部变量的值没变 \n}\nvoid replace2(int * baby)  //此处这个指针型参数“baby” 被赋值为局部变量“baby”的地址，此处改为“int * shaA”是不是更容易理解呢 \n{\n*baby=CIVET;         //*baby是调用传入的地址的那个变量，即baby那个局部变量 \n}\nvoid display(int who)\n{\nif(who==CIVET)\nprintf(\"狸猫\");\nelse if(who==PRINCE)\nprintf(\"王子\");\n}\n```\n\n总之，想对另一个子程序的某个局部变量进行修改，只能用指针方式进行修改。\n\n","cover":"","link":"c_program_analysis.html","preview":"","title":"狸猫换太子 C程序分析"},{"content":"\n\n\n\u003cdiv\u003eFibonacci 序列产生程序－－－－线程的创建\u003c/div\u003e\n\u003cdiv\u003e#include\u0026lt;pthread.h\u0026gt;\u003c/div\u003e\n\u003cdiv\u003e#include\u0026lt;stdio.h\u0026gt;\u003c/div\u003e\n\u003cdiv\u003efloat \u0026nbsp;\u003cwbr\u003eb[100]; \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e int甚至long long\nint都不能满足后面指数般递增的数列，直接float省事儿\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003eint n=100;\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003evoid *f() \u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e带参数的函数在创建线程时，各种错误啊，于是换一个\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e{\u003c/div\u003e\n\u003cdiv\u003eint i;\u003c/div\u003e\n\u003cdiv\u003eb[0]=0;\u003c/div\u003e\n\u003cdiv\u003eb[1]=1;\u003c/div\u003e\n\u003cdiv\u003ei=2; \u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e 此处为必须的，否则会得不到需要的结果，伤心的往事。。。\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003ewhile(i\u0026lt;=n) \u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e 该循环为主要的计算循环，是傻瓜式的\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e{\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003eb[i]=b[i-1]+b[i-2];\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003ei++;\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e}\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003esleep(3);\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n此处是为了让所谓线程更加形象，因为现在的CPU运算太快了！呵呵\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003ereturn 0;\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e}\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003eint main()\u003c/div\u003e\n\u003cdiv\u003e{\u003c/div\u003e\n\u003cdiv\u003epthread_t tid;\u003c/div\u003e\n\u003cdiv\u003eint a,j,ret;\u003c/div\u003e\n\u003cdiv\u003eprintf(\"请输入需要的序列项数:\"); \u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n用printf输出中文时容易造成乱码，具体方法是对当前c文件另存为UTF－8，即你拿来执行此程序的终端的编码\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003escanf(\"%d\",\u0026amp;a);\u003c/div\u003e\n\u003cdiv\u003eret=pthread_create(\u0026amp;tid,NULL,f,NULL);\u003c/div\u003e\n\u003cdiv\u003epthread_join(tid, NULL);\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e j=0;\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003ewhile(j\u0026lt;=a){\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003eprintf(\"%fn\",b[j]); \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n可以改为\u003cspan style=\"line-height: 21px;\"\u003e%.0fn\u003c/span\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003ej=j+1;\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e} 返回值什么的就不要了吧，注释真是开心的事儿\u003c/div\u003e\n\u003cdiv\u003e}\u003c/div\u003e\n\n","cover":"","link":"the_first_c_program_linux.html","preview":"","title":"第一个C程序[linux]"},{"content":"\n\n\n闪讯，恶心的家伙，本来联网的时候只弹一次的广告还能忍受，反正一天也就一次不是。可是最近，这货不知道什么时候偷偷更新了，然后居然在联网的时候弹出所谓的新闻界面，所做行为令人发指。本来第一直觉是脱壳去广告，后来一尝试，哎，水平不足啊，放弃，以后再试吧。于是网搜相关方法。\n找到了防火墙方法\n添加出站规则，阻止`Netkeeper.exe`访问以下三个地址\n\n```\n220.191.135.221\n61.164.4.165\n61.164.4.163\n```\n\n如果有必要，可以考虑在host文件里添加三条\n```\n127.0.0.1 wap.114school.cn\n127.0.0.1 business.114school.cn\n127.0.0.1 tag.114school.cn\n```\n\n然后找到config目录下，将`basic.xml`文件修改为\n```xml\n\u003c?xml version=\"1.0\" standalone=\"yes\" ?\u003e\n\u003cDialTerminal\u003e\n    \u003cwindow\u003e\n    \u003c/window\u003e\n\u003c/DialTerminal\u003e\n将config.xml修改为\n\u003c?xml version=\"1.0\" encoding=\"GBK\"?\u003e\n\u003cDialTerminal\u003e\n\u003ctabConfig\u003e\n\u003c/tabConfig\u003e\n\u003ctoolConfig\u003e\n\u003c/toolConfig\u003e\n\u003ctextAdvtConfig\u003e\n\u003c/textAdvtConfig\u003e\n\u003c/DialTerminal\u003e\n```\n保存，然后设置两个文件为只读，ok联网，那个恶心的弹出广告也没了，世界清静了。\n详细可以查看\n\u003e http://jusoy.com/blog/archives/45\n","cover":"","link":"news_flash_to_advertising.html","preview":"","title":"闪讯去广告"},{"content":"\n\n\n\t\t\t即缩写打开网页\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n具体操作方法为，右击地址栏，选\"修改搜索引擎\"，拉到最下面，“添加新搜索引擎”处，第一个框填网址对应的名字，第二个框填你要的缩写，第三个填网址，如\u003c/div\u003e\n\u003cdiv\u003e\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=612685570100yskn\u0026amp;url=http://s6.sinaimg.cn/orignal/61268557g79896a65ce75\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://s6.sinaimg.cn/middle/61268557g79896a65ce75\u0026amp;690\" width=\"690\" height=\"24\" name=\"image_operate_53891336311083478\" alt=\"chrome浏览器小技巧\" title=\"chrome浏览器小技巧\" /\u003e\u003c/a\u003e\u003cbr /\u003e\n以后直接sina然后回车，你会发现。。。。\u003c/div\u003e\n\n","cover":"","link":"chrome_browser_tips.html","preview":"","title":"chrome浏览器小技巧"},{"content":"\n\n\n\t\t\t学习自网上，做个记录\u003cbr /\u003e\n谷歌拼音输入法安装步骤(需要编译)：\u003cbr /\u003e\n1. sudo apt-get install autotools-dev libgtk2.0-dev libscim-dev\nlibtool automake (编译环境安装)\u003cbr /\u003e\n或者 aptitude install autotools-dev libgtk2.0-dev libscim-dev libtool\nautomake可自动安装\u003cbr /\u003e\n2. sudo apt-get install git\u003cbr /\u003e\n3. git clone git://github.com/tchaikov/scim-googlepinyin.git\n(编译文件下载)\u003cbr /\u003e\n4. sudo apt-get install scim （安装scim，必须的）\u003cbr /\u003e\n\u003cbr /\u003e\n进入下载文件目录然后开始编译：[这个目录其实并不在下载目录里，而是它的上一级，即主文件夹，我这是这样的]\u003cbr /\u003e\n\u0026nbsp;\u003cwbr\u003e./autogen.sh\u003cbr /\u003e\nmake\u003cbr /\u003e\nsudo make install\u003cbr /\u003e\n\u003cbr /\u003e\n开始运行谷歌输入法：\u003cbr /\u003e\nscim -d\u003cbr /\u003e\n系统设置--》语言支持：输入法，选择scim作为默认输入法就OK了。\u003cbr /\u003e\n这输入法很好用，至少比自带的好啊，不我以后都不准备换了啊。就是有一点，每次重启后都要重新调整候选框的位置，也就是候选词框不跟随输入位置，郁闷得很。\u003cbr /\u003e\n\u003cbr /\u003e\n\u003cbr /\u003e\n参考：http://forum.ubuntu.org.cn/viewtopic.php?f=8\u0026amp;t=273683\u0026amp;start=105\u003cbr /\u003e\n\u003cbr /\u003e\n\u003c/wbr\u003e\n","cover":"","link":"ubuntu_installed_google_input_method.html","preview":"","title":"ubuntu下安装google输入法"},{"content":"\n\n关于Adobe Reader打开文件后,提示\"Invalid plugin detected.Adobe Reader will quit\",开始以为是某个服务的原因,搜索后,原来是插件的问题.`C:\\Program Files\\AdobeReader 10.0\\Reader\\plug_ins`一般在这个目录.如果你装了有道词典或者其他有关的屏幕取词软件的,那么在这个目录下寻找相应的api插件,如有道词典是`YodaoDict.api`,找到这个文件,然后重命名即可(删去或修改其后缀名)\t\t\t\t\t\t\t\n\n","cover":"","link":"adobeampnbspreader.html","preview":"","title":"Adobe Reader"},{"content":"\n\n\n\t\t\t首先，先建立一个临时无线网络，各种参数随便设(什么?你不会,那问我啊,问百度去啊)\n\u003cdiv\u003e然后，连接闪讯，成功连接后 ，打开“更改适配器设置”\u003c/div\u003e\n\u003cdiv\u003eChinaNetSNWide 右键》属性，找到“网络”标签页，确认\"Microsoft\n网络文件与打印机共享\"勾上了，最好那四个全勾上了\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=612685570100x0xq\u0026amp;url=http://s11.sinaimg.cn/orignal/61268557gba61d83f1eda\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://s11.sinaimg.cn/middle/61268557gba61d83f1eda\u0026amp;690\" width=\"374\" height=\"425\" alt=\"win7共享闪讯无线法\" title=\"win7共享闪讯无线法\" /\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cbr /\u003e\n\u003cdiv\u003e\n然后切换到\"共享\"标签页,先选择\"家庭网络连接\"下面的,选择为\"无线网络连接\",有很多个无线的,最好想办法到\"控制面板网络和\nInternet网络连接\"里删掉几个,否则麻烦自负.再然后,勾上\"允许其他网络用户通过此计算机的Internet连接来连接\"和\"一旦网络上的计算机尝试访问Internet则建立一个拨号连接\",然后只要没有提示错误信息(\"无法启用共享啥的\")就一直确定.\u003c/div\u003e\n\u003cdiv\u003e\n启动闪讯终结者,输入帐号密码,连接,退出闪讯,按Ctrl+Shift+Esc打开任务管理器中结束Netkeeper.exe进程\u003c/div\u003e\n\u003cdiv\u003e关键步骤:\u003c/div\u003e\n\u003cdiv\u003e右键\"无线网络连接\"\u0026gt;属性\u0026gt;双击\"Internet协议版本\n4\",全部设置为自动获取.然后连接刚才设置的临时网络,用手机或者其他网络设备尝试连接,如果能上网,那恭喜你,尽情享受吧.如果不能上网,请往下看\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n尝试连接后不能上网,这时右键\"无线网络连接\"\u0026gt;状态\u0026gt;\"详细信息\",\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=612685570100x0xq\u0026amp;url=http://s3.sinaimg.cn/orignal/61268557gba61dd853c62\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://s3.sinaimg.cn/middle/61268557gba61dd853c62\u0026amp;690\" width=\"320\" height=\"217\" alt=\"win7共享闪讯无线法\" title=\"win7共享闪讯无线法\" /\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cbr /\u003e\n\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=612685570100x0xq\u0026amp;url=http://s16.sinaimg.cn/orignal/61268557gba61ddcf901f\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/61268557gba61ddcf901f.jpg\" width=\"250\" height=\"256\" alt=\"win7共享闪讯无线法\" title=\"win7共享闪讯无线法\" /\u003e\u003c/a\u003e\u003cbr /\u003e\n\u003cbr /\u003e\n\u003cdiv\u003e记下那个\"自动配置的IPv4地址\"后面的数字,和下面的那一排数字.\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=612685570100x0xq\u0026amp;url=http://s7.sinaimg.cn/orignal/61268557gba61da690376\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/61268557gba61da690376.jpg\" width=\"679\" height=\"424\" alt=\"win7共享闪讯无线法\" title=\"win7共享闪讯无线法\" /\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cbr /\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e 同样的方法找到ChinaNetSNWide的\"详细信息\",记下IPv4\nDNS服务器,右边的两排数字[很重要]\u003ca href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=612685570100x0xq\u0026amp;url=http://s11.sinaimg.cn/orignal/61268557gba61dbb2346a\" target=\"_blank\"\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://s11.sinaimg.cn/middle/61268557gba61dbb2346a\u0026amp;690\" width=\"545\" height=\"424\" alt=\"win7共享闪讯无线法\" title=\"win7共享闪讯无线法\" /\u003e\u003c/a\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e然后转到手机或其他设备,设置IP为你刚记下的那个IP,并且最后一位不一样,如我记下的是169.254.47.16\n那么我就设置 IP为169.254.47.X \u0026nbsp;\u003cwbr\u003e (X=0~255中不等于16的任何值)\n子网掩码设置和记下的一样,DNS一定要设置,搬上去即可,IPAD的IP设置方法可以参考\"\u003ca href=\"http://wenku.baidu.com/view/9f64c95c804d2b160b4ec055.html\"\u003ehttp://wenku.baidu.com/view/9f64c95c804d2b160b4ec055\u003c/a\u003e\u003c/wbr\u003e\u003cwbr\u003e.html\"\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e,屌丝木有IPad\u003cimg type=\"face\" src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/E___6706EN00SIGG.gif\" alt=\"win7共享闪讯无线法\" title=\"win7共享闪讯无线法\" /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cbr /\u003e\n\n","cover":"","link":"news_flash_win7_shared_wireless_france.html","preview":"","title":"win7共享闪讯无线法"},{"content":"\n\n当一个路径文本中存在空格时，需要给这个路径打上双引号，引号表示它里面的是一个完整的文本\n\n\n","cover":"","link":"windows_path.html","preview":"","title":"windows路径"},{"content":"\n\n\n\u003cp\u003e\n\u003cstrong\u003e其实不是什么新的方法，也是刚网上看到的，主要针对一种特殊情况了。当然你也可以这么设置，我想是共通的，说不定这个还好点。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\n\u003cstrong\u003e以前用win7的共享功能，一般上网方式都是，宽带连接，VPN连接，或者闪讯+“chinanet共享破解工具”（名字很多，我这么叫），其实本质都一样，一个活动的、可共享的Internet连接。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e接\n下来我讲讲特殊情况：路由器。可能有些人没有无线路由器，但是有有线路由器。这时就需要对本地连接做共享处理。我正好遇到了这种情况，尝试后我发\n现，Windows提示我要把本地连接的ip设置为192.168.137.1，这就纠结了，我想如果本地连接ip变了，那路由器ip不是也得改，于是打\n开了192.168.1.1，疼啊，DHCP项里根本只能修改最后一位啊，再试试改个子网掩码，还是不行...\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e索性不试了，搜索之....\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e终于在一个小地方瞄到了这么个东西：网桥。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e动手，\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e首先转到”控制面板网络和 Internet网络连接“，然后按住Ctrl\n\u0026nbsp;\u003cwbr\u003e选中本地连接和无线网络连接，右键“桥接”，等待网桥建立完成\u003c/wbr\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cbr /\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/other_site/fmn_b_large_jW2R_2b3800007be9125b.jpg\" data-mce-src=\"http://localhost/wp-content/uploads/pic/other_site/fmn_b_large_jW2R_2b3800007be9125b.jpg\" border=\"0\" name=\"image_operate_34721330830796713\" alt=\"2012年02月13日通过桥接共享有线路由器的网络\" title=\"2012年02月13日通过桥接共享有线路由器的网络\" /\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/other_site/fmn_b_large_cczb_1ae300001109125b.jpg\" data-mce-src=\"http://localhost/wp-content/uploads/pic/other_site/fmn_b_large_cczb_1ae300001109125b.jpg\" border=\"0\" alt=\"2012年02月13日通过桥接共享有线路由器的网络\" title=\"2012年02月13日通过桥接共享有线路由器的网络\" /\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/other_site/fmn_b_large_Aqjp_6a7a00005456125b.jpg\" data-mce-src=\"http://localhost/wp-content/uploads/pic/other_site/fmn_b_large_Aqjp_6a7a00005456125b.jpg\" border=\"0\" name=\"image_operate_63281330830796801\" alt=\"2012年02月13日通过桥接共享有线路由器的网络\" title=\"2012年02月13日通过桥接共享有线路由器的网络\" /\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e出现这么三个东西就成功了，然后右键网桥“属性”，验证ip是否是自动获取。ok\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e然后就在无线网络里添加个临时网络，具体设置可根据个人需求填写，比如\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cimg src=\"http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif\" real_src=\"http://localhost/wp-content/uploads/pic/other_site/fmn_b_large_LreT_2181000005e8125d.jpg\" data-mce-src=\"http://localhost/wp-content/uploads/pic/other_site/fmn_b_large_LreT_2181000005e8125d.jpg\" border=\"0\" name=\"image_operate_25421330830796897\" alt=\"2012年02月13日通过桥接共享有线路由器的网络\" title=\"2012年02月13日通过桥接共享有线路由器的网络\" /\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e建议WEP加密，密码输个10位数字即可\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e移动设备这边呢，比如Nokia的只需添加个接入点即可\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cbr /\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\n\u003cstrong\u003e优点：很大的优点，可以解决某些移动设备必须电脑端和设备端都要手动设置ip的问题（几千块的高级货无视这句话吧，渣手机自动获取ip能力有限....渣电脑自动分配ip能力有限....），此方法不用设ip。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cbr /\u003e\u003c/strong\u003e\u003c/p\u003e\n\n","cover":"","link":"network_february_13_2012_through_the_bridge_to_share_a_wired_router.html","preview":"","title":"2012年02月13日通过桥接共享有线路由器的网络"},{"content":"\n\n\n\u003cdiv\u003e\n也许根本没有人是从一开始，就带着“意义”出生的，大家能都必须自己去发现，寻找……也许所谓的意义，也许暧昧而不确定，或许还很不安定。但是，只要活着，就会想要知道那个意义……为了某个人而活着的自己。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e或许现在就有人羡慕我，羡慕我自己没有注意到的地方，只要这么想的话,就会想要一点一点的努力看看。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e人不是一生下来就懂得温柔的，人一生下来就是只有求生的本能\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n不管是何种回忆，都要深藏心里，并且深信着它，因为我希望没有任何回忆是可以遗忘的。有一天一定会成为能够胜过这些的自己，而且总有一天能够超越这一切，成为美好的记忆一般的相信着\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n别以为喜欢对方就可以想说什么就说什么，因你单方面的爱，造成对方沉重的负担，甚至还会伤害到对方，这种事千万不能忘记。尊敬对方的想法，设身处地替对方着想，这份心是很重要的，要不然最后会被人讨厌的\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e承认自己幼稚的人是个很有勇气的人。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e我是为了爱你才到这个世界上的哟。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e你可以为自尊而死，不过只要活下来了，不是还可以看到明天吗.\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e要是有选择什么漂漂亮亮的死法的闲暇，还不如为了活下去，漂漂亮亮的奋战到最后。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n无论是谁，双手都握着重要的东西，那份重量，背负着的时候意识不到，直到全部从手中失去的时候才意识到。不知多少次这么想，这种东西再也不背负，可是不知不觉中又背负了。也许全部卸下会轻松，可是就是做不到。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u0026nbsp;\u003cwbr\u003e堂堂正正活着的傻瓜的灵魂，即使那个身体消失了也不会消失。\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n对我来说，有比心脏更重要的器官，它虽然看不见，但我能官爵倒塌关窗与我的脑袋和双腿之间，的的确确存在于我的身体里，因为有它的存在，我才能挺直腰杆站在这里，就算摇摇晃晃也能笔直向前走，在不该止步的地方止步的话，它也会蒙受屈辱的，灵魂会收辱的。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e这个世界上没有偶然，有的只是必然。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e一个人喜欢另一个人的理由，是谁都不会懂的。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e要赢一脸输像的人是很简单的。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e真正的痛，是连痛都不能说的痛啊。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e美丽的女人流泪是一种罪恶，因为会害别人想去安慰她。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e人，没有回忆是活不下去的。但是只有回忆也是活不下去的。梦，终究是要醒的，不会醒的梦，总有一天会变成悲伤。\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e\n总觉得人是孤独的，一个人的时候是孤独的，因为没有同伴；两个人的时候是孤独的，也许会有言语，但因言语而感到心的距离；三个人的时候是孤独的，因为会被冷落；许多人的时候是孤独的，因为会被遗忘。\u0026nbsp;\u003cwbr\u003e\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\n","cover":"","link":"some_sentences.html","preview":"","title":"一些句子"},{"content":"\n\n\n\t\t\t准备：装了win7系统的笔记本电脑一台（A），其他笔记本电脑若干\n\u003cdiv\u003e先打开A的无线网络开关，确认无线工作正常\u003c/div\u003e\n\u003cdiv\u003eA \u003cspan style=\"line-height: 21px;\"\u003e按WIN+E\u003c/span\u003e\u0026nbsp;\u003cwbr\u003e，在地址栏输入“控制面板所有控制面板项网络和共享中心”（无引号），点击设置新的\u003cbr /\u003e\n\u003cdiv\u003e连接或网络，选择最后一项，设置无线临时（计算机到计算机）网络，下一步\u003c/div\u003e\n\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e然后输入网络名，随便填，安全类型选WEP，安全密钥填“1234567890”[相信我填这个]。\u003cspan style=\"line-height: 21px;\"\u003e下一步，这样就\u003c/span\u003e建立了一个无线WIFI信号。点开右下角网络图标\u003cspan style=\"line-height: 21px;\"\u003e一路\u003c/span\u003e，查看是否卡到刚建的网络是不是为等待用户\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e然后按WIN+E，然后在地址栏输入 控制面板网络和 Internet网络连接\n右键无线网络连接，打开属性，双击Internet 协议版本4 ，进入设置IP等信息。\u003c/div\u003e\n\u003cdiv\u003e例如：IP：192.168.3.3 \u0026nbsp;\u003cwbr\u003e子网掩码：255.255.255.0\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e默认网关：192.168.3.1 \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e一路确定。\u003c/wbr\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cdiv\u003e然后其他笔记本，也在无线网络连接的属性里设置IP\u003c/div\u003e\n\u003cdiv\u003e例如：\u003cspan style=\"line-height: 21px;\"\u003eIP：192.168.3.4\n\u0026nbsp;\u003cwbr\u003e子网掩码：255.255.255.0\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e默认网关：192.168.3.1\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e\u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u003c/wbr\u003e\u003c/span\u003e\u003cspan style=\"line-height: 21px;\"\u003eIP：192.168.3.5\n\u0026nbsp;\u003cwbr\u003e子网掩码：255.255.255.0\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e默认网关：192.168.3.1\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e\u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u003c/wbr\u003e\u003c/span\u003e\u003cspan style=\"line-height: 21px;\"\u003eIP：192.168.3.6\n\u0026nbsp;\u003cwbr\u003e子网掩码：255.255.255.0\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e默认网关：192.168.3.1\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e\u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u003c/wbr\u003e\u003c/span\u003e\u003cspan style=\"line-height: 21px;\"\u003eIP：192.168.3.7\n\u0026nbsp;\u003cwbr\u003e子网掩码：255.255.255.0\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e默认网关：192.168.3.1\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e\u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e .\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e\u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e .\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e\u0026nbsp;\u003cwbr\u003e\n\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e \u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e .\u003c/wbr\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e然后搜索并连接A建立的无线网络，连接之，输入密钥。\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e连接成功后，这几台电脑都是处在局域网了，如果玩游戏会卡的话可能是信号强弱问题，也可能是硬件问题。enjoy！\u003c/span\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cspan style=\"line-height: 21px;\"\u003e\u003cbr /\u003e\u003c/span\u003e\u003c/div\u003e\n\n","cover":"","link":"notebook_wireless_lan.html","preview":"","title":"笔记本无线局域网"},{"content":"\n\n\u003cdiv style=\"text-align: center;\"\u003e\n\u003cb\u003e\u0026nbsp;\u003cwbr\u003e总是一个人默默地\u003c/wbr\u003e\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e在墙角抽着烟\n\u0026nbsp;\u003cwbr\u003e\u0026nbsp;\u003c/wbr\u003e\u003cwbr\u003e\u003c/wbr\u003e\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e总是孤单单寂寞地\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e走在前面或者后面\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e也许有人会突发奇想地\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e给你一句赞许之言\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e但你已无法分清\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e那一句\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e是否由心而发\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e虽然你也会小小高兴一下\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e但那毕竟是过眼烟云\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e\u003cbr /\u003e\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e只能重复又重复地听\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e开盖和合盖\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e那熟悉而又陌生的声音\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e但为了一个“侠”字\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e这点不算什么\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e\u003cbr /\u003e\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e总是怀揣着\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e那个只有小说里\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e才会出现的逍遥梦\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e静静地企盼着\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e也能过\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e那般生活\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e\u003cbr /\u003e\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e世上本没有神\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e仰慕的人多了\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e神也就有了\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e\u003cbr /\u003e\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e总是幻想\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e幻想能够有奇遇\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e成为神的奇遇么\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e但名人说过啊\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e“机遇的雨点只会打在有准备的人身上”\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e没准备的人总能有办法\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e一一闪过的啊\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e\u003cbr /\u003e\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e总是也想学\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e神能做的事\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e也想成为神\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e俯视天地间\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e却总是有能力\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e为偷懒\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e找到借口\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e\u003cbr /\u003e\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e也想仗剑天涯\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e领略未曾见过的风景\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e也想华丽地登场\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e只留个背影\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e离开\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e\u003cbr /\u003e\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e也想有\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e另一个名字\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e即使都忘了\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e你原有的名字\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e仍然记得\u003c/b\u003e\u003c/div\u003e\n\u003cdiv style=\"text-align: center;\"\u003e\u003cb\u003e......\u003c/b\u003e\u003c/div\u003e\n\n","cover":"","link":"always.html","preview":"","title":"总是"},{"content":"\n\nCOD8通关，下次试试高点的难度。话说英语听力真差啊，压力好大，换汉化，好好体会剧情\t\t\t\t\t\t\t\n\t\t\n","cover":"","link":"cod8_clearance.html","preview":"","title":"COD8通关"},{"content":"\n\n1. 尽量不要安装第三方主题，因为第三方的主题一般都需要替换`explorer.exe` `shell32.dll` `ExplorerFrame.dll`三个文件，而制作者的系统版本和你的一般不会一样，而且经过修改的文件，很可能会发生很多不稳定的现象。亲身经历，原版文件一点问题都没有，替换后，有些程序就经常出现崩溃的现象（比如，关闭的时候崩溃，郁闷，又或者游戏崩溃，比如红警2，替换了之后，不管怎么调兼容选项，死活在中途跳出，不替换果断顺利地玩）。真的有需要安装的，简单，认真学主题制作，用工具自己修改，否则各种崩溃，各种无响应等着你\n\n2. 字体替换慎重，字体删除慎重。先说删除字体，有些人有洁癖，总想着给C盘瘦身，于是到最后决定对font目录下手，呵呵，我试过删除。然后发现，原本一些看起来丝毫没用的字体，居然是有用的，因为一些软件会调用它们，删了你就等着看着一大片方格子吧。字体替换，由于字体间距宽度大小的不同，往往替换后的字体无法正常显示，比如斩头斩脚，或者干脆不显示（浪漫雅圆替换宋体后...）。还有一些用于替换的字体，因为制作者的不严谨，可能不包含一些字符，比如一些特殊符号，或者外语的符号，于是显示方格子\n\n3. 字体渲染要慎重`MacType`都知道吧，渲染字体用的，可以光滑字体边缘，挺好。于是期望所有程序都能被渲染到，于是选择注册表模式，然后发现一款网游的字体不支持，直接模糊成一坨，，什么破游戏，另，这程序别看不怎么占资源，其实也有的，像桌面特效的软件占的资源都不小，关掉一般都能快不少。\n\n4. 优化，先说说管理员权限，很多人在右键添加了获取管理员权限，然后就给C盘的Windows文件夹的大部分文件都给“获取”一次，然后.....我就这样，郁闷。这货会造成“权限失禁”，呵呵，比如错误711，就是宽带连接那个问题，网上的解决办法是给wmi文件夹获取权限即可，其实都忽略了它产生的原因，原因是`WindowsEventLog`这个服务还有一堆服务，因为权限问题，开机时无法启动，然后拨号必须的服务没了，自然不能拨号了。根据我的经历推断，造成711的凶手就是给`system32`文件夹获取了管理员权限，至少我不获取权限的时候，从来不会出现711错误。所以不要听信什么“获取权限即可删除文件”什么的，删不掉可以装个`unlocker`，比权限靠谱，或者试着重命名一下，你会发现....实在不行，重启下`explorer`。\n服务的问题，不用优化，顶多关个传真机，关个打印机，其他的别动，你真想精简，那还是直接下精简的系统吧，最近装了个精简了很多功能的`win7sp1`，很不错，精简了媒体中心，游戏，示例图片等一些用不上的东西。\n清理垃圾的问题，也没必要，特别是一些临时文件，留着没什么关系，像优化软件删这删那的总有一天出问题，早就不用了。\n\n\n","cover":"","link":"win7_optimized_for_landscaping_advice.html","preview":"","title":"对win7优化美化的忠告"},{"content":"\n\n首先说明我的方法很另类，不是单纯的备份，而是......见下\n\n我使用的是`Windows`里自带的一个命令`mklink`，即符号链接，从效果上看其实和快捷方式没什么区别，但还是有不同的。比如你在C盘建立了一个符号链接，链接到D盘的一个文件夹，例如你的C盘本来有一个文件夹`a`，里面是一些程序，然后你可以通过“运行”打开相关程序，那么这时你可以把文件夹`a`剪切到D盘根目录，然后在C盘建立符号链接，最后你就可以运行`c:\\a\\XX.exe`,来达到运行在`D:\\a\\XX.exe`里面的程序的目的。简单的说，`mklink`是一个可以把文件转移到任意地方，却不影响其他程序的工具。不像有些程序修改“我的文档”的位置时，还要修改注册表。\n\n最终，你可以把系统盘的所有重要文件，甚至TEMP目录，甚至一个程序的安装目录，全部转移到其他盘，可以达到为C盘瘦身的目的，关键是，不用承担什么风险，符号链接丢了重新建一个即可。\n上传一个自己编写的符号链接创建工具，缺点很多，见谅，有需要的可以下载，易语言编写，小红伞查过无毒，信不过的别下。\n\n[符号链接工具][1]\n\n\n  [1]: http://www.vdisk.cn/down/index/9012829A4263\n","cover":"","link":"data_backup_is_recommended.html","preview":"","title":"资料备份方式推荐"},{"content":"\n\n继上次中毒后，选择了重装这条路，幸好系统盘里除了软件什么都没有，省去了很多步骤，采用方法\n\n[链接][1]\n\n只备份了utorrent的记录文件【运行`%Appdata%`即可找到】和桌面上的文件，开始重装......\n\n尝试了一下那个传说中的win7精简版，使用GHOST安装，安装过程一切正常，装完后，关闭UAC，激活，还原桌面，安装显卡驱动，设置环境变量等等，突然看到桌面上一堆office文件，想起要装office。本来安装一切顺利，但因为采用了，一种特别的激活方式（删除文件，删除注册表），导致打开文件时提示许可证什么的，郁闷，只好重新安装，然而新问题出来了：每次安装到最后，总会提示安装过程中出错，我想难道是卸载未完全，于是拿出了office2010完全卸载工具，清理......重启，安装.....汗，再次出现了。没办法，我可不想重装系统，搜索.....终于发现了一篇  \n[文章][2]\n\n，帮了大忙，果然是其中一个组件的问题，于是尝试之，成功！哈哈！\n\n\n同时想分享一个技巧，即自定义工具，运行cmd后，cd到office2010的虚拟光驱的盘符，然后输入setup.exe\n/admin回车可以打开，在里面配置各种安装选项，可以使你的后续安装过程更加简化（无需设置了），重点是里面有一项是“删除以前的office”而这一项在直接启动setup.exe是无法设置的。同时这个方法保存的配置文件可以留着下次安装用或者给别人用，很好。\n据说原文地址是\n[原文地址][3]\n反正我卡得打不开\n[链接][4]\n这个打得开\n\n\n\n  [1]: http://blog.sina.com.cn/s/blog_612685570100u9w7.html\n  [2]: http://wenku.baidu.com/view/48df653b580216fc700afd65.html\n  [3]: http://www.sxqisheng.com/jishuinfo.asp?id=59\n  [4]: http://blog.pconline.com.cn/article/2240473.html\n","cover":"","link":"office2010_installation_in_mind_after_a_reload.html","preview":"","title":"记一次重装后的office2010安装"}]